/* **************************************************************************** */
/* Florian Hamburg Mod                                                          */
/* Copyright © Eins Eins Zwo Modifications - www.112-mods.de	                */
/*                                                                              */
/* INSTALL_DEINSTALL.SCRIPT - Installieren und Deinstallieren von Objekten,	*/
/* 			      beispielweise einer Drehleiter.                   */
/*                                                                              */
/* Dieses Commandscript dient zum installieren und Deinstallieren von Objekten, */
/* zum Beispiel einer Drehleiter an einem Haus mit entsprechender Ausrichtung   */
/* in die jeweilige Richtung nach dem Deinstallieren.                           */
/*                                                                              */
/* Original-Script: Witchdoc, bergp83				                */
/* Änderungen von : Eins Eins Zwo Modifications                                 */
/*                                                                              */
/* 16.09.2007, SM,   Initial-Version                                            */
/* 31.07.2008, SM,   Zusammenführung von Install- und Deinstall-Scripts.        */
/* 12.10.2008, SM,   Stützen der TMFs werden ein- bzw. ausgeblendet.            */
/*                                                                              */
/* **************************************************************************** */

object Install_Nord: CommandScript
{
	Vector TargetPos;
	VehicleType vtype;
	int InstallPointID;

	Install_Nord()
	{
		SetValidTargets(ACTOR_VEHICLE|ACTOR_OPEN_HOUSE|ACTOR_FLOOR);
//		SetGroupID(CGROUP_INSTALL);
		SetIcon("Install");
		SetCursor("Install");
		SetGroupLeader(true);
		SetPriority(50);		
	}
	
	bool CheckGroupVisibility(GameObject *Caller)
	{
		if(!Caller->IsValid() || Caller->GetType() != ACTOR_VEHICLE)
			return false;
		Vehicle v(Caller);
		return !v.IsInstalled();
	}

	bool CheckPossible(GameObject *Caller)
	{
		if(!Caller->IsValid() || Caller->GetType() != ACTOR_VEHICLE)
			return false;
		Vehicle v(Caller);
		if (v.GetVehicleType() == VT_THW_FGRB_BLF)
			return Game::ExistsFreeBridgeInstallPoint();
		else if (v.GetVehicleType() == VT_FIREFIGHTERS_DLK)
			return true;

		return false;
	}
	
	bool CheckTarget(GameObject *Caller, Actor *Target, int childID)
	{
		if(!Caller->IsValid() || Caller->GetType() != ACTOR_VEHICLE)
			return false;
		Vehicle v(Caller);
		vtype = v.GetVehicleType();
		if (vtype == VT_FIREFIGHTERS_DLK)
		{
			if (!Target->IsValid() || v.IsUplifting())
				return false;
			if(Target->GetType() == ACTOR_OPEN_HOUSE)
			{
				OpenHouse targetHouse(Target);
				if (!targetHouse.IsValid() || targetHouse.HasGroundEntrance()
					|| !targetHouse.IsFlagSet(OF_ACCESSIBLE) || v.GetInstallTargetID() == Target->GetID())
				        return false;
				return true;
			}
			if(Caller->GetID() == Target->GetID() && !v.IsInstalled() && !v. IsUplifted())
			{
				return true;
			}			
			return false;			
		} else 
		if (vtype == VT_THW_FGRB_BLF)
		{
			if (Caller->GetID() == Target->GetID() || v.IsFGRBEmpty())
				return false;
			TargetPos = Game::GetCommandPos();
			InstallPointID = v.GetBridgeInstallPoint(TargetPos.x, TargetPos.y, TargetPos.z);
			if (InstallPointID == -1)
				return false;
			return true;
		}
			
		return false;
	}
			
	void PushActions(GameObject *Caller, Actor *Target, int childID)
	{
		if (vtype == VT_THW_FGRB_BLF)
		{
			Caller->PushActionMove(ACTION_NEWLIST, InstallPointID, TARGET_INSTALL_FGRB);
			Caller->PushActionInstall(ACTION_APPEND, InstallPointID);
		}
		else if (vtype == VT_FIREFIGHTERS_DLK)
		{
			Vehicle v(Caller);
			bool deinstall = false;
			bool basketdown = false;
			if (Target->GetType() == ACTOR_OPEN_HOUSE)
			{
				if (v.IsInstalled())
				   	deinstall = true;
				if (v.IsUplifted())
				   	basketdown = true;
				TargetPos = Target->GetTargetPoint(Caller, TARGET_ENTRY_WINDOW_PARKING);
			}
			if(Caller->GetID() != Target->GetID() || v.IsInstalled() || v. IsUplifted())
			{
				if (basketdown && deinstall)
				{
					Caller->PushActionBasketDown(ACTION_NEWLIST, Vector(0.f, 0.f, 0.f));
					Caller->PushActionDeinstall(ACTION_APPEND);
					Caller->PushActionExecuteCommand(ACTION_APPEND, "Stuetzen", Caller, 1, false);
					Caller->PushActionMove(ACTION_APPEND, TargetPos);
				}
				else if (deinstall)
				{
					Caller->PushActionDeinstall(ACTION_NEWLIST);
					Caller->PushActionExecuteCommand(ACTION_APPEND, "Stuetzen", Caller, 1, false);
					Caller->PushActionMove(ACTION_APPEND, TargetPos);
				}
				else if (basketdown)
				{
					Caller->PushActionBasketDown(ACTION_NEWLIST, Vector(0.f, 0.f, 0.f));
					Caller->PushActionMove(ACTION_APPEND, TargetPos);
				}
				else
				    Caller->PushActionMove(ACTION_NEWLIST, TargetPos);
				if (!deinstall)
				   	Caller->PushActionMove(ACTION_NEWLIST, TargetPos);
			}
			Caller->PushActionExecuteCommand(ACTION_APPEND, "Stuetzen", Caller, 0, false);
			Caller->PushActionInstall(ACTION_APPEND, Target);
			Caller->EnableCommand("gohome_nord", false);
			Caller->EnableCommand("VCmdSiren", false);
			Caller->EnableCommand("Deinstall_Nord", true);
			Caller->PushActionExecuteCommand(ACTION_APPEND, "DUMMYEnableLights", Caller, 1, false);
		}

		if (Caller->GetType() == ACTOR_VEHICLE)
		{
			Vehicle v(Caller);
			v.PushActionExecuteCommand(ACTION_APPEND, "DUMMYDisableSiren", Caller, 2, false);
		}
	}
};





object Install_Ost: CommandScript
{
	Vector TargetPos;
	VehicleType vtype;
	int InstallPointID;

	Install_Ost()
	{
		SetValidTargets(ACTOR_VEHICLE|ACTOR_OPEN_HOUSE|ACTOR_FLOOR);
//		SetGroupID(CGROUP_INSTALL);
		SetGroupLeader(true);
		SetIcon("Install");
		SetCursor("Install");
		SetPriority(50);		
	}
	
	bool CheckGroupVisibility(GameObject *Caller)
	{
		if(!Caller->IsValid() || Caller->GetType() != ACTOR_VEHICLE)
			return false;
		Vehicle v(Caller);
		return !v.IsInstalled();
	}

	bool CheckPossible(GameObject *Caller)
	{
		if(!Caller->IsValid() || Caller->GetType() != ACTOR_VEHICLE)
			return false;
		Vehicle v(Caller);
		if (v.GetVehicleType() == VT_THW_FGRB_BLF)
			return Game::ExistsFreeBridgeInstallPoint();
		else if (v.GetVehicleType() == VT_FIREFIGHTERS_DLK)
			return true;

		return false;
	}
	
	bool CheckTarget(GameObject *Caller, Actor *Target, int childID)
	{
		if(!Caller->IsValid() || Caller->GetType() != ACTOR_VEHICLE)
			return false;
		Vehicle v(Caller);
		vtype = v.GetVehicleType();
		if (vtype == VT_FIREFIGHTERS_DLK)
		{
			if (!Target->IsValid() || v.IsUplifting())
				return false;
			if(Target->GetType() == ACTOR_OPEN_HOUSE)
			{
				OpenHouse targetHouse(Target);
				if (!targetHouse.IsValid() || targetHouse.HasGroundEntrance()
					|| !targetHouse.IsFlagSet(OF_ACCESSIBLE) || v.GetInstallTargetID() == Target->GetID())
				        return false;
				return true;
			}
			if(Caller->GetID() == Target->GetID() && !v.IsInstalled() && !v. IsUplifted())
			{
				return true;
			}			
			return false;			
		} else 
		if (vtype == VT_THW_FGRB_BLF)
		{
			if (Caller->GetID() == Target->GetID() || v.IsFGRBEmpty())
				return false;
			TargetPos = Game::GetCommandPos();
			InstallPointID = v.GetBridgeInstallPoint(TargetPos.x, TargetPos.y, TargetPos.z);
			if (InstallPointID == -1)
				return false;
			return true;
		}
			
		return false;
	}
			
	void PushActions(GameObject *Caller, Actor *Target, int childID)
	{
		if (vtype == VT_THW_FGRB_BLF)
		{
			Caller->PushActionMove(ACTION_NEWLIST, InstallPointID, TARGET_INSTALL_FGRB);
			Caller->PushActionInstall(ACTION_APPEND, InstallPointID);
		}
		else if (vtype == VT_FIREFIGHTERS_DLK)
		{
			Vehicle v(Caller);
			bool deinstall = false;
			bool basketdown = false;
			if (Target->GetType() == ACTOR_OPEN_HOUSE)
			{
				if (v.IsInstalled())
				   	deinstall = true;
				if (v.IsUplifted())
				   	basketdown = true;
				TargetPos = Target->GetTargetPoint(Caller, TARGET_ENTRY_WINDOW_PARKING);
			}
			if(Caller->GetID() != Target->GetID() || v.IsInstalled() || v. IsUplifted())
			{
				if (basketdown && deinstall)
				{
					Caller->PushActionBasketDown(ACTION_NEWLIST, Vector(0.f, 0.f, 0.f));
					Caller->PushActionDeinstall(ACTION_APPEND);
					Caller->PushActionExecuteCommand(ACTION_APPEND, "Stuetzen", Caller, 1, false);
					Caller->PushActionMove(ACTION_APPEND, TargetPos);
				}
				else if (deinstall)
				{
					Caller->PushActionDeinstall(ACTION_NEWLIST);
					Caller->PushActionExecuteCommand(ACTION_APPEND, "Stuetzen", Caller, 1, false);
					Caller->PushActionMove(ACTION_APPEND, TargetPos);
				}
				else if (basketdown)
				{
					Caller->PushActionBasketDown(ACTION_NEWLIST, Vector(0.f, 0.f, 0.f));
					Caller->PushActionMove(ACTION_APPEND, TargetPos);
				}
				else
				    Caller->PushActionMove(ACTION_NEWLIST, TargetPos);
				if (!deinstall)
				   	Caller->PushActionMove(ACTION_NEWLIST, TargetPos);
			}
			Caller->PushActionExecuteCommand(ACTION_APPEND, "Stuetzen", Caller, 0, false);
			Caller->PushActionInstall(ACTION_APPEND, Target);
			Caller->EnableCommand("gohome_ost", false);
			Caller->EnableCommand("VCmdSiren", false);
			Caller->EnableCommand("Deinstall_Ost", true);
			Caller->PushActionExecuteCommand(ACTION_APPEND, "DUMMYEnableLights", Caller, 1, false);
		}

		if (Caller->GetType() == ACTOR_VEHICLE)
		{
			Vehicle v(Caller);
			v.PushActionExecuteCommand(ACTION_APPEND, "DUMMYDisableSiren", Caller, 2, false);
		}
	}
};









object Install_Sued: CommandScript
{
	Vector TargetPos;
	VehicleType vtype;
	int InstallPointID;

	Install_Sued()
	{
		SetValidTargets(ACTOR_VEHICLE|ACTOR_OPEN_HOUSE|ACTOR_FLOOR);
//		SetGroupID(CGROUP_INSTALL);
		SetGroupLeader(true);
		SetIcon("Install");
		SetCursor("Install");
		SetPriority(50);		
	}
	
	bool CheckGroupVisibility(GameObject *Caller)
	{
		if(!Caller->IsValid() || Caller->GetType() != ACTOR_VEHICLE)
			return false;
		Vehicle v(Caller);
		return !v.IsInstalled();
	}

	bool CheckPossible(GameObject *Caller)
	{
		if(!Caller->IsValid() || Caller->GetType() != ACTOR_VEHICLE)
			return false;
		Vehicle v(Caller);
		if (v.GetVehicleType() == VT_THW_FGRB_BLF)
			return Game::ExistsFreeBridgeInstallPoint();
		else if (v.GetVehicleType() == VT_FIREFIGHTERS_DLK)
			return true;

		return false;
	}
	
	bool CheckTarget(GameObject *Caller, Actor *Target, int childID)
	{
		if(!Caller->IsValid() || Caller->GetType() != ACTOR_VEHICLE)
			return false;
		Vehicle v(Caller);
		vtype = v.GetVehicleType();
		if (vtype == VT_FIREFIGHTERS_DLK)
		{
			if (!Target->IsValid() || v.IsUplifting())
				return false;
			if(Target->GetType() == ACTOR_OPEN_HOUSE)
			{
				OpenHouse targetHouse(Target);
				if (!targetHouse.IsValid() || targetHouse.HasGroundEntrance()
					|| !targetHouse.IsFlagSet(OF_ACCESSIBLE) || v.GetInstallTargetID() == Target->GetID())
				        return false;
				return true;
			}
			if(Caller->GetID() == Target->GetID() && !v.IsInstalled() && !v. IsUplifted())
			{
				return true;
			}			
			return false;			
		} else 
		if (vtype == VT_THW_FGRB_BLF)
		{
			if (Caller->GetID() == Target->GetID() || v.IsFGRBEmpty())
				return false;
			TargetPos = Game::GetCommandPos();
			InstallPointID = v.GetBridgeInstallPoint(TargetPos.x, TargetPos.y, TargetPos.z);
			if (InstallPointID == -1)
				return false;
			return true;
		}
			
		return false;
	}
			
	void PushActions(GameObject *Caller, Actor *Target, int childID)
	{
		if (vtype == VT_THW_FGRB_BLF)
		{
			Caller->PushActionMove(ACTION_NEWLIST, InstallPointID, TARGET_INSTALL_FGRB);
			Caller->PushActionInstall(ACTION_APPEND, InstallPointID);
		}
		else if (vtype == VT_FIREFIGHTERS_DLK)
		{
			Vehicle v(Caller);
			bool deinstall = false;
			bool basketdown = false;
			if (Target->GetType() == ACTOR_OPEN_HOUSE)
			{
				if (v.IsInstalled())
				   	deinstall = true;
				if (v.IsUplifted())
				   	basketdown = true;
				TargetPos = Target->GetTargetPoint(Caller, TARGET_ENTRY_WINDOW_PARKING);
			}
			if(Caller->GetID() != Target->GetID() || v.IsInstalled() || v. IsUplifted())
			{
				if (basketdown && deinstall)
				{
					Caller->PushActionBasketDown(ACTION_NEWLIST, Vector(0.f, 0.f, 0.f));
					Caller->PushActionDeinstall(ACTION_APPEND);
					Caller->PushActionExecuteCommand(ACTION_APPEND, "Stuetzen", Caller, 1, false);
					Caller->PushActionMove(ACTION_APPEND, TargetPos);
				}
				else if (deinstall)
				{
					Caller->PushActionDeinstall(ACTION_NEWLIST);
					Caller->PushActionExecuteCommand(ACTION_APPEND, "Stuetzen", Caller, 1, false);
					Caller->PushActionMove(ACTION_APPEND, TargetPos);
				}
				else if (basketdown)
				{
					Caller->PushActionBasketDown(ACTION_NEWLIST, Vector(0.f, 0.f, 0.f));
					Caller->PushActionMove(ACTION_APPEND, TargetPos);
				}
				else
				    Caller->PushActionMove(ACTION_NEWLIST, TargetPos);
				if (!deinstall)
				   	Caller->PushActionMove(ACTION_NEWLIST, TargetPos);
			}
			Caller->PushActionExecuteCommand(ACTION_APPEND, "Stuetzen", Caller, 0, false);
			Caller->PushActionInstall(ACTION_APPEND, Target);
			Caller->EnableCommand("gohome_sued", false);
			Caller->EnableCommand("VCmdSiren", false);
			Caller->EnableCommand("Deinstall_Sued", true);
			Caller->PushActionExecuteCommand(ACTION_APPEND, "DUMMYEnableLights", Caller, 1, false);
		}

		if (Caller->GetType() == ACTOR_VEHICLE)
		{
			Vehicle v(Caller);
			v.PushActionExecuteCommand(ACTION_APPEND, "DUMMYDisableSiren", Caller, 2, false);
		}
	}
};





object Install_West: CommandScript
{
	Vector TargetPos;
	VehicleType vtype;
	int InstallPointID;

	Install_West()
	{
		SetValidTargets(ACTOR_VEHICLE|ACTOR_OPEN_HOUSE|ACTOR_FLOOR);
//		SetGroupID(CGROUP_INSTALL);
		SetGroupLeader(true);
		SetIcon("Install");
		SetCursor("Install");
		SetPriority(50);		
	}
	
	bool CheckGroupVisibility(GameObject *Caller)
	{
		if(!Caller->IsValid() || Caller->GetType() != ACTOR_VEHICLE)
			return false;
		Vehicle v(Caller);
		return !v.IsInstalled();
	}

	bool CheckPossible(GameObject *Caller)
	{
		if(!Caller->IsValid() || Caller->GetType() != ACTOR_VEHICLE)
			return false;
		Vehicle v(Caller);
		if (v.GetVehicleType() == VT_THW_FGRB_BLF)
			return Game::ExistsFreeBridgeInstallPoint();
		else if (v.GetVehicleType() == VT_FIREFIGHTERS_DLK)
			return true;

		return false;
	}
	
	bool CheckTarget(GameObject *Caller, Actor *Target, int childID)
	{
		if(!Caller->IsValid() || Caller->GetType() != ACTOR_VEHICLE)
			return false;
		Vehicle v(Caller);
		vtype = v.GetVehicleType();
		if (vtype == VT_FIREFIGHTERS_DLK)
		{
			if (!Target->IsValid() || v.IsUplifting())
				return false;
			if(Target->GetType() == ACTOR_OPEN_HOUSE)
			{
				OpenHouse targetHouse(Target);
				if (!targetHouse.IsValid() || targetHouse.HasGroundEntrance()
					|| !targetHouse.IsFlagSet(OF_ACCESSIBLE) || v.GetInstallTargetID() == Target->GetID())
				        return false;
				return true;
			}
			if(Caller->GetID() == Target->GetID() && !v.IsInstalled() && !v. IsUplifted())
			{
				return true;
			}			
			return false;			
		} else 
		if (vtype == VT_THW_FGRB_BLF)
		{
			if (Caller->GetID() == Target->GetID() || v.IsFGRBEmpty())
				return false;
			TargetPos = Game::GetCommandPos();
			InstallPointID = v.GetBridgeInstallPoint(TargetPos.x, TargetPos.y, TargetPos.z);
			if (InstallPointID == -1)
				return false;
			return true;
		}
			
		return false;
	}
			
	void PushActions(GameObject *Caller, Actor *Target, int childID)
	{
		if (vtype == VT_THW_FGRB_BLF)
		{
			Caller->PushActionMove(ACTION_NEWLIST, InstallPointID, TARGET_INSTALL_FGRB);
			Caller->PushActionInstall(ACTION_APPEND, InstallPointID);
		}
		else if (vtype == VT_FIREFIGHTERS_DLK)
		{
			Vehicle v(Caller);
			bool deinstall = false;
			bool basketdown = false;
			if (Target->GetType() == ACTOR_OPEN_HOUSE)
			{
				if (v.IsInstalled())
				   	deinstall = true;
				if (v.IsUplifted())
				   	basketdown = true;
				TargetPos = Target->GetTargetPoint(Caller, TARGET_ENTRY_WINDOW_PARKING);
			}
			if(Caller->GetID() != Target->GetID() || v.IsInstalled() || v. IsUplifted())
			{
				if (basketdown && deinstall)
				{
					Caller->PushActionBasketDown(ACTION_NEWLIST, Vector(0.f, 0.f, 0.f));
					Caller->PushActionDeinstall(ACTION_APPEND);
					Caller->PushActionExecuteCommand(ACTION_APPEND, "Stuetzen", Caller, 1, false);
					Caller->PushActionMove(ACTION_APPEND, TargetPos);
				}
				else if (deinstall)
				{
					Caller->PushActionDeinstall(ACTION_NEWLIST);
					Caller->PushActionExecuteCommand(ACTION_APPEND, "Stuetzen", Caller, 1, false);
					Caller->PushActionMove(ACTION_APPEND, TargetPos);
				}
				else if (basketdown)
				{
					Caller->PushActionBasketDown(ACTION_NEWLIST, Vector(0.f, 0.f, 0.f));
					Caller->PushActionMove(ACTION_APPEND, TargetPos);
				}
				else
				    Caller->PushActionMove(ACTION_NEWLIST, TargetPos);
				if (!deinstall)
				   	Caller->PushActionMove(ACTION_NEWLIST, TargetPos);
			}
			Caller->PushActionExecuteCommand(ACTION_APPEND, "Stuetzen", Caller, 0, false);
			Caller->PushActionInstall(ACTION_APPEND, Target);
			Caller->EnableCommand("gohome_west", false);
			Caller->EnableCommand("VCmdSiren", false);
			Caller->EnableCommand("Deinstall_West", true);
			Caller->PushActionExecuteCommand(ACTION_APPEND, "DUMMYEnableLights", Caller, 1, false);
		}

		if (Caller->GetType() == ACTOR_VEHICLE)
		{
			Vehicle v(Caller);
			v.PushActionExecuteCommand(ACTION_APPEND, "DUMMYDisableSiren", Caller, 2, false);
		}
	}
};

object Deinstall_Nord: CommandScript
{
	Deinstall_Nord()
	{
	      	SetIcon("Deinstall");
	      	SetCursor("Deinstall");
		SetValidTargets(ACTOR_VEHICLE);
//		SetGroupID(CGROUP_INSTALL);
//		SetRestrictions(RESTRICT_SELFEXECUTE);
		SetPriority(80);
	}

	bool CheckGroupVisibility(GameObject *Caller)
	{
		if(!Caller->IsValid() || Caller->GetType() != ACTOR_VEHICLE)
			return false;
		Vehicle v(Caller);
		return v.IsInstalled();
	}

	bool CheckTarget(GameObject *Caller, Actor *Target, int childID)
	{
		if(!Caller->IsValid() || !Target->IsValid() || Caller->GetID() != Target->GetID() || Caller->GetType() != ACTOR_VEHICLE)
			return false;

		Vehicle v(Caller);
		if (!v.IsInstalled() || v.IsUplifted() || v.IsUplifting() || !v.IsBasketEmpty())
			return false;
		

		return true;
	}

	void PushActions(GameObject *Caller, Actor *Target, int childID)
	{
		Caller->PushActionDeinstall(ACTION_NEWLIST);
		Caller->PushActionExecuteCommand(ACTION_APPEND, "Stuetzen", Caller, 1, false);
		Caller->EnableCommand("gohome_nord", true);
		Caller->EnableCommand("VCmdSiren", true);
		Caller->PushActionExecuteCommand(ACTION_APPEND, "DUMMYEnableLights", Caller, 2, false);
		if (Caller->GetType() == ACTOR_VEHICLE)
		{
			Vehicle v(Caller);
			v.PushActionExecuteCommand(ACTION_APPEND, "DUMMYDisableSiren", Caller, 2, false);
		}
		if (Caller->HasCommand("Deinstal_TMF_F12"))
			Caller->EnableCommand("Deinstall_TMF_F12", true);
		if (Caller->HasCommand("Deinstal_TMF_F22"))
			Caller->EnableCommand("Deinstall_TMF_F22", true);
		if (Caller->HasCommand("Deinstal_DLK_F23"))
			Caller->EnableCommand("Deinstall_DLK_F23", true);
		if (Caller->HasCommand("Deinstal_TMF_F33"))
			Caller->EnableCommand("Deinstall_TMF_F33", true);
	}
};






object Deinstall_Ost: CommandScript
{
	Deinstall_Ost()
	{
	      	SetIcon("Deinstall");
	      	SetCursor("Deinstall");
		SetValidTargets(ACTOR_VEHICLE);
//		SetGroupID(CGROUP_INSTALL);
//		SetRestrictions(RESTRICT_SELFEXECUTE);
		SetPriority(80);
	}

	bool CheckGroupVisibility(GameObject *Caller)
	{
		if(!Caller->IsValid() || Caller->GetType() != ACTOR_VEHICLE)
			return false;
		Vehicle v(Caller);
		return v.IsInstalled();
	}

	bool CheckTarget(GameObject *Caller, Actor *Target, int childID)
	{
		if(!Caller->IsValid() || !Target->IsValid() || Caller->GetID() != Target->GetID() || Caller->GetType() != ACTOR_VEHICLE)
			return false;

		Vehicle v(Caller);
		if (!v.IsInstalled() || v.IsUplifted() || v.IsUplifting() || !v.IsBasketEmpty())
			return false;
		

		return true;
	}

	void PushActions(GameObject *Caller, Actor *Target, int childID)
	{
		Caller->PushActionDeinstall(ACTION_NEWLIST);
		Caller->PushActionExecuteCommand(ACTION_APPEND, "Stuetzen", Caller, 1, false);
		Caller->EnableCommand("gohome_ost", true);
		Caller->EnableCommand("VCmdSiren", true);
		Caller->PushActionExecuteCommand(ACTION_APPEND, "DUMMYEnableLights", Caller, 2, false);
		if (Caller->GetType() == ACTOR_VEHICLE)
		{
			Vehicle v(Caller);
			v.PushActionExecuteCommand(ACTION_APPEND, "DUMMYDisableSiren", Caller, 2, false);
		}
		if (Caller->HasCommand("Deinstal_TMF_F12"))
			Caller->EnableCommand("Deinstall_TMF_F12", true);
		if (Caller->HasCommand("Deinstal_TMF_F22"))
			Caller->EnableCommand("Deinstall_TMF_F22", true);
		if (Caller->HasCommand("Deinstal_DLK_F23"))
			Caller->EnableCommand("Deinstall_DLK_F23", true);
		if (Caller->HasCommand("Deinstal_TMF_F33"))
			Caller->EnableCommand("Deinstall_TMF_F33", true);
	}
};






object Deinstall_Sued: CommandScript
{
	Deinstall_Sued()
	{
	      	SetIcon("Deinstall");
	      	SetCursor("Deinstall");
		SetValidTargets(ACTOR_VEHICLE);
//		SetGroupID(CGROUP_INSTALL);
//		SetRestrictions(RESTRICT_SELFEXECUTE);
		SetPriority(80);
	}

	bool CheckGroupVisibility(GameObject *Caller)
	{
		if(!Caller->IsValid() || Caller->GetType() != ACTOR_VEHICLE)
			return false;
		Vehicle v(Caller);
		return v.IsInstalled();
	}

	bool CheckTarget(GameObject *Caller, Actor *Target, int childID)
	{
		if(!Caller->IsValid() || !Target->IsValid() || Caller->GetID() != Target->GetID() || Caller->GetType() != ACTOR_VEHICLE)
			return false;

		Vehicle v(Caller);
		if (!v.IsInstalled() || v.IsUplifted() || v.IsUplifting() || !v.IsBasketEmpty())
			return false;
		

		return true;
	}

	void PushActions(GameObject *Caller, Actor *Target, int childID)
	{
		Caller->PushActionDeinstall(ACTION_NEWLIST);
		Caller->PushActionExecuteCommand(ACTION_APPEND, "Stuetzen", Caller, 1, false);
		Caller->EnableCommand("gohome_sued", true);
		Caller->EnableCommand("VCmdSiren", true);
		Caller->PushActionExecuteCommand(ACTION_APPEND, "DUMMYEnableLights", Caller, 2, false);
		if (Caller->GetType() == ACTOR_VEHICLE)
		{
			Vehicle v(Caller);
			v.PushActionExecuteCommand(ACTION_APPEND, "DUMMYDisableSiren", Caller, 2, false);
		}
		if (Caller->HasCommand("Deinstal_TMF_F12"))
			Caller->EnableCommand("Deinstall_TMF_F12", true);
		if (Caller->HasCommand("Deinstal_TMF_F22"))
			Caller->EnableCommand("Deinstall_TMF_F22", true);
		if (Caller->HasCommand("Deinstal_DLK_F23"))
			Caller->EnableCommand("Deinstall_DLK_F23", true);
		if (Caller->HasCommand("Deinstal_TMF_F33"))
			Caller->EnableCommand("Deinstall_TMF_F33", true);
	}
};






object Deinstall_West: CommandScript
{
	Deinstall_West()
	{
	      	SetIcon("Deinstall");
	      	SetCursor("Deinstall");
		SetValidTargets(ACTOR_VEHICLE);
//		SetGroupID(CGROUP_INSTALL);
//		SetRestrictions(RESTRICT_SELFEXECUTE);
		SetPriority(80);
	}

	bool CheckGroupVisibility(GameObject *Caller)
	{
		if(!Caller->IsValid() || Caller->GetType() != ACTOR_VEHICLE)
			return false;
		Vehicle v(Caller);
		return v.IsInstalled();
	}

	bool CheckTarget(GameObject *Caller, Actor *Target, int childID)
	{
		if(!Caller->IsValid() || !Target->IsValid() || Caller->GetID() != Target->GetID() || Caller->GetType() != ACTOR_VEHICLE)
			return false;

		Vehicle v(Caller);
		if (!v.IsInstalled() || v.IsUplifted() || v.IsUplifting() || !v.IsBasketEmpty())
			return false;
		

		return true;
	}

	void PushActions(GameObject *Caller, Actor *Target, int childID)
	{
		Caller->PushActionDeinstall(ACTION_NEWLIST);
		Caller->PushActionExecuteCommand(ACTION_APPEND, "Stuetzen", Caller, 1, false);
		Caller->EnableCommand("gohome_west", true);
		Caller->EnableCommand("VCmdSiren", true);
		Caller->PushActionExecuteCommand(ACTION_APPEND, "DUMMYEnableLights", Caller, 2, false);
		if (Caller->GetType() == ACTOR_VEHICLE)
		{
			Vehicle v(Caller);
			v.PushActionExecuteCommand(ACTION_APPEND, "DUMMYDisableSiren", Caller, 2, false);
		}
		if (Caller->HasCommand("Deinstal_TMF_F12"))
			Caller->EnableCommand("Deinstall_TMF_F12", true);
		if (Caller->HasCommand("Deinstal_TMF_F22"))
			Caller->EnableCommand("Deinstall_TMF_F22", true);
		if (Caller->HasCommand("Deinstal_DLK_F23"))
			Caller->EnableCommand("Deinstall_DLK_F23", true);
		if (Caller->HasCommand("Deinstal_TMF_F33"))
			Caller->EnableCommand("Deinstall_TMF_F33", true);
	}
};










