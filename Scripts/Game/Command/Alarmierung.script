/* **************************************************************************** */
/* Florian Hamburg Mod                                                          */
/* Copyright © Eins Eins Zwo Modifications - www.112-mods.de	                */
/*                                                                              */
/* ALARMIERUNG.SCRIPT - Alarmieren von Fahrzeugen	     		        */
/*                                                                              */
/* Dieses Commandscript dient zur Alarmierung von Fahrzeugen einzeln oder je    */
/* je nach Schadensart.                                                         */
/*                                                                              */
/* Original-Script von  : Eins Eins Zwo Modifications	                        */
/* Ideen zum Script von : Hoppah, Witchdoctor					*/
/*                                                                              */
/* 07.07.2008, SM,   Initial-Version (Zusammenfassung aller 			*/
/* 		     Alarmierungsscripts).                                      */
/* 14.07.2008, SM,   RTH Christoph 29 hinzugefügt                               */
/* 08.10.2008, SM,   Vattenfall-Fahrzeug hinzugefügt                            */
/* 02.11.2008, SM,   Alarmierung THFLUG3R hinzugefügt                           */
/* 24.11.2008, SM,   Bei STWs wird das distanznächste Fahrzeug alarmiert	*/
/* 07.12.2008, SM,   RTH kommt jetzt von ausserhalb.				*/
/* 16.06.2009, SM,   Bug behoben, dass das THW nicht alarmiert werden konnte	*/
/* 17.06.2009, SM,   Bug behoben, dass die FF nicht alarmiert werden konnte	*/
/*                                                                              */
/* **************************************************************************** */

// helper function

Vector Einsatzort;
//--------------------------------------------------- ALARMIERUNG NACH SCHADENSART -------------------------------------------------------------------------------------------------------------------

object alarm_feuk : CommandScript
{
   alarm_feuk()
   {
      SetValidTargets(ACTOR_FLOOR);
      SetIcon("alarm_feuk");
      SetCursor("alarm_feuk");
   }

   bool CheckTarget(GameObject *Caller, Actor *Target, int childID)
   {
	if( Caller->GetID() == Target->GetID() || Target->GetType() == ACTOR_VEHICLE || Target->GetType() == ACTOR_HOUSE || Target->GetType() == ACTOR_OPEN_HOUSE || Target->GetType() == ACTOR_PERSON || Target->GetType() == ACTOR_OBJECT)
         return false;
      return true;
   }

   void PushActions(GameObject *Caller, Actor *Target, int childID)
   {
    	Mission::PlayHint("FEUK: Alarmierung läuft...");

    	Einsatzort=Game::GetCommandPos();
    	if (Target->GetType() == ACTOR_FLOOR)
    	{
    		Vehicle p = Game::CreateVehicle("mod:Prototypes/Vehicles/geraete/pylone.e4p", "EinsatzortDummy");
    		p.Hide();
    		Game::FindFreePosition(&p,Einsatzort);
    		p.SetPosition(Einsatzort);
    		p.PushActionWait(ACTION_NEWLIST, 3);
    		if (Game::IsMultiplayer())
    			p.SetPlayerMP(Caller->GetPlayerMP());
    	} else Vehicle p(Caller);

    	Vector TargetPosition=Game::GetCommandPos();
    	if(Game::IsInTrigger("einsatzgebiet_nord_west", TargetPosition))
    	{
    		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 27, false);
    		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 44, false);
    	} else
    	if(Game::IsInTrigger("einsatzgebiet_nord_ost", TargetPosition))
    	{
    		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 2, false);
    		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 44, false);
    	} else
    	if(Game::IsInTrigger("einsatzgebiet_mitte", TargetPosition))
    	{
    		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 27, false);
    		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 44, false);
    	} else
    	if(Game::IsInTrigger("einsatzgebiet_sued", TargetPosition))
    	{
    		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 60, false);
    		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 44, false);
    	} else
    	{
    		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_hlf", Caller, 0, false);
    		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_pol", Caller, 0, false);
    	}
    }
};

object alarm_feubma : CommandScript
{
   alarm_feubma()
   {
      SetValidTargets(ACTOR_FLOOR);
      SetIcon("alarm_feubma");
      SetCursor("alarm_feubma");
   }

   bool CheckTarget(GameObject *Caller, Actor *Target, int childID)
   {
      if( Caller->GetID() == Target->GetID() || Target->GetType() == ACTOR_VEHICLE || Target->GetType() == ACTOR_HOUSE || Target->GetType() == ACTOR_OPEN_HOUSE || Target->GetType() == ACTOR_PERSON || Target->GetType() == ACTOR_OBJECT)
         return false;
      return true;
   }


   void PushActions(GameObject *Caller, Actor *Target, int childID)
   {
	Mission::PlayHint("FEUBMA: Alarmierung läuft...");

	Einsatzort=Game::GetCommandPos();
	if (Target->GetType() == ACTOR_FLOOR)
	{
		Vehicle p = Game::CreateVehicle("mod:Prototypes/Vehicles/geraete/pylone.e4p", "EinsatzortDummy");
		p.Hide();
		Game::FindFreePosition(&p,Einsatzort);
		p.SetPosition(Einsatzort);
		p.PushActionWait(ACTION_NEWLIST, 3);
		if (Game::IsMultiplayer())
			p.SetPlayerMP(Caller->GetPlayerMP());
	} else Vehicle p(Caller);

	Vector TargetPosition=Game::GetCommandPos();
	if(Game::IsInTrigger("einsatzgebiet_nord_west", TargetPosition))
	{
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 133, false);
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 27, false);
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 44, false);
	} else
	if(Game::IsInTrigger("einsatzgebiet_nord_ost", TargetPosition))
	{
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 112, false);
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 44, false);
	} else
	if(Game::IsInTrigger("einsatzgebiet_mitte", TargetPosition))
	{
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 122, false);
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 27, false);
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 44, false);
	} else
	if(Game::IsInTrigger("einsatzgebiet_sued", TargetPosition))
	{
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 123, false);
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 44, false);
	} else
	{
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_loeschzug", Caller, 0, false);
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_pol", Caller, 0, false);
	}
      }
};


object alarm_feu : CommandScript
{
   alarm_feu()
   {
      SetValidTargets(ACTOR_FLOOR);
      SetIcon("alarm_feu");
      SetCursor("alarm_feu");
   }

   bool CheckTarget(GameObject *Caller, Actor *Target, int childID)
   {
      if( Caller->GetID() == Target->GetID() || Target->GetType() == ACTOR_VEHICLE || Target->GetType() == ACTOR_HOUSE || Target->GetType() == ACTOR_OPEN_HOUSE || Target->GetType() == ACTOR_PERSON || Target->GetType() == ACTOR_OBJECT)
         return false;
      return true;
   }


   void PushActions(GameObject *Caller, Actor *Target, int childID)
   {
	Mission::PlayHint("FEU: Alarmierung läuft...");

	Einsatzort=Game::GetCommandPos();
	if (Target->GetType() == ACTOR_FLOOR)
	{
		Vehicle p = Game::CreateVehicle("mod:Prototypes/Vehicles/geraete/pylone.e4p", "EinsatzortDummy");
		p.Hide();
		Game::FindFreePosition(&p,Einsatzort);
		p.SetPosition(Einsatzort);
		p.PushActionWait(ACTION_NEWLIST, 3);
		if (Game::IsMultiplayer())
			p.SetPlayerMP(Caller->GetPlayerMP());
	} else Vehicle p(Caller);

	Einsatzort=Game::GetCommandPos();
	if (Target->GetType() == ACTOR_FLOOR)
	{
		Vehicle p = Game::CreateVehicle("mod:Prototypes/Vehicles/geraete/pylone.e4p", "EinsatzortDummy");
		p.Hide();
		Game::FindFreePosition(&p,Einsatzort);
		p.SetPosition(Einsatzort);
		p.PushActionWait(ACTION_NEWLIST, 3);
		if (Game::IsMultiplayer())
			p.SetPlayerMP(Caller->GetPlayerMP());
	} else Vehicle p(Caller);

	Vector TargetPosition=Game::GetCommandPos();
	if(Game::IsInTrigger("einsatzgebiet_nord_west", TargetPosition))
	{
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 133, false);
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 27, false);
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 44, false);
	} else
	if(Game::IsInTrigger("einsatzgebiet_nord_ost", TargetPosition))
	{
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 112, false);
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 44, false);
	} else
	if(Game::IsInTrigger("einsatzgebiet_mitte", TargetPosition))
	{
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 122, false);
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 27, false);
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 44, false);
	} else
	if(Game::IsInTrigger("einsatzgebiet_sued", TargetPosition))
	{
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Target, 123, false);
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Target, 44, false);
	} else
	{
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_loeschzug", Caller, 0, false);
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_loeschzug", Caller, 0, false);
	}
    }
};

object alarm_feuy : CommandScript
{
   alarm_feuy()
   {
      SetValidTargets(ACTOR_FLOOR);
      SetIcon("alarm_feuy");
      SetCursor("alarm_feuy");
   }

   bool CheckTarget(GameObject *Caller, Actor *Target, int childID)
   {
      if( Caller->GetID() == Target->GetID() || Target->GetType() == ACTOR_VEHICLE || Target->GetType() == ACTOR_HOUSE || Target->GetType() == ACTOR_OPEN_HOUSE || Target->GetType() == ACTOR_PERSON || Target->GetType() == ACTOR_OBJECT)
         return false;
      return true;
   }


   void PushActions(GameObject *Caller, Actor *Target, int childID)
   {
	Mission::PlayHint("FEUY: Alarmierung läuft...");

	Einsatzort=Game::GetCommandPos();
	if (Target->GetType() == ACTOR_FLOOR)
	{
		Vehicle p = Game::CreateVehicle("mod:Prototypes/Vehicles/geraete/pylone.e4p", "EinsatzortDummy");
		p.Hide();
		Game::FindFreePosition(&p,Einsatzort);
		p.SetPosition(Einsatzort);
		p.PushActionWait(ACTION_NEWLIST, 3);
		if (Game::IsMultiplayer())
			p.SetPlayerMP(Caller->GetPlayerMP());
	} else Vehicle p(Caller);

	Vector TargetPosition=Game::GetCommandPos();
	if(Game::IsInTrigger("einsatzgebiet_nord_west", TargetPosition))
	{
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 133, false);
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 27, false);
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 44, false);
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 24, false);
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 7, false);
	} else
	if(Game::IsInTrigger("einsatzgebiet_nord_ost", TargetPosition))
	{
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 112, false);
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 44, false);
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 5, false);
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 7, false);
	} else
	if(Game::IsInTrigger("einsatzgebiet_mitte", TargetPosition))
	{
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 122, false);
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 27, false);
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 44, false);
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 15, false);
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 65, false);
	} else
	if(Game::IsInTrigger("einsatzgebiet_sued", TargetPosition))
	{
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 123, false);
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 44, false);
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 63, false);
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 65, false);
	} else
	{
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_loeschzug", Caller, 0, false);
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 27, false);
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_pol", Caller, 0, false);
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_rtw", Caller, 0, false);
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_bdienst", Caller, 0, false);
	}
      }
};


object alarm_feu2 : CommandScript
{
   alarm_feu2()
   {
      SetValidTargets(ACTOR_FLOOR);
      SetIcon("alarm_feu2");
      SetCursor("alarm_feu2");
   }

   bool CheckTarget(GameObject *Caller, Actor *Target, int childID)
   {
      if( Caller->GetID() == Target->GetID() || Target->GetType() == ACTOR_VEHICLE || Target->GetType() == ACTOR_HOUSE || Target->GetType() == ACTOR_OPEN_HOUSE || Target->GetType() == ACTOR_PERSON || Target->GetType() == ACTOR_OBJECT)
         return false;
      return true;
   }


   void PushActions(GameObject *Caller, Actor *Target, int childID)
   {
	Mission::PlayHint("FEU2: Alarmierung läuft...");

	Einsatzort=Game::GetCommandPos();
	if (Target->GetType() == ACTOR_FLOOR)
	{
		Vehicle p = Game::CreateVehicle("mod:Prototypes/Vehicles/geraete/pylone.e4p", "EinsatzortDummy");
		p.Hide();
		Game::FindFreePosition(&p,Einsatzort);
		p.SetPosition(Einsatzort);
		p.PushActionWait(ACTION_NEWLIST, 3);
		if (Game::IsMultiplayer())
			p.SetPlayerMP(Caller->GetPlayerMP());
	} else Vehicle p(Caller);

	Vector TargetPosition=Game::GetCommandPos();
	if(Game::IsInTrigger("einsatzgebiet_nord_west", TargetPosition))
	{
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 7, false);
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 30, false);
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 44, false);
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 122, false);
	} else

	if(Game::IsInTrigger("einsatzgebiet_nord_ost", TargetPosition))
	{
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 7, false);
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 30, false);
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 44, false);
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 122, false);
	} else
	if(Game::IsInTrigger("einsatzgebiet_mitte", TargetPosition))
	{
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 65, false);
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 30, false);
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 44, false);
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 133, false);
	} else
	if(Game::IsInTrigger("einsatzgebiet_sued", TargetPosition))
	{
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 65, false);
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 30, false);
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 44, false);
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 122, false);
	} else
	{
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_bdienst", Caller, 0, false);
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_udienst", Caller, 0, false);
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_pol", Caller, 0, false);
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_loeschzug", Caller, 0, false);
	}
      }
};


object alarm_feu2y : CommandScript
{
   alarm_feu2y()
   {
      SetValidTargets(ACTOR_FLOOR);
      SetIcon("alarm_feu2y");
      SetCursor("alarm_feu2y");
   }

   bool CheckTarget(GameObject *Caller, Actor *Target, int childID)
   {
      if( Caller->GetID() == Target->GetID() || Target->GetType() == ACTOR_VEHICLE || Target->GetType() == ACTOR_HOUSE || Target->GetType() == ACTOR_OPEN_HOUSE || Target->GetType() == ACTOR_PERSON || Target->GetType() == ACTOR_OBJECT)
         return false;
      return true;
   }


   void PushActions(GameObject *Caller, Actor *Target, int childID)
   {
	Mission::PlayHint("FEU2Y: Alarmierung läuft...");

	Einsatzort=Game::GetCommandPos();
	if (Target->GetType() == ACTOR_FLOOR)
	{
		Vehicle p = Game::CreateVehicle("mod:Prototypes/Vehicles/geraete/pylone.e4p", "EinsatzortDummy");
		p.Hide();
		Game::FindFreePosition(&p,Einsatzort);
		p.SetPosition(Einsatzort);
		p.PushActionWait(ACTION_NEWLIST, 3);
		if (Game::IsMultiplayer())
			p.SetPlayerMP(Caller->GetPlayerMP());
	} else Vehicle p(Caller);

	Vector TargetPosition=Game::GetCommandPos();
	if(Game::IsInTrigger("einsatzgebiet_nord_west", TargetPosition))
	{
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 19, false);
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 7, false);
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 11, false);
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 30, false);
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 44, false);
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 26, false);
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 20, false);
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 122, false);
	} else
	if(Game::IsInTrigger("einsatzgebiet_nord_ost", TargetPosition))
	{
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 19, false);
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 7, false);
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 11, false);
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 30, false);
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 44, false);
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 26, false);
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 20, false);
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 122, false);
	} else
	if(Game::IsInTrigger("einsatzgebiet_mitte", TargetPosition))
	{
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 19, false);
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 65, false);
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 11, false);
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 30, false);
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 44, false);
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 26, false);
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 20, false);
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 133, false);
	} else
	if(Game::IsInTrigger("einsatzgebiet_sued", TargetPosition))
	{
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 19, false);
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 65, false);
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 11, false);
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 30, false);
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 44, false);
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 26, false);
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 20, false);
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 122, false);
	} else
	{
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_adienst", Caller, 0, false);
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_bdienst", Caller, 0, false);
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_grtw", Caller, 0, false);
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_udienst", Caller, 0, false);
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_pol", Caller, 0, false);
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_gwrd", Caller, 0, false);
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_bfw", Caller, 0, false);
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_loeschzug", Caller, 0, false);
	}
}
};


object alarm_feu3 : CommandScript
{
   alarm_feu3()
   {
      SetValidTargets(ACTOR_FLOOR);
      SetIcon("alarm_feu3");
      SetCursor("alarm_feu3");
   }

   bool CheckTarget(GameObject *Caller, Actor *Target, int childID)
   {
      if( Caller->GetID() == Target->GetID() || Target->GetType() == ACTOR_VEHICLE || Target->GetType() == ACTOR_HOUSE || Target->GetType() == ACTOR_OPEN_HOUSE || Target->GetType() == ACTOR_PERSON || Target->GetType() == ACTOR_OBJECT)
         return false;
      return true;
   }


   void PushActions(GameObject *Caller, Actor *Target, int childID)
   {
	Mission::PlayHint("FEU3: Alarmierung läuft...");

	Einsatzort=Game::GetCommandPos();
	if (Target->GetType() == ACTOR_FLOOR)
	{
		Vehicle p = Game::CreateVehicle("mod:Prototypes/Vehicles/geraete/pylone.e4p", "EinsatzortDummy");
		p.Hide();
		Game::FindFreePosition(&p,Einsatzort);
		p.SetPosition(Einsatzort);
		p.PushActionWait(ACTION_NEWLIST, 3);
		if (Game::IsMultiplayer())
			p.SetPlayerMP(Caller->GetPlayerMP());
	} else Vehicle p(Caller);

	Vector TargetPosition=Game::GetCommandPos();
	if(Game::IsInTrigger("einsatzgebiet_nord_west", TargetPosition))
	{
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 20, false);
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 11, false);
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 26, false);
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 8, false);
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 44, false);
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 112, false);
	} else
	if(Game::IsInTrigger("einsatzgebiet_nord_ost", TargetPosition))
	{
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 20, false);
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 11, false);
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 26, false);
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 8, false);
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 44, false);
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 133, false);
	} else
	if(Game::IsInTrigger("einsatzgebiet_mitte", TargetPosition))
	{
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 20, false);
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 11, false);
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 26, false);
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 8, false);
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 44, false);
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 112, false);
	} else
	if(Game::IsInTrigger("einsatzgebiet_sued", TargetPosition))
	{
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 20, false);
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 11, false);
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 26, false);
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 8, false);
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 44, false);
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 112, false);
	} else
	{
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_bfw", Caller, 0, false);
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_grtw", Caller, 0, false);
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_gwrd", Caller, 0, false);
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_asgw", Caller, 0, false);
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_pol", Caller, 0, false);
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_loeschzug", Caller, 0, false);
	}
      }
};


object alarm_notf : CommandScript
{
   alarm_notf()
   {
      SetValidTargets(ACTOR_FLOOR);
      SetIcon("alarm_notf");
      SetCursor("alarm_notf");
   }

   bool CheckTarget(GameObject *Caller, Actor *Target, int childID)
   {
      if( Caller->GetID() == Target->GetID() || Target->GetType() == ACTOR_VEHICLE || Target->GetType() == ACTOR_HOUSE || Target->GetType() == ACTOR_OPEN_HOUSE || Target->GetType() == ACTOR_PERSON || Target->GetType() == ACTOR_OBJECT)
         return false;
      return true;
   }


   void PushActions(GameObject *Caller, Actor *Target, int childID)
   {
	Mission::PlayHint("NOTF: Alarmierung läuft...");

	Einsatzort=Game::GetCommandPos();
	if (Target->GetType() == ACTOR_FLOOR)
	{
		Vehicle p = Game::CreateVehicle("mod:Prototypes/Vehicles/geraete/pylone.e4p", "EinsatzortDummy");
		p.Hide();
		Game::FindFreePosition(&p,Einsatzort);
		p.SetPosition(Einsatzort);
		p.PushActionWait(ACTION_NEWLIST, 3);
		if (Game::IsMultiplayer())
			p.SetPlayerMP(Caller->GetPlayerMP());
	} else Vehicle p(Caller);

	Vector TargetPosition=Game::GetCommandPos();
	if(Game::IsInTrigger("einsatzgebiet_nord_west", TargetPosition))
	{
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 24, false);
	} else
	if(Game::IsInTrigger("einsatzgebiet_nord_ost", TargetPosition))
	{
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 5, false);
	} else
	if(Game::IsInTrigger("einsatzgebiet_mitte", TargetPosition))
	{
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 15, false);
	} else
	if(Game::IsInTrigger("einsatzgebiet_sued", TargetPosition))
	{
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 63, false);
	} else
	{
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_rtw", Caller, 0, false);
	}
      }
};


object alarm_notfna : CommandScript
{
   alarm_notfna()
   {
      SetValidTargets(ACTOR_FLOOR);
      SetIcon("alarm_notfna");
      SetCursor("alarm_notfna");
   }

   bool CheckTarget(GameObject *Caller, Actor *Target, int childID)
   {
      if( Caller->GetID() == Target->GetID() || Target->GetType() == ACTOR_VEHICLE || Target->GetType() == ACTOR_HOUSE || Target->GetType() == ACTOR_OPEN_HOUSE || Target->GetType() == ACTOR_PERSON || Target->GetType() == ACTOR_OBJECT)
         return false;
      return true;
   }


   void PushActions(GameObject *Caller, Actor *Target, int childID)
   {
	Mission::PlayHint("NOTFNA: Alarmierung läuft...");

	Einsatzort=Game::GetCommandPos();
	if (Target->GetType() == ACTOR_FLOOR)
	{
		Vehicle p = Game::CreateVehicle("mod:Prototypes/Vehicles/geraete/pylone.e4p", "EinsatzortDummy");
		p.Hide();
		Game::FindFreePosition(&p,Einsatzort);
		p.SetPosition(Einsatzort);
		p.PushActionWait(ACTION_NEWLIST, 3);
		if (Game::IsMultiplayer())
			p.SetPlayerMP(Caller->GetPlayerMP());
	} else Vehicle p(Caller);

	Vector TargetPosition=Game::GetCommandPos();
	if(Game::IsInTrigger("einsatzgebiet_nord_west", TargetPosition))
	{
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 24, false);
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 35, false);
	} else
	if(Game::IsInTrigger("einsatzgebiet_nord_ost", TargetPosition))
	{
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 5, false);
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 34, false);
	} else
	if(Game::IsInTrigger("einsatzgebiet_mitte", TargetPosition))
	{
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 15, false);
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 35, false);
	} else
	if(Game::IsInTrigger("einsatzgebiet_sued", TargetPosition))
	{
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 63, false);
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 36, false);
	} else
	{
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_rtw", Caller, 0, false);
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_nef", Caller, 0, false);
	}
      }
};

object alarm_thflug3r : CommandScript
{
   alarm_thflug3r()
   {
      SetValidTargets(ACTOR_FLOOR);
      SetIcon("alarm_thflug3r");
      SetCursor("alarm_thflug3r");
   }

   bool CheckTarget(GameObject *Caller, Actor *Target, int childID)
   {
      if( Caller->GetID() == Target->GetID() || Target->GetType() == ACTOR_VEHICLE || Target->GetType() == ACTOR_HOUSE || Target->GetType() == ACTOR_OPEN_HOUSE || Target->GetType() == ACTOR_PERSON || Target->GetType() == ACTOR_OBJECT)
         return false;
      return true;
   }


   void PushActions(GameObject *Caller, Actor *Target, int childID)
   {
	Mission::PlayHint("TFLUG3R: Alarmierung läuft...");

	Einsatzort=Game::GetCommandPos();
	if (Target->GetType() == ACTOR_FLOOR)
	{
		Vehicle p = Game::CreateVehicle("mod:Prototypes/Vehicles/geraete/pylone.e4p", "EinsatzortDummy");
		p.Hide();
		Game::FindFreePosition(&p,Einsatzort);
		p.SetPosition(Einsatzort);
		p.PushActionWait(ACTION_NEWLIST, 3);
		if (Game::IsMultiplayer())
			p.SetPlayerMP(Caller->GetPlayerMP());
	} else Vehicle p(Caller);


	Einsatzort=Game::GetCommandPos();
	if (Target->GetType() == ACTOR_FLOOR)
	{
		Vehicle p = Game::CreateVehicle("mod:Prototypes/Vehicles/geraete/pylone.e4p", "EinsatzortDummy");
		p.Hide();
		Game::FindFreePosition(&p,Einsatzort);
		p.SetPosition(Einsatzort);
		p.PushActionWait(ACTION_NEWLIST, 3);
		if (Game::IsMultiplayer())
			p.SetPlayerMP(Caller->GetPlayerMP());
	} else Vehicle p(Caller);
	p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 123, false);
	p.PushActionWait(ACTION_APPEND, 2);
	p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 63, false);
	p.PushActionWait(ACTION_APPEND, 2);
	p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 63, false);
	p.PushActionWait(ACTION_APPEND, 2);
	p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 34, false);
	p.PushActionWait(ACTION_APPEND, 2);
	p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 65, false);
	p.PushActionWait(ACTION_APPEND, 15);

	p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 13, false);
	p.PushActionWait(ACTION_APPEND, 2);
	p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 14, false);
	p.PushActionWait(ACTION_APPEND, 2);
	p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 15, false);
	p.PushActionWait(ACTION_APPEND, 2);
	p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 15, false);
	p.PushActionWait(ACTION_APPEND, 2);
	p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 15, false);
	p.PushActionWait(ACTION_APPEND, 2);
	p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 19, false);
	p.PushActionWait(ACTION_APPEND, 2);
	p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 20, false);
	p.PushActionWait(ACTION_APPEND, 2);
	p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 35, false);
	p.PushActionWait(ACTION_APPEND, 5);



	p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 1, false);
	p.PushActionWait(ACTION_APPEND, 2);
	p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 2, false);
	p.PushActionWait(ACTION_APPEND, 2);
	p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 4, false);
	p.PushActionWait(ACTION_APPEND, 2);
	p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 5, false);
	p.PushActionWait(ACTION_APPEND, 2);
	p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 11, false);
	p.PushActionWait(ACTION_APPEND, 2);
	p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 7, false);
	p.PushActionWait(ACTION_APPEND, 3);



	p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 26, false);
	p.PushActionWait(ACTION_APPEND, 2);
	p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 30, false);
	p.PushActionWait(ACTION_APPEND, 1);
      }
};


object alarm_thk : CommandScript
{
   alarm_thk()
   {
      SetValidTargets(ACTOR_FLOOR);
      SetIcon("alarm_thk");
      SetCursor("alarm_thk");
   }

   bool CheckTarget(GameObject *Caller, Actor *Target, int childID)
   {
      if( Caller->GetID() == Target->GetID() || Target->GetType() == ACTOR_VEHICLE || Target->GetType() == ACTOR_HOUSE || Target->GetType() == ACTOR_OPEN_HOUSE || Target->GetType() == ACTOR_PERSON || Target->GetType() == ACTOR_OBJECT)
         return false;
      return true;
   }


   void PushActions(GameObject *Caller, Actor *Target, int childID)
   {
	Mission::PlayHint("THK: Alarmierung läuft...");

	Einsatzort=Game::GetCommandPos();
	if (Target->GetType() == ACTOR_FLOOR)
	{
		Vehicle p = Game::CreateVehicle("mod:Prototypes/Vehicles/geraete/pylone.e4p", "EinsatzortDummy");
		p.Hide();
		Game::FindFreePosition(&p,Einsatzort);
		p.SetPosition(Einsatzort);
		p.PushActionWait(ACTION_NEWLIST, 3);
		if (Game::IsMultiplayer())
			p.SetPlayerMP(Caller->GetPlayerMP());
	} else Vehicle p(Caller);

    Vector TargetPosition=Game::GetCommandPos();
	if(Game::IsInTrigger("einsatzgebiet_nord_west", TargetPosition))
	{
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 27, false);
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 44, false);
	} else
	if(Game::IsInTrigger("einsatzgebiet_nord_ost", TargetPosition))
	{
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 2, false);
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 44, false);
	} else
	if(Game::IsInTrigger("einsatzgebiet_mitte", TargetPosition))
	{
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 18, false);
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 44, false);
	} else
	if(Game::IsInTrigger("einsatzgebiet_sued", TargetPosition))
	{
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 60, false);
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 44, false);
	} else
	{
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_hlf", Caller, 0, false);
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_pol", Caller, 0, false);
	}
      }
};


object alarm_thway : CommandScript
{
   alarm_thway()
   {
      SetValidTargets(ACTOR_FLOOR);
      SetIcon("alarm_thway");
      SetCursor("alarm_thway");
   }

   bool CheckTarget(GameObject *Caller, Actor *Target, int childID)
   {
      if( Caller->GetID() == Target->GetID() || Target->GetType() == ACTOR_VEHICLE || Target->GetType() == ACTOR_HOUSE || Target->GetType() == ACTOR_OPEN_HOUSE || Target->GetType() == ACTOR_PERSON || Target->GetType() == ACTOR_OBJECT)
         return false;
      return true;
   }


   void PushActions(GameObject *Caller, Actor *Target, int childID)
   {
	Mission::PlayHint("THWAY: Alarmierung läuft...");

	Einsatzort=Game::GetCommandPos();
	if (Target->GetType() == ACTOR_FLOOR)
	{
		Vehicle p = Game::CreateVehicle("mod:Prototypes/Vehicles/geraete/pylone.e4p", "EinsatzortDummy");
		p.Hide();
		Game::FindFreePosition(&p,Einsatzort);
		p.SetPosition(Einsatzort);
		p.PushActionWait(ACTION_NEWLIST, 3);
		if (Game::IsMultiplayer())
			p.SetPlayerMP(Caller->GetPlayerMP());
	} else Vehicle p(Caller);

    Vector TargetPosition=Game::GetCommandPos();
	if(Game::IsInTrigger("einsatzgebiet_nord_west", TargetPosition))
	{
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 133, false);
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 27, false);
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 29, false);
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 35, false);
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 7, false);
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 44, false);
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 24, false);
	} else
	if(Game::IsInTrigger("einsatzgebiet_nord_ost", TargetPosition))
	{
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 112, false);
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 29, false);
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 34, false);
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 7, false);
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 44, false);
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 63, false);
	} else
	if(Game::IsInTrigger("einsatzgebiet_mitte", TargetPosition))
	{
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 122, false);
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 27, false);
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 29, false);
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 35, false);
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 65, false);
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 44, false);
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 15, false);
	} else
	if(Game::IsInTrigger("einsatzgebiet_sued", TargetPosition))
	{
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 123, false);
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 29, false);
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 36, false);
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 65, false);
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 44, false);
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 63, false);
	} else
	{
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_loeschzug", Caller, 0, false);
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_segt", Caller, 0, false);
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_nef", Caller, 0, false);
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_bdienst", Caller, 0, false);
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_pol", Caller, 0, false);
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_rtw", Caller, 0, false);
	}
      }
};

object alarm_thx : CommandScript
{
   alarm_thx()
   {
      SetValidTargets(ACTOR_FLOOR);
      SetIcon("alarm_thx");
      SetCursor("alarm_thx");
   }

   bool CheckTarget(GameObject *Caller, Actor *Target, int childID)
   {
      if( Caller->GetID() == Target->GetID() || Target->GetType() == ACTOR_VEHICLE || Target->GetType() == ACTOR_HOUSE || Target->GetType() == ACTOR_OPEN_HOUSE || Target->GetType() == ACTOR_PERSON || Target->GetType() == ACTOR_OBJECT)
         return false;
      return true;
   }


   void PushActions(GameObject *Caller, Actor *Target, int childID)
   {
	Mission::PlayHint("THX: Alarmierung läuft...");

	Einsatzort=Game::GetCommandPos();
	if (Target->GetType() == ACTOR_FLOOR)
	{
		Vehicle p = Game::CreateVehicle("mod:Prototypes/Vehicles/geraete/pylone.e4p", "EinsatzortDummy");
		p.Hide();
		Game::FindFreePosition(&p,Einsatzort);
		p.SetPosition(Einsatzort);
		p.PushActionWait(ACTION_NEWLIST, 3);
		if (Game::IsMultiplayer())
			p.SetPlayerMP(Caller->GetPlayerMP());
	} else Vehicle p(Caller);


	Einsatzort=Game::GetCommandPos();
	if (Target->GetType() == ACTOR_FLOOR)
	{
		Vehicle p = Game::CreateVehicle("mod:Prototypes/Vehicles/geraete/pylone.e4p", "EinsatzortDummy");
		p.Hide();
		Game::FindFreePosition(&p,Einsatzort);
		p.SetPosition(Einsatzort);
		p.PushActionWait(ACTION_NEWLIST, 3);
		if (Game::IsMultiplayer())
			p.SetPlayerMP(Caller->GetPlayerMP());
	} else Vehicle p(Caller);

	Vector TargetPosition=Game::GetCommandPos();
	if(Game::IsInTrigger("einsatzgebiet_nord_west", TargetPosition))
	{
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Target, 30, false);
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Target, 133, false);
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Target, 7, false);
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 44, false);
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 44, false);
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 27, false);
	} else
	if(Game::IsInTrigger("einsatzgebiet_nord_ost", TargetPosition))
	{

		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 30, false);
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 112, false);
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 7, false);
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 44, false);
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 44, false);
	} else
	if(Game::IsInTrigger("einsatzgebiet_mitte", TargetPosition))
	{
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 30, false);
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 122, false);
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 65, false);
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 44, false);
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 44, false);
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 27, false);
	} else
	if(Game::IsInTrigger("einsatzgebiet_sued", TargetPosition))
	{
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 30, false);
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 123, false);
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 65, false);
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 44, false);
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 44, false);
	} else
	{
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_udienst", Caller, 0, false);
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_loeschzug", Caller, 0, false);
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_bdienst", Caller, 0, false);
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_pol", Caller, 0, false);
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_pol", Caller, 0, false);
	}
      }
};

object alarm_thy : CommandScript
{
   alarm_thk()
   {
      SetValidTargets(ACTOR_FLOOR);
      SetIcon("alarm_thy");
      SetCursor("alarm_thy");
   }

   bool CheckTarget(GameObject *Caller, Actor *Target, int childID)
   {
      if( Caller->GetID() == Target->GetID() || Target->GetType() == ACTOR_VEHICLE || Target->GetType() == ACTOR_HOUSE || Target->GetType() == ACTOR_OPEN_HOUSE || Target->GetType() == ACTOR_PERSON || Target->GetType() == ACTOR_OBJECT)
         return false;
      return true;
   }


   void PushActions(GameObject *Caller, Actor *Target, int childID)
   {
	Mission::PlayHint("THY: Alarmierung läuft...");

	Einsatzort=Game::GetCommandPos();
	if (Target->GetType() == ACTOR_FLOOR)
	{
		Vehicle p = Game::CreateVehicle("mod:Prototypes/Vehicles/geraete/pylone.e4p", "EinsatzortDummy");
		p.Hide();
		Game::FindFreePosition(&p,Einsatzort);
		p.SetPosition(Einsatzort);
		p.PushActionWait(ACTION_NEWLIST, 3);
		if (Game::IsMultiplayer())
			p.SetPlayerMP(Caller->GetPlayerMP());
	} else Vehicle p(Caller);

	Vector TargetPosition=Game::GetCommandPos();
	if(Game::IsInTrigger("einsatzgebiet_nord_west", TargetPosition))
	{
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 133, false);
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 27, false);
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 35, false);
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 44, false);
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 44, false);
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 24, false);
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 7, false);
	} else
	if(Game::IsInTrigger("einsatzgebiet_nord_ost", TargetPosition))
	{
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 112, false);
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 34, false);
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 44, false);
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 44, false);
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 5, false);
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 7, false);
	} else
	if(Game::IsInTrigger("einsatzgebiet_mitte", TargetPosition))
	{
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 122, false);
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 27, false);
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 35, false);
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 44, false);
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 44, false);
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 15, false);
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 65, false);
	} else
	if(Game::IsInTrigger("einsatzgebiet_sued", TargetPosition))
	{
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 123, false);
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 36, false);
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 44, false);
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 44, false);
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 63, false);
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 65, false);
	} else
	{
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_loeschzug", Caller, 0, false);
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_nef", Caller, 0, false);
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_pol", Caller, 0, false);
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_pol", Caller, 0, false);
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_rtw", Caller, 0, false);
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_bdienst", Caller, 0, false);
	}
      }
};


object alarm_tier : CommandScript
{
   alarm_tier()
   {
      SetValidTargets(ACTOR_FLOOR);
      SetIcon("alarm_tier");
      SetCursor("alarm_tier");
   }

   bool CheckTarget(GameObject *Caller, Actor *Target, int childID)
   {
      if( Caller->GetID() == Target->GetID() || Target->GetType() == ACTOR_VEHICLE || Target->GetType() == ACTOR_HOUSE || Target->GetType() == ACTOR_OPEN_HOUSE || Target->GetType() == ACTOR_PERSON || Target->GetType() == ACTOR_OBJECT)
         return false;
      return true;
   }


   void PushActions(GameObject *Caller, Actor *Target, int childID)
   {
	Mission::PlayHint("TIER: Alarmierung läuft...");

	Einsatzort=Game::GetCommandPos();
	if (Target->GetType() == ACTOR_FLOOR)
	{
		Vehicle p = Game::CreateVehicle("mod:Prototypes/Vehicles/geraete/pylone.e4p", "EinsatzortDummy");
		p.Hide();
		Game::FindFreePosition(&p,Einsatzort);
		p.SetPosition(Einsatzort);
		p.PushActionWait(ACTION_NEWLIST, 3);
		if (Game::IsMultiplayer())
			p.SetPlayerMP(Caller->GetPlayerMP());
	} else Vehicle p(Caller);

	Vector TargetPosition=Game::GetCommandPos();
	if(Game::IsInTrigger("einsatzgebiet_nord_west", TargetPosition))
	{
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 27, false);
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 24, false);
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 44, false);
	} else
	if(Game::IsInTrigger("einsatzgebiet_nord_ost", TargetPosition))
	{
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 2, false);
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 5, false);
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 44, false);
	} else
	if(Game::IsInTrigger("einsatzgebiet_mitte", TargetPosition))
	{
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 18, false);
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 15, false);
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 44, false);
	} else
	if(Game::IsInTrigger("einsatzgebiet_sued", TargetPosition))
	{
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 60, false);
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 63, false);
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 44, false);
	} else
	{
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_hlf", Caller, 0, false);
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_rtw", Caller, 0, false);
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_pol", Caller, 0, false);
	}
      }
};


object alarm_tvnot : CommandScript
{
   alarm_tvnot()
   {
      SetValidTargets(ACTOR_FLOOR);
      SetIcon("alarm_tvnot");
      SetCursor("alarm_tvnot");
   }

   bool CheckTarget(GameObject *Caller, Actor *Target, int childID)
   {
      if( Caller->GetID() == Target->GetID() || Target->GetType() == ACTOR_VEHICLE || Target->GetType() == ACTOR_HOUSE || Target->GetType() == ACTOR_OPEN_HOUSE || Target->GetType() == ACTOR_PERSON || Target->GetType() == ACTOR_OBJECT)
         return false;
      return true;
   }


   void PushActions(GameObject *Caller, Actor *Target, int childID)
   {
	Mission::PlayHint("TVNOT: Alarmierung läuft...");

	Einsatzort=Game::GetCommandPos();
	if (Target->GetType() == ACTOR_FLOOR)
	{
		Vehicle p = Game::CreateVehicle("mod:Prototypes/Vehicles/geraete/pylone.e4p", "EinsatzortDummy");
		p.Hide();
		Game::FindFreePosition(&p,Einsatzort);
		p.SetPosition(Einsatzort);
		p.PushActionWait(ACTION_NEWLIST, 3);
		if (Game::IsMultiplayer())
			p.SetPlayerMP(Caller->GetPlayerMP());
	} else Vehicle p(Caller);

	Vector TargetPosition=Game::GetCommandPos();
	if(Game::IsInTrigger("einsatzgebiet_nord_west", TargetPosition))
	{
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 22, false);
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 24, false);
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 35, false);
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 44, false);
	} else
	if(Game::IsInTrigger("einsatzgebiet_nord_ost", TargetPosition))
	{
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 2, false);
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 5, false);
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 34, false);
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 44, false);
	} else
	if(Game::IsInTrigger("einsatzgebiet_mitte", TargetPosition))
	{
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 18, false);
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 15, false);
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 35, false);
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 44, false);
	} else
	if(Game::IsInTrigger("einsatzgebiet_sued", TargetPosition))
	{
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 60, false);
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 63, false);
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 36, false);
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 44, false);
	} else
	{
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_hlf", Caller, 0, false);
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_rtw", Caller, 0, false);
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_nef", Caller, 0, false);
		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_pol", Caller, 0, false);
	}
      }
};


//--------------------------------------------------------------- FAHRZEUG EINZELALARMIERUNG -------------------------------------------------------------------------------------------------------------------



object rufe_adienst : CommandScript
{
	rufe_adienst()
	{
		SetValidTargets(ACTOR_FLOOR);
		SetIcon("rufe_adienst");
		SetCursor("rufe_adienst");
	}
	bool CheckTarget(GameObject *Caller, Actor *Target, int childID)
	{
		return true;
	}
	void PushActions(GameObject *Caller, Actor *Target, int childID)
	{
		Einsatzort=Game::GetCommandPos();
		if (Target->GetType() == ACTOR_FLOOR)
		{
			Vehicle p = Game::CreateVehicle("mod:Prototypes/Vehicles/geraete/pylone.e4p", "EinsatzortDummy");
			p.Hide();
			Game::FindFreePosition(&p,Einsatzort);
			p.SetPosition(Einsatzort);
			p.PushActionWait(ACTION_NEWLIST, 3);
			if (Game::IsMultiplayer())
				p.SetPlayerMP(Caller->GetPlayerMP());
		} else Vehicle p(Caller);

		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 19, false);
	}
};

object rufe_asb_rtw : CommandScript
{
	rufe_asb_rtw()
	{
		SetValidTargets(ACTOR_FLOOR);
		SetIcon("rufe_rtw");
		SetCursor("rufe_rtw");
	}
	bool CheckTarget(GameObject *Caller, Actor *Target, int childID)
	{
		return true;
	}
	void PushActions(GameObject *Caller, Actor *Target, int childID)
	{
		Einsatzort=Game::GetCommandPos();
		if (Target->GetType() == ACTOR_FLOOR)
		{
			Vehicle p = Game::CreateVehicle("mod:Prototypes/Vehicles/geraete/pylone.e4p", "EinsatzortDummy");
			p.Hide();
			Game::FindFreePosition(&p,Einsatzort);
			p.SetPosition(Einsatzort);
			p.PushActionWait(ACTION_NEWLIST, 3);
			if (Game::IsMultiplayer())
				p.SetPlayerMP(Caller->GetPlayerMP());
		} else Vehicle p(Caller);

		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 56, false);
	}
};

object rufe_asf : CommandScript
{
	rufe_asf()
	{
		SetValidTargets(ACTOR_FLOOR);
		SetIcon("rufe_asf");
		SetCursor("rufe_asf");
	}
	bool CheckTarget(GameObject *Caller, Actor *Target, int childID)
	{
		return true;
	}
	void PushActions(GameObject *Caller, Actor *Target, int childID)
	{
		Einsatzort=Game::GetCommandPos();
		if (Target->GetType() == ACTOR_FLOOR)
		{
			Vehicle p = Game::CreateVehicle("mod:Prototypes/Vehicles/geraete/pylone.e4p", "EinsatzortDummy");
			p.Hide();
			Game::FindFreePosition(&p,Einsatzort);
			p.SetPosition(Einsatzort);
			p.PushActionWait(ACTION_NEWLIST, 3);
			if (Game::IsMultiplayer())
				p.SetPlayerMP(Caller->GetPlayerMP());
		} else Vehicle p(Caller);

		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 51, false);
	}
};

object rufe_asgw : CommandScript
{
	rufe_asgw()
	{
		SetValidTargets(ACTOR_FLOOR);
		SetIcon("rufe_asgw");
		SetCursor("rufe_asgw");
	}
	bool CheckTarget(GameObject *Caller, Actor *Target, int childID)
	{
		return true;
	}
	void PushActions(GameObject *Caller, Actor *Target, int childID)
	{
		Einsatzort=Game::GetCommandPos();
		if (Target->GetType() == ACTOR_FLOOR)
		{
			Vehicle p = Game::CreateVehicle("mod:Prototypes/Vehicles/geraete/pylone.e4p", "EinsatzortDummy");
			p.Hide();
			Game::FindFreePosition(&p,Einsatzort);
			p.SetPosition(Einsatzort);
			p.PushActionWait(ACTION_NEWLIST, 3);
			if (Game::IsMultiplayer())
				p.SetPlayerMP(Caller->GetPlayerMP());
		} else Vehicle p(Caller);

		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 8, false);
	}
};

object rufe_bdienst : CommandScript
{
	rufe_bdienst()
	{
		SetValidTargets(ACTOR_FLOOR);
		SetIcon("rufe_bdienst");
		SetCursor("rufe_bdienst");
	}
	bool CheckTarget(GameObject *Caller, Actor *Target, int childID)
	{
		return true;
	}
	void PushActions(GameObject *Caller, Actor *Target, int childID)
	{
		Einsatzort=Game::GetCommandPos();
		if (Target->GetType() == ACTOR_FLOOR)
		{
			Vehicle p = Game::CreateVehicle("mod:Prototypes/Vehicles/geraete/pylone.e4p", "EinsatzortDummy");
			p.Hide();
			Game::FindFreePosition(&p,Einsatzort);
			p.SetPosition(Einsatzort);
			p.PushActionWait(ACTION_NEWLIST, 3);
			if (Game::IsMultiplayer())
				p.SetPlayerMP(Caller->GetPlayerMP());
		} else Vehicle p(Caller);

	        Vector TargetPosition=Game::GetCommandPos();

		if(Game::IsInTrigger("einsatzgebiet_nord_west", TargetPosition))
		{
			p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 7, false);
		}
		else
		if(Game::IsInTrigger("einsatzgebiet_nord_ost", TargetPosition))
		{
			p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 7, false);
		}
		else
		if(Game::IsInTrigger("einsatzgebiet_mitte", TargetPosition))
		{
			p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 65, false);
		}
		else
		if(Game::IsInTrigger("einsatzgebiet_sued", TargetPosition))
		{
			p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 65, false);
		}
	}
};


object rufe_bfw : CommandScript
{
	rufe_bfw()
	{
		SetValidTargets(ACTOR_FLOOR);
		SetIcon("rufe_bfw");
		SetCursor("rufe_bfw");
	}
	bool CheckTarget(GameObject *Caller, Actor *Target, int childID)
	{
		return true;
	}
	void PushActions(GameObject *Caller, Actor *Target, int childID)
	{
		Einsatzort=Game::GetCommandPos();
		if (Target->GetType() == ACTOR_FLOOR)
		{
			Vehicle p = Game::CreateVehicle("mod:Prototypes/Vehicles/geraete/pylone.e4p", "EinsatzortDummy");
			p.Hide();
			Game::FindFreePosition(&p,Einsatzort);
			p.SetPosition(Einsatzort);
			p.PushActionWait(ACTION_NEWLIST, 3);
			if (Game::IsMultiplayer())
				p.SetPlayerMP(Caller->GetPlayerMP());
		} else Vehicle p(Caller);

		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 20, false);
	}
};

object rufe_dekon : CommandScript
{
	rufe_dekon()
	{
		SetValidTargets(ACTOR_FLOOR);
		SetIcon("rufe_dekon");
		SetCursor("rufe_dekon");
	}
	bool CheckTarget(GameObject *Caller, Actor *Target, int childID)
	{
		return true;
	}
	void PushActions(GameObject *Caller, Actor *Target, int childID)
	{
		Einsatzort=Game::GetCommandPos();
		if (Target->GetType() == ACTOR_FLOOR)
		{
			Vehicle p = Game::CreateVehicle("mod:Prototypes/Vehicles/geraete/pylone.e4p", "EinsatzortDummy");
			p.Hide();
			Game::FindFreePosition(&p,Einsatzort);
			p.SetPosition(Einsatzort);
			p.PushActionWait(ACTION_NEWLIST, 3);
			if (Game::IsMultiplayer())
				p.SetPlayerMP(Caller->GetPlayerMP());
		} else Vehicle p(Caller);

		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 32, false);
	}
};

object rufe_hubretter : CommandScript
{
	rufe_hubretter()
	{
		SetValidTargets(ACTOR_FLOOR);
		SetIcon("rufe_dlk");
		SetCursor("rufe_dlk");
	}
	bool CheckTarget(GameObject *Caller, Actor *Target, int childID)
	{
		return true;
	}
	void PushActions(GameObject *Caller, Actor *Target, int childID)
	{
		Einsatzort=Game::GetCommandPos();
		if (Target->GetType() == ACTOR_FLOOR)
		{
			Vehicle p = Game::CreateVehicle("mod:Prototypes/Vehicles/geraete/pylone.e4p", "EinsatzortDummy");
			p.Hide();
			Game::FindFreePosition(&p,Einsatzort);
			p.SetPosition(Einsatzort);
			p.PushActionWait(ACTION_NEWLIST, 3);
			if (Game::IsMultiplayer())
				p.SetPlayerMP(Caller->GetPlayerMP());
		} else Vehicle p(Caller);

	        Vector TargetPosition=Game::GetCommandPos();

		if(Game::IsInTrigger("einsatzgebiet_nord_west", TargetPosition))
		{
			p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 23, false);
		}
		else
		if(Game::IsInTrigger("einsatzgebiet_nord_ost", TargetPosition))
		{
			p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 4, false);
		}
		else
		if(Game::IsInTrigger("einsatzgebiet_mitte", TargetPosition))
		{
			p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 14, false);
		}
		else
		if(Game::IsInTrigger("einsatzgebiet_sued", TargetPosition))
		{
			p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 62, false);
		}
	}
};

object rufe_tmf_f12 : CommandScript
{
	rufe_tmf_f12()
	{
		SetValidTargets(ACTOR_FLOOR);
		SetIcon("rufe_dlk");
		SetCursor("rufe_dlk");
	}
	bool CheckTarget(GameObject *Caller, Actor *Target, int childID)
	{
		return true;
	}
	void PushActions(GameObject *Caller, Actor *Target, int childID)
	{
		Einsatzort=Game::GetCommandPos();
		if (Target->GetType() == ACTOR_FLOOR)
		{
			Vehicle p = Game::CreateVehicle("mod:Prototypes/Vehicles/geraete/pylone.e4p", "EinsatzortDummy");
			p.Hide();
			Game::FindFreePosition(&p,Einsatzort);
			p.SetPosition(Einsatzort);
			p.PushActionWait(ACTION_NEWLIST, 3);
			if (Game::IsMultiplayer())
				p.SetPlayerMP(Caller->GetPlayerMP());
		} else Vehicle p(Caller);

		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 4, false);
	}
};

object rufe_tmf_f22 : CommandScript
{
	rufe_tmf_f22()
	{
		SetValidTargets(ACTOR_FLOOR);
		SetIcon("rufe_dlk");
		SetCursor("rufe_dlk");
	}
	bool CheckTarget(GameObject *Caller, Actor *Target, int childID)
	{
		return true;
	}
	void PushActions(GameObject *Caller, Actor *Target, int childID)
	{
		Einsatzort=Game::GetCommandPos();
		if (Target->GetType() == ACTOR_FLOOR)
		{
			Vehicle p = Game::CreateVehicle("mod:Prototypes/Vehicles/geraete/pylone.e4p", "EinsatzortDummy");
			p.Hide();
			Game::FindFreePosition(&p,Einsatzort);
			p.SetPosition(Einsatzort);
			p.PushActionWait(ACTION_NEWLIST, 3);
			if (Game::IsMultiplayer())
				p.SetPlayerMP(Caller->GetPlayerMP());
		} else Vehicle p(Caller);

		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 14, false);
	}
};

object rufe_dlk_f23 : CommandScript
{
	rufe_dlk_f23()
	{
		SetValidTargets(ACTOR_FLOOR);
		SetIcon("rufe_dlk");
		SetCursor("rufe_dlk");
	}
	bool CheckTarget(GameObject *Caller, Actor *Target, int childID)
	{
		return true;
	}
	void PushActions(GameObject *Caller, Actor *Target, int childID)
	{
		Einsatzort=Game::GetCommandPos();
		if (Target->GetType() == ACTOR_FLOOR)
		{
			Vehicle p = Game::CreateVehicle("mod:Prototypes/Vehicles/geraete/pylone.e4p", "EinsatzortDummy");
			p.Hide();
			Game::FindFreePosition(&p,Einsatzort);
			p.SetPosition(Einsatzort);
			p.PushActionWait(ACTION_NEWLIST, 3);
			if (Game::IsMultiplayer())
				p.SetPlayerMP(Caller->GetPlayerMP());
		} else Vehicle p(Caller);

		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 62, false);
	}
};

object rufe_tmf_f33 : CommandScript
{
	rufe_tmf_f33()
	{
		SetValidTargets(ACTOR_FLOOR);
		SetIcon("rufe_dlk");
		SetCursor("rufe_dlk");
	}
	bool CheckTarget(GameObject *Caller, Actor *Target, int childID)
	{
		return true;
	}
	void PushActions(GameObject *Caller, Actor *Target, int childID)
	{
		Einsatzort=Game::GetCommandPos();
		if (Target->GetType() == ACTOR_FLOOR)
		{
			Vehicle p = Game::CreateVehicle("mod:Prototypes/Vehicles/geraete/pylone.e4p", "EinsatzortDummy");
			p.Hide();
			Game::FindFreePosition(&p,Einsatzort);
			p.SetPosition(Einsatzort);
			p.PushActionWait(ACTION_NEWLIST, 3);
			if (Game::IsMultiplayer())
				p.SetPlayerMP(Caller->GetPlayerMP());
		} else Vehicle p(Caller);

		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 23, false);
	}
};

object rufe_entstoerdienst : CommandScript
{
	rufe_entstoerdienst()
	{
		SetValidTargets(ACTOR_FLOOR);
		SetIcon("rufe_entstoerdienst");
		SetCursor("rufe_entstoerdienst");
	}
	bool CheckTarget(GameObject *Caller, Actor *Target, int childID)
	{
		return true;
	}
	void PushActions(GameObject *Caller, Actor *Target, int childID)
	{
		Einsatzort=Game::GetCommandPos();
		if (Target->GetType() == ACTOR_FLOOR)
		{
			Vehicle p = Game::CreateVehicle("mod:Prototypes/Vehicles/geraete/pylone.e4p", "EinsatzortDummy");
			p.Hide();
			Game::FindFreePosition(&p,Einsatzort);
			p.SetPosition(Einsatzort);
			p.PushActionWait(ACTION_NEWLIST, 3);
			if (Game::IsMultiplayer())
				p.SetPlayerMP(Caller->GetPlayerMP());
		} else Vehicle p(Caller);

		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 50, false);
	}
};

object rufe_ff : CommandScript
{
	rufe_ff()
	{
		SetValidTargets(ACTOR_FLOOR);
		SetIcon("rufe_ff");
		SetCursor("rufe_ff");
	}
	bool CheckTarget(GameObject *Caller, Actor *Target, int childID)
	{
		return true;
	}
	void PushActions(GameObject *Caller, Actor *Target, int childID)
	{
		Einsatzort=Game::GetCommandPos();
		if (Target->GetType() == ACTOR_FLOOR)
		{
			Vehicle p = Game::CreateVehicle("mod:Prototypes/Vehicles/geraete/pylone.e4p", "EinsatzortDummy");
			p.Hide();
			Game::FindFreePosition(&p,Einsatzort);
			p.SetPosition(Einsatzort);
			p.PushActionWait(ACTION_NEWLIST, 3);
			if (Game::IsMultiplayer())
				p.SetPlayerMP(Caller->GetPlayerMP());
		} else Vehicle p(Caller);

		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 27, false);
	}
};

object rufe_grtw : CommandScript
{
	rufe_grtw()
	{
		SetValidTargets(ACTOR_FLOOR);
		SetIcon("rufe_grtw");
		SetCursor("rufe_grtw");
	}
	bool CheckTarget(GameObject *Caller, Actor *Target, int childID)
	{
		return true;
	}
	void PushActions(GameObject *Caller, Actor *Target, int childID)
	{
		Einsatzort=Game::GetCommandPos();
		if (Target->GetType() == ACTOR_FLOOR)
		{
			Vehicle p = Game::CreateVehicle("mod:Prototypes/Vehicles/geraete/pylone.e4p", "EinsatzortDummy");
			p.Hide();
			Game::FindFreePosition(&p,Einsatzort);
			p.SetPosition(Einsatzort);
			p.PushActionWait(ACTION_NEWLIST, 3);
			if (Game::IsMultiplayer())
				p.SetPlayerMP(Caller->GetPlayerMP());
		} else Vehicle p(Caller);

		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 11, false);
	}
};

object rufe_gw : CommandScript
{
	rufe_gw()
	{
		SetValidTargets(ACTOR_FLOOR);
		SetIcon("rufe_gw");
		SetCursor("rufe_gw");
	}
	bool CheckTarget(GameObject *Caller, Actor *Target, int childID)
	{
		return true;
	}
	void PushActions(GameObject *Caller, Actor *Target, int childID)
	{
		Einsatzort=Game::GetCommandPos();
		if (Target->GetType() == ACTOR_FLOOR)
		{
			Vehicle p = Game::CreateVehicle("mod:Prototypes/Vehicles/geraete/pylone.e4p", "EinsatzortDummy");
			p.Hide();
			Game::FindFreePosition(&p,Einsatzort);
			p.SetPosition(Einsatzort);
			p.PushActionWait(ACTION_NEWLIST, 3);
			if (Game::IsMultiplayer())
				p.SetPlayerMP(Caller->GetPlayerMP());
		} else Vehicle p(Caller);

		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 18, false);
	}
};

object rufe_gwh : CommandScript
{
	rufe_gwh()
	{
		SetValidTargets(ACTOR_FLOOR);
		SetIcon("rufe_gwh");
		SetCursor("rufe_gwh");
	}
	bool CheckTarget(GameObject *Caller, Actor *Target, int childID)
	{
		return true;
	}
	void PushActions(GameObject *Caller, Actor *Target, int childID)
	{
		Einsatzort=Game::GetCommandPos();
		if (Target->GetType() == ACTOR_FLOOR)
		{
			Vehicle p = Game::CreateVehicle("mod:Prototypes/Vehicles/geraete/pylone.e4p", "EinsatzortDummy");
			p.Hide();
			Game::FindFreePosition(&p,Einsatzort);
			p.SetPosition(Einsatzort);
			p.PushActionWait(ACTION_NEWLIST, 3);
			if (Game::IsMultiplayer())
				p.SetPlayerMP(Caller->GetPlayerMP());
		} else Vehicle p(Caller);

		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 9, false);
	}
};

object rufe_gwrd : CommandScript
{
	rufe_gwrd()
	{
		SetValidTargets(ACTOR_FLOOR);
		SetIcon("rufe_gwrd");
		SetCursor("rufe_gwrd");
	}
	bool CheckTarget(GameObject *Caller, Actor *Target, int childID)
	{
		return true;
	}
	void PushActions(GameObject *Caller, Actor *Target, int childID)
	{
		Einsatzort=Game::GetCommandPos();
		if (Target->GetType() == ACTOR_FLOOR)
		{
			Vehicle p = Game::CreateVehicle("mod:Prototypes/Vehicles/geraete/pylone.e4p", "EinsatzortDummy");
			p.Hide();
			Game::FindFreePosition(&p,Einsatzort);
			p.SetPosition(Einsatzort);
			p.PushActionWait(ACTION_NEWLIST, 3);
			if (Game::IsMultiplayer())
				p.SetPlayerMP(Caller->GetPlayerMP());
		} else Vehicle p(Caller);

		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 26, false);
	}
};

object rufe_hlf : CommandScript
{
	rufe_hlf()
	{
		SetValidTargets(ACTOR_FLOOR);
		SetIcon("rufe_hlf");
		SetCursor("rufe_hlf");
	}
	bool CheckTarget(GameObject *Caller, Actor *Target, int childID)
	{
		return true;
	}
	void PushActions(GameObject *Caller, Actor *Target, int childID)
	{
		Einsatzort=Game::GetCommandPos();
		if (Target->GetType() == ACTOR_FLOOR)
		{
			Vehicle p = Game::CreateVehicle("mod:Prototypes/Vehicles/geraete/pylone.e4p", "EinsatzortDummy");
			p.Hide();
			Game::FindFreePosition(&p,Einsatzort);
			p.SetPosition(Einsatzort);
			p.PushActionWait(ACTION_NEWLIST, 3);
			if (Game::IsMultiplayer())
				p.SetPlayerMP(Caller->GetPlayerMP());
		} else Vehicle p(Caller);

	        Vector TargetPosition=Game::GetCommandPos();

		if(Game::IsInTrigger("einsatzgebiet_nord_west", TargetPosition))
		{
			p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 22, false);
		}
		else
		if(Game::IsInTrigger("einsatzgebiet_nord_ost", TargetPosition))
		{
			p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 2, false);
		}
		else
		if(Game::IsInTrigger("einsatzgebiet_mitte", TargetPosition))
		{
			p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 13, false);
		}
		else
		if(Game::IsInTrigger("einsatzgebiet_sued", TargetPosition))
		{
			p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 60, false);
		}
	}
};

object rufe_hlf_f12 : CommandScript
{
	rufe_hlf_f12()
	{
		SetValidTargets(ACTOR_FLOOR);
		SetIcon("rufe_hlf");
		SetCursor("rufe_hlf");
	}
	bool CheckTarget(GameObject *Caller, Actor *Target, int childID)
	{
		return true;
	}
	void PushActions(GameObject *Caller, Actor *Target, int childID)
	{
		Einsatzort=Game::GetCommandPos();
		if (Target->GetType() == ACTOR_FLOOR)
		{
			Vehicle p = Game::CreateVehicle("mod:Prototypes/Vehicles/geraete/pylone.e4p", "EinsatzortDummy");
			p.Hide();
			Game::FindFreePosition(&p,Einsatzort);
			p.SetPosition(Einsatzort);
			p.PushActionWait(ACTION_NEWLIST, 3);
			if (Game::IsMultiplayer())
				p.SetPlayerMP(Caller->GetPlayerMP());
		} else Vehicle p(Caller);

		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 2, false);
	}
};

object rufe_hlf_f22 : CommandScript
{
	rufe_hlf_f22()
	{
		SetValidTargets(ACTOR_FLOOR);
		SetIcon("rufe_hlf");
		SetCursor("rufe_hlf");
	}
	bool CheckTarget(GameObject *Caller, Actor *Target, int childID)
	{
		return true;
	}
	void PushActions(GameObject *Caller, Actor *Target, int childID)
	{
		Einsatzort=Game::GetCommandPos();
		if (Target->GetType() == ACTOR_FLOOR)
		{
			Vehicle p = Game::CreateVehicle("mod:Prototypes/Vehicles/geraete/pylone.e4p", "EinsatzortDummy");
			p.Hide();
			Game::FindFreePosition(&p,Einsatzort);
			p.SetPosition(Einsatzort);
			p.PushActionWait(ACTION_NEWLIST, 3);
			if (Game::IsMultiplayer())
				p.SetPlayerMP(Caller->GetPlayerMP());
		} else Vehicle p(Caller);

		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 13, false);
	}
};

object rufe_hlf_f23 : CommandScript
{
	rufe_hlf_f23()
	{
		SetValidTargets(ACTOR_FLOOR);
		SetIcon("rufe_hlf");
		SetCursor("rufe_hlf");
	}
	bool CheckTarget(GameObject *Caller, Actor *Target, int childID)
	{
		return true;
	}
	void PushActions(GameObject *Caller, Actor *Target, int childID)
	{
		Einsatzort=Game::GetCommandPos();
		if (Target->GetType() == ACTOR_FLOOR)
		{
			Vehicle p = Game::CreateVehicle("mod:Prototypes/Vehicles/geraete/pylone.e4p", "EinsatzortDummy");
			p.Hide();
			Game::FindFreePosition(&p,Einsatzort);
			p.SetPosition(Einsatzort);
			p.PushActionWait(ACTION_NEWLIST, 3);
			if (Game::IsMultiplayer())
				p.SetPlayerMP(Caller->GetPlayerMP());
		} else Vehicle p(Caller);

		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 60, false);
	}
};

object rufe_hlf_f33 : CommandScript
{
	rufe_hlf_f33()
	{
		SetValidTargets(ACTOR_FLOOR);
		SetIcon("rufe_hlf");
		SetCursor("rufe_hlf");
	}
	bool CheckTarget(GameObject *Caller, Actor *Target, int childID)
	{
		return true;
	}
	void PushActions(GameObject *Caller, Actor *Target, int childID)
	{
		Einsatzort=Game::GetCommandPos();
		if (Target->GetType() == ACTOR_FLOOR)
		{
			Vehicle p = Game::CreateVehicle("mod:Prototypes/Vehicles/geraete/pylone.e4p", "EinsatzortDummy");
			p.Hide();
			Game::FindFreePosition(&p,Einsatzort);
			p.SetPosition(Einsatzort);
			p.PushActionWait(ACTION_NEWLIST, 3);
			if (Game::IsMultiplayer())
				p.SetPlayerMP(Caller->GetPlayerMP());
		} else Vehicle p(Caller);

		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 22, false);
	}
};

object rufe_klf : CommandScript
{
	rufe_klf()
	{
		SetValidTargets(ACTOR_FLOOR);
		SetIcon("rufe_klf");
		SetCursor("rufe_klf");
	}
	bool CheckTarget(GameObject *Caller, Actor *Target, int childID)
	{
		return true;
	}
	void PushActions(GameObject *Caller, Actor *Target, int childID)
	{
		Einsatzort=Game::GetCommandPos();
		if (Target->GetType() == ACTOR_FLOOR)
		{
			Vehicle p = Game::CreateVehicle("mod:Prototypes/Vehicles/geraete/pylone.e4p", "EinsatzortDummy");
			p.Hide();
			Game::FindFreePosition(&p,Einsatzort);
			p.SetPosition(Einsatzort);
			p.PushActionWait(ACTION_NEWLIST, 3);
			if (Game::IsMultiplayer())
				p.SetPlayerMP(Caller->GetPlayerMP());
		} else Vehicle p(Caller);

	        Vector TargetPosition=Game::GetCommandPos();

		if(Game::IsInTrigger("einsatzgebiet_nord_west", TargetPosition))
		{
			p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 21, false);
		}
		else
		if(Game::IsInTrigger("einsatzgebiet_nord_ost", TargetPosition))
		{
			p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 1, false);
		}
		else
		if(Game::IsInTrigger("einsatzgebiet_mitte", TargetPosition))
		{
			p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 12, false);
		}
		else
		if(Game::IsInTrigger("einsatzgebiet_sued", TargetPosition))
		{
			p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 59, false);
		}
	}
};

object rufe_klf_f12 : CommandScript
{
	rufe_klf_f12()
	{
		SetValidTargets(ACTOR_FLOOR);
		SetIcon("rufe_klf");
		SetCursor("rufe_klf");
	}
	bool CheckTarget(GameObject *Caller, Actor *Target, int childID)
	{
		return true;
	}
	void PushActions(GameObject *Caller, Actor *Target, int childID)
	{
		Einsatzort=Game::GetCommandPos();
		if (Target->GetType() == ACTOR_FLOOR)
		{
			Vehicle p = Game::CreateVehicle("mod:Prototypes/Vehicles/geraete/pylone.e4p", "EinsatzortDummy");
			p.Hide();
			Game::FindFreePosition(&p,Einsatzort);
			p.SetPosition(Einsatzort);
			p.PushActionWait(ACTION_NEWLIST, 3);
			if (Game::IsMultiplayer())
				p.SetPlayerMP(Caller->GetPlayerMP());
		} else Vehicle p(Caller);

		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 1, false);
	}
};

object rufe_klf_f22 : CommandScript
{
	rufe_klf_f22()
	{
		SetValidTargets(ACTOR_FLOOR);
		SetIcon("rufe_klf");
		SetCursor("rufe_klf");
	}
	bool CheckTarget(GameObject *Caller, Actor *Target, int childID)
	{
		return true;
	}
	void PushActions(GameObject *Caller, Actor *Target, int childID)
	{
		Einsatzort=Game::GetCommandPos();
		if (Target->GetType() == ACTOR_FLOOR)
		{
			Vehicle p = Game::CreateVehicle("mod:Prototypes/Vehicles/geraete/pylone.e4p", "EinsatzortDummy");
			p.Hide();
			Game::FindFreePosition(&p,Einsatzort);
			p.SetPosition(Einsatzort);
			p.PushActionWait(ACTION_NEWLIST, 3);
			if (Game::IsMultiplayer())
				p.SetPlayerMP(Caller->GetPlayerMP());
		} else Vehicle p(Caller);

		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 12, false);
	}
};

object rufe_klf_f23 : CommandScript
{
	rufe_klf_f23()
	{
		SetValidTargets(ACTOR_FLOOR);
		SetIcon("rufe_klf");
		SetCursor("rufe_klf");
	}
	bool CheckTarget(GameObject *Caller, Actor *Target, int childID)
	{
		return true;
	}
	void PushActions(GameObject *Caller, Actor *Target, int childID)
	{
		Einsatzort=Game::GetCommandPos();
		if (Target->GetType() == ACTOR_FLOOR)
		{
			Vehicle p = Game::CreateVehicle("mod:Prototypes/Vehicles/geraete/pylone.e4p", "EinsatzortDummy");
			p.Hide();
			Game::FindFreePosition(&p,Einsatzort);
			p.SetPosition(Einsatzort);
			p.PushActionWait(ACTION_NEWLIST, 3);
			if (Game::IsMultiplayer())
				p.SetPlayerMP(Caller->GetPlayerMP());
		} else Vehicle p(Caller);

		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 59, false);
	}
};

object rufe_klf_f33 : CommandScript
{
	rufe_klf_f33()
	{
		SetValidTargets(ACTOR_FLOOR);
		SetIcon("rufe_klf");
		SetCursor("rufe_klf");
	}
	bool CheckTarget(GameObject *Caller, Actor *Target, int childID)
	{
		return true;
	}
	void PushActions(GameObject *Caller, Actor *Target, int childID)
	{
		Einsatzort=Game::GetCommandPos();
		if (Target->GetType() == ACTOR_FLOOR)
		{
			Vehicle p = Game::CreateVehicle("mod:Prototypes/Vehicles/geraete/pylone.e4p", "EinsatzortDummy");
			p.Hide();
			Game::FindFreePosition(&p,Einsatzort);
			p.SetPosition(Einsatzort);
			p.PushActionWait(ACTION_NEWLIST, 3);
			if (Game::IsMultiplayer())
				p.SetPlayerMP(Caller->GetPlayerMP());
		} else Vehicle p(Caller);

		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 21, false);
	}
};

object rufe_kmrd : CommandScript
{
	rufe_kmrd()
	{
		SetValidTargets(ACTOR_FLOOR);
		SetIcon("rufe_kmrd");
		SetCursor("rufe_kmrd");
	}
	bool CheckTarget(GameObject *Caller, Actor *Target, int childID)
	{
		return true;
	}
	void PushActions(GameObject *Caller, Actor *Target, int childID)
	{
		Einsatzort=Game::GetCommandPos();
		if (Target->GetType() == ACTOR_FLOOR)
		{
			Vehicle p = Game::CreateVehicle("mod:Prototypes/Vehicles/geraete/pylone.e4p", "EinsatzortDummy");
			p.Hide();
			Game::FindFreePosition(&p,Einsatzort);
			p.SetPosition(Einsatzort);
			p.PushActionWait(ACTION_NEWLIST, 3);
			if (Game::IsMultiplayer())
				p.SetPlayerMP(Caller->GetPlayerMP());
		} else Vehicle p(Caller);

		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 31, false);
	}
};

object rufe_kran : CommandScript
{
	rufe_kran()
	{
		SetValidTargets(ACTOR_FLOOR);
		SetIcon("rufe_kran");
		SetCursor("rufe_kran");
	}
	bool CheckTarget(GameObject *Caller, Actor *Target, int childID)
	{
		return true;
	}
	void PushActions(GameObject *Caller, Actor *Target, int childID)
	{
		Einsatzort=Game::GetCommandPos();
		if (Target->GetType() == ACTOR_FLOOR)
		{
			Vehicle p = Game::CreateVehicle("mod:Prototypes/Vehicles/geraete/pylone.e4p", "EinsatzortDummy");
			p.Hide();
			Game::FindFreePosition(&p,Einsatzort);
			p.SetPosition(Einsatzort);
			p.PushActionWait(ACTION_NEWLIST, 3);
			if (Game::IsMultiplayer())
				p.SetPlayerMP(Caller->GetPlayerMP());
		} else Vehicle p(Caller);

		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 33, false);
	}
};

object rufe_kripo : CommandScript
{
	rufe_kripo()
	{
		SetValidTargets(ACTOR_FLOOR);
		SetIcon("rufe_kripo");
		SetCursor("rufe_kripo");
	}
	bool CheckTarget(GameObject *Caller, Actor *Target, int childID)
	{
		return true;
	}
	void PushActions(GameObject *Caller, Actor *Target, int childID)
	{
		Einsatzort=Game::GetCommandPos();
		if (Target->GetType() == ACTOR_FLOOR)
		{
			Vehicle p = Game::CreateVehicle("mod:Prototypes/Vehicles/geraete/pylone.e4p", "EinsatzortDummy");
			p.Hide();
			Game::FindFreePosition(&p,Einsatzort);
			p.SetPosition(Einsatzort);
			p.PushActionWait(ACTION_NEWLIST, 3);
			if (Game::IsMultiplayer())
				p.SetPlayerMP(Caller->GetPlayerMP());
		} else Vehicle p(Caller);

		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 42, false);
	}
};

object rufe_loeschzug : CommandScript
{
	rufe_loeschzug()
	{
		SetValidTargets(ACTOR_FLOOR);
		SetIcon("rufe_loeschzug");
		SetCursor("rufe_loeschzug");
	}
	bool CheckTarget(GameObject *Caller, Actor *Target, int childID)
	{
		return true;
	}
	void PushActions(GameObject *Caller, Actor *Target, int childID)
	{
		Einsatzort=Game::GetCommandPos();
		if (Target->GetType() == ACTOR_FLOOR)
		{
			Vehicle p = Game::CreateVehicle("mod:Prototypes/Vehicles/geraete/pylone.e4p", "EinsatzortDummy");
			p.Hide();
			Game::FindFreePosition(&p,Einsatzort);
			p.SetPosition(Einsatzort);
			p.PushActionWait(ACTION_NEWLIST, 3);
			if (Game::IsMultiplayer())
				p.SetPlayerMP(Caller->GetPlayerMP());
		} else Vehicle p(Caller);

	        Vector TargetPosition=Game::GetCommandPos();

		if(Game::IsInTrigger("einsatzgebiet_nord_west", TargetPosition))
		{
			p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 133, false);
		}
		else
		if(Game::IsInTrigger("einsatzgebiet_nord_ost", TargetPosition))
		{
			p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 112, false);
		}
		else
		if(Game::IsInTrigger("einsatzgebiet_mitte", TargetPosition))
		{
			p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 122, false);
		}
		else
		if(Game::IsInTrigger("einsatzgebiet_sued", TargetPosition))
		{
			p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 123, false);
		}
	}
};


object rufe_mtw : CommandScript
{
	rufe_mtw()
	{
		SetValidTargets(ACTOR_FLOOR);
		SetIcon("rufe_mtw");
		SetCursor("rufe_mtw");
	}
	bool CheckTarget(GameObject *Caller, Actor *Target, int childID)
	{
		return true;
	}
	void PushActions(GameObject *Caller, Actor *Target, int childID)
	{
		Einsatzort=Game::GetCommandPos();
		if (Target->GetType() == ACTOR_FLOOR)
		{
			Vehicle p = Game::CreateVehicle("mod:Prototypes/Vehicles/geraete/pylone.e4p", "EinsatzortDummy");
			p.Hide();
			Game::FindFreePosition(&p,Einsatzort);
			p.SetPosition(Einsatzort);
			p.PushActionWait(ACTION_NEWLIST, 3);
			if (Game::IsMultiplayer())
				p.SetPlayerMP(Caller->GetPlayerMP());
		} else Vehicle p(Caller);

		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 41, false);
	}
};

object rufe_nef : CommandScript
{
	rufe_nef()
	{
		SetValidTargets(ACTOR_FLOOR);
		SetIcon("rufe_nef");
		SetCursor("rufe_nef");
	}
	bool CheckTarget(GameObject *Caller, Actor *Target, int childID)
	{
		return true;
	}
	void PushActions(GameObject *Caller, Actor *Target, int childID)
	{
		Einsatzort=Game::GetCommandPos();
		if (Target->GetType() == ACTOR_FLOOR)
		{
			Vehicle p = Game::CreateVehicle("mod:Prototypes/Vehicles/geraete/pylone.e4p", "EinsatzortDummy");
			p.Hide();
			Game::FindFreePosition(&p,Einsatzort);
			p.SetPosition(Einsatzort);
			p.PushActionWait(ACTION_NEWLIST, 3);
			if (Game::IsMultiplayer())
				p.SetPlayerMP(Caller->GetPlayerMP());
		} else Vehicle p(Caller);

	        Vector TargetPosition=Game::GetCommandPos();

		if(Game::IsInTrigger("einsatzgebiet_nord_west", TargetPosition))
		{
			p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 35, false);
		}
		else
		if(Game::IsInTrigger("einsatzgebiet_nord_ost", TargetPosition))
		{
			p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 34, false);
		}
		else
		if(Game::IsInTrigger("einsatzgebiet_mitte", TargetPosition))
		{
			p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 35, false);
		}
		else
		if(Game::IsInTrigger("einsatzgebiet_sued", TargetPosition))
		{
			p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 36, false);
		}
	}
};

object rufe_pol : CommandScript
{
	rufe_pol()
	{
		SetValidTargets(ACTOR_FLOOR);
		SetIcon("rufe_pol");
		SetCursor("rufe_pol");
	}
	bool CheckTarget(GameObject *Caller, Actor *Target, int childID)
	{
		return true;
	}
	void PushActions(GameObject *Caller, Actor *Target, int childID)
	{
		Einsatzort=Game::GetCommandPos();
		if (Target->GetType() == ACTOR_FLOOR)
		{
			Vehicle p = Game::CreateVehicle("mod:Prototypes/Vehicles/geraete/pylone.e4p", "EinsatzortDummy");
			p.Hide();
			Game::FindFreePosition(&p,Einsatzort);
			p.SetPosition(Einsatzort);
			p.PushActionWait(ACTION_NEWLIST, 3);
			if (Game::IsMultiplayer())
				p.SetPlayerMP(Caller->GetPlayerMP());
		} else Vehicle p(Caller);

		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 44, false);
	}
};

object rufe_rth : CommandScript
{
	rufe_rth()
	{
		SetValidTargets(ACTOR_FLOOR);
		SetIcon("rufe_rth");
		SetCursor("rufe_rth");
	}
	bool CheckTarget(GameObject *Caller, Actor *Target, int childID)
	{
		return true;
	}
	void PushActions(GameObject *Caller, Actor *Target, int childID)
	{
		Einsatzort=Game::GetCommandPos();
		if (Target->GetType() == ACTOR_FLOOR)
		{
			Vehicle p = Game::CreateVehicle("mod:Prototypes/Vehicles/geraete/pylone.e4p", "EinsatzortDummy");
			p.Hide();
			Game::FindFreePosition(&p,Einsatzort);
			p.SetPosition(Einsatzort);
			p.PushActionWait(ACTION_NEWLIST, 3);
			if (Game::IsMultiplayer())
				p.SetPlayerMP(Caller->GetPlayerMP());
		} else Vehicle p(Caller);

		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 66, false);
	}
};

object rufe_rtw : CommandScript
{
	rufe_rtw()
	{
		SetValidTargets(ACTOR_FLOOR);
		SetIcon("rufe_rtw");
		SetCursor("rufe_rtw");
	}
	bool CheckTarget(GameObject *Caller, Actor *Target, int childID)
	{
		return true;
	}
	void PushActions(GameObject *Caller, Actor *Target, int childID)
	{
		Einsatzort=Game::GetCommandPos();
		if (Target->GetType() == ACTOR_FLOOR)
		{
			Vehicle p = Game::CreateVehicle("mod:Prototypes/Vehicles/geraete/pylone.e4p", "EinsatzortDummy");
			p.Hide();
			Game::FindFreePosition(&p,Einsatzort);
			p.SetPosition(Einsatzort);
			p.PushActionWait(ACTION_NEWLIST, 3);
			if (Game::IsMultiplayer())
				p.SetPlayerMP(Caller->GetPlayerMP());
		} else Vehicle p(Caller);

	        Vector TargetPosition=Game::GetCommandPos();

		if(Game::IsInTrigger("einsatzgebiet_nord_west", TargetPosition))
		{
			p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 24, false);
		}
		else
		if(Game::IsInTrigger("einsatzgebiet_nord_ost", TargetPosition))
		{
			p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 5, false);
		}
		else
		if(Game::IsInTrigger("einsatzgebiet_mitte", TargetPosition))
		{
			p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 15, false);
		}
		else
		if(Game::IsInTrigger("einsatzgebiet_sued", TargetPosition))
		{
			p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 63, false);
		}
	}
};

object rufe_rw : CommandScript
{
	rufe_rw()
	{
		SetValidTargets(ACTOR_FLOOR);
		SetIcon("rufe_rw");
		SetCursor("rufe_rw");
	}
	bool CheckTarget(GameObject *Caller, Actor *Target, int childID)
	{
		return true;
	}
	void PushActions(GameObject *Caller, Actor *Target, int childID)
	{
		Einsatzort=Game::GetCommandPos();
		if (Target->GetType() == ACTOR_FLOOR)
		{
			Vehicle p = Game::CreateVehicle("mod:Prototypes/Vehicles/geraete/pylone.e4p", "EinsatzortDummy");
			p.Hide();
			Game::FindFreePosition(&p,Einsatzort);
			p.SetPosition(Einsatzort);
			p.PushActionWait(ACTION_NEWLIST, 3);
			if (Game::IsMultiplayer())
				p.SetPlayerMP(Caller->GetPlayerMP());
		} else Vehicle p(Caller);

		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 10, false);
	}
};

object rufe_segt : CommandScript
{
	rufe_segt()
	{
		SetValidTargets(ACTOR_FLOOR);
		SetIcon("rufe_segt");
		SetCursor("rufe_segt");
	}
	bool CheckTarget(GameObject *Caller, Actor *Target, int childID)
	{
		return true;
	}
	void PushActions(GameObject *Caller, Actor *Target, int childID)
	{
		Einsatzort=Game::GetCommandPos();
		if (Target->GetType() == ACTOR_FLOOR)
		{
			Vehicle p = Game::CreateVehicle("mod:Prototypes/Vehicles/geraete/pylone.e4p", "EinsatzortDummy");
			p.Hide();
			Game::FindFreePosition(&p,Einsatzort);
			p.SetPosition(Einsatzort);
			p.PushActionWait(ACTION_NEWLIST, 3);
			if (Game::IsMultiplayer())
				p.SetPlayerMP(Caller->GetPlayerMP());
		} else Vehicle p(Caller);

		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 29, false);
	}
};

object rufe_thw : CommandScript
{
	rufe_thw()
	{
		SetValidTargets(ACTOR_FLOOR);
		SetIcon("rufe_thw");
		SetCursor("rufe_thw");
	}
	bool CheckTarget(GameObject *Caller, Actor *Target, int childID)
	{
		return true;
	}
	void PushActions(GameObject *Caller, Actor *Target, int childID)
	{
		Einsatzort=Game::GetCommandPos();
		if (Target->GetType() == ACTOR_FLOOR)
		{
			Vehicle p = Game::CreateVehicle("mod:Prototypes/Vehicles/geraete/pylone.e4p", "EinsatzortDummy");
			p.Hide();
			Game::FindFreePosition(&p,Einsatzort);
			p.SetPosition(Einsatzort);
			p.PushActionWait(ACTION_NEWLIST, 3);
			if (Game::IsMultiplayer())
				p.SetPlayerMP(Caller->GetPlayerMP());
		} else Vehicle p(Caller);

		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 47, false);
	}
};

object rufe_udienst : CommandScript
{
	rufe_udienst()
	{
		SetValidTargets(ACTOR_FLOOR);
		SetIcon("rufe_udienst");
		SetCursor("rufe_udienst");
	}
	bool CheckTarget(GameObject *Caller, Actor *Target, int childID)
	{
		return true;
	}
	void PushActions(GameObject *Caller, Actor *Target, int childID)
	{
		Einsatzort=Game::GetCommandPos();
		if (Target->GetType() == ACTOR_FLOOR)
		{
			Vehicle p = Game::CreateVehicle("mod:Prototypes/Vehicles/geraete/pylone.e4p", "EinsatzortDummy");
			p.Hide();
			Game::FindFreePosition(&p,Einsatzort);
			p.SetPosition(Einsatzort);
			p.PushActionWait(ACTION_NEWLIST, 3);
			if (Game::IsMultiplayer())
				p.SetPlayerMP(Caller->GetPlayerMP());
		} else Vehicle p(Caller);

		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 30, false);
	}
};


object rufe_vattenfall : CommandScript
{
	rufe_vattenfall()
	{
		SetValidTargets(ACTOR_FLOOR);
		SetIcon("rufe_vattenfall");
		SetCursor("rufe_vattenfall");
	}
	bool CheckTarget(GameObject *Caller, Actor *Target, int childID)
	{
		return true;
	}
	void PushActions(GameObject *Caller, Actor *Target, int childID)
	{
		Einsatzort=Game::GetCommandPos();
		if (Target->GetType() == ACTOR_FLOOR)
		{
			Vehicle p = Game::CreateVehicle("mod:Prototypes/Vehicles/geraete/pylone.e4p", "EinsatzortDummy");
			p.Hide();
			Game::FindFreePosition(&p,Einsatzort);
			p.SetPosition(Einsatzort);
			p.PushActionWait(ACTION_NEWLIST, 3);
			if (Game::IsMultiplayer())
				p.SetPlayerMP(Caller->GetPlayerMP());
		} else Vehicle p(Caller);

		p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 134, false);
	}
};

object rufe_fahrzeug : CommandScript
{
	rufe_fahrzeug()
	{
	}

	bool CheckTarget(GameObject *Caller, Actor *Target, int childID)
	{
		return true;
	}

    void makeCallerToOwner(GameObject obj, int player) {
        if (Game::IsMultiplayer()) {
            obj->SetPlayerMP(player);
            
            Vehicle v(obj);
            PersonList vehiclePersons = v.GetPassengers();
            if (vehiclePersons.GetNumPersons() > 0) {
                for (int i = 0; i < vehiclePersons.GetNumPersons(); i++) {
                    vehiclePersons.GetPerson(i)->SetPlayerMP(player);
                }
            }
        }
    }

	void PushActions(GameObject *Caller, Actor *Target, int childID)
	{

		Audio::PlaySample("mod:Audio/FX/alarmierung/alarm.wav");

		if (Caller->GetType() == ACTOR_VEHICLE || Caller->GetType() == ACTOR_PERSON) {
			Einsatzort = Caller->GetPosition();
		} else {
			Einsatzort = Game::GetCommandPos();
		}

		switch(childID)
		{
    		case 1:
			    int Fahrzeug;
			    bool FahrzeugFrei;
			    GameObjectList l0 = Game::GetGameObjects(TYPE_VEHICLE);
		        Fahrzeug = -1;

		        for(int i=0; i<l0.GetNumObjects(); i++)
		        {
				    GameObject *Obj = l0.GetObject(i);

				    if (Obj->HasCommand("f12_klf") && !Obj->HasCommand("ich_bin_nicht_frei")) {
                        FahrzeugFrei = false;
    					Vehicle v(Obj);
    					PersonList pol = v.GetPassengers();
					
                        if (pol.GetNumPersons() >= 1)
					        FahrzeugFrei = true;
					
                        if (FahrzeugFrei == true) {
    						Fahrzeug = i;
    						Obj->PushActionExecuteCommand(ACTION_NEWLIST,"RufePersonal", Obj, 2, true);
    						char * Wache = "f12";
    						char * sndfile = "mod:Audio/FX/alarmierung/alarm_klf.wav";
    					}
				    }
			    }

    			if (Fahrzeug == -1)
    			{
    				for(int i=0; i<l0.GetNumObjects(); i++)
        				{
    					GameObject *Obj = l0.GetObject(i);
    					if (Obj->HasCommand("f22_klf") && !Obj->HasCommand("ich_bin_nicht_frei"))
    					{
    						FahrzeugFrei = false;
    						Vehicle v(Obj);
    						PersonList pol = v.GetPassengers();
    						if (pol.GetNumPersons() >= 1)
    						FahrzeugFrei = true;
    						if (FahrzeugFrei == true)
    						{
    							Fahrzeug = i;
    							Obj->PushActionExecuteCommand(ACTION_NEWLIST,"RufePersonal", Obj, 2, true);
    							char * Wache = "f22";
    							char * sndfile = "mod:Audio/FX/alarmierung/alarm_klf.wav";
    						}
    					}
    			  	}
    			}
    			if (Fahrzeug == -1)
    			{
    				for(int i=0; i<l0.GetNumObjects(); i++)
    		    		{
    					GameObject *Obj = l0.GetObject(i);
    					if (Obj->HasCommand("f33_klf") && !Obj->HasCommand("ich_bin_nicht_frei"))
    					{
    						FahrzeugFrei = false;
    						Vehicle v(Obj);
    						PersonList pol = v.GetPassengers();
    						if (pol.GetNumPersons() >= 1)
    						FahrzeugFrei = true;
    						if (FahrzeugFrei == true)
    						{
    							Fahrzeug = i;
    							Obj->PushActionExecuteCommand(ACTION_NEWLIST,"RufePersonal", Obj, 2, true);
    		               				char * Wache = "f33";
    							char * sndfile = "mod:Audio/FX/alarmierung/alarm_klf.wav";
    						}
    					}
    	  			}
    			}
    			if (Fahrzeug == -1)
    			{
    				for(int i=0; i<l0.GetNumObjects(); i++)
    		    		{
    					GameObject *Obj = l0.GetObject(i);
    					if (Obj->HasCommand("f23_klf") && !Obj->HasCommand("ich_bin_nicht_frei"))
    					{
    						FahrzeugFrei = false;
    						Vehicle v(Obj);
    						PersonList pol = v.GetPassengers();
    						if (pol.GetNumPersons() >= 1)
    						FahrzeugFrei = true;
    						if (FahrzeugFrei == true)
    						{
    							Fahrzeug = i;
    							Obj->PushActionExecuteCommand(ACTION_NEWLIST,"RufePersonal", Obj, 2, true);
    		               				char * Wache = "f23";
    							char * sndfile = "mod:Audio/FX/alarmierung/alarm_klf.wav";
    						}
    					}
    			  	}
    			}
    			if (Fahrzeug < 0)
    			{
    			  	Mission::PlayHint("Zur Zeit sind alle KLFs im Einsatz! Es wird daher der B-Dienst alarmiert!");
    				Caller->PushActionExecuteCommand(ACTION_APPEND, "rufe_bdienst",Caller,7,false);
    			  	return;
    			}

    		    Mission::PlayHint("+++ KLF wird alarmiert +++");

    			if (Wache=="f12")
    			{
    				GameObjectList WachListe = Game::GetGameObjects("gate_f12_tmf");
    				for(int i=0; i < WachListe.GetNumObjects(); i++)
    				{
    					GameObject *WachObjekt = WachListe.GetObject(i);
    					Vector AlarmPosition = WachObjekt->GetPosition();
    					Audio::PlaySample3D(sndfile, AlarmPosition, false);
    				}
    		        }
    			if (Wache=="f22")
    			{
    				GameObjectList WachListe = Game::GetGameObjects("gate_f22_hlf1");
    				for(int i=0; i < WachListe.GetNumObjects(); i++)
    				{
    					GameObject *WachObjekt = WachListe.GetObject(i);
    					Vector AlarmPosition = WachObjekt->GetPosition();
    					Audio::PlaySample3D(sndfile, AlarmPosition, false);
    				}
    		        }
    			if (Wache=="f23")
    			{
    				GameObjectList WachListe = Game::GetGameObjects("gate_f23_rtwb");
    				for(int i=0; i < WachListe.GetNumObjects(); i++)
    				{
    					GameObject *WachObjekt = WachListe.GetObject(i);
    					Vector AlarmPosition = WachObjekt->GetPosition();
    					Audio::PlaySample3D(sndfile, AlarmPosition, false);
    				}
    		        }
    			if (Wache=="f33")
    			{
    				GameObjectList WachListe = Game::GetGameObjects("gate_f33_rtwa");

    				for(int i=0; i < WachListe.GetNumObjects(); i++)
    				{
    					GameObject *WachObjekt = WachListe.GetObject(i);
    					Vector AlarmPosition = WachObjekt->GetPosition();
    					Audio::PlaySample3D(sndfile, AlarmPosition, false);
    				}
		        }

    			GameObject *Obj = l0.GetObject(Fahrzeug);
    			Obj->AssignCommand("ich_bin_nicht_frei");
    			Obj->PushActionExecuteCommand(ACTION_APPEND,"OpenGate",Obj,0,true);
    			Obj->PushActionWait(ACTION_APPEND, 3);
    			Obj->PushActionLightOn(ACTION_APPEND, true);
    			Obj->PushActionWait(ACTION_APPEND, 3);
    			Game::FindFreePosition(Obj, Einsatzort, 100);
    			Obj->PushActionExecuteCommand(ACTION_APPEND,"VCmdSiren",Obj,0,false);
    			Obj->PushActionMove(ACTION_APPEND, Einsatzort);
    			Obj->PushActionExecuteCommand(ACTION_APPEND,"CloseGate",Obj,0,true);
    			Obj->PushActionExecuteCommand(ACTION_APPEND, "DUMMYDisableSiren", Caller, 2, false);

                makeCallerToOwner(Obj, Caller->GetPlayerMP());

		        break;

		case 2:
			int Fahrzeug;
			bool FahrzeugFrei;
			GameObjectList l0 = Game::GetGameObjects(TYPE_VEHICLE);
		        Fahrzeug = -1;
		        for(int i=0; i<l0.GetNumObjects(); i++)
		        {
				GameObject *Obj = l0.GetObject(i);
				if (Obj->HasCommand("f12_hlf2") && !Obj->HasCommand("ich_bin_nicht_frei"))
				{
					FahrzeugFrei = false;
					Vehicle v(Obj);
					PersonList pol = v.GetPassengers();
					if (pol.GetNumPersons() >= 1)
					FahrzeugFrei = true;
					if (FahrzeugFrei == true)
					{
						Fahrzeug = i;
						Obj->PushActionExecuteCommand(ACTION_NEWLIST,"RufePersonal", Obj, 6, true);
						char * Wache = "f12";
						char * sndfile = "mod:Audio/FX/alarmierung/alarm_hlf2.wav";
					}
				}
			}
			if (Fahrzeug == -1)
			{
				for(int i=0; i<l0.GetNumObjects(); i++)
		    		{
					GameObject *Obj = l0.GetObject(i);
					if (Obj->HasCommand("f12_hlf1") && !Obj->HasCommand("ich_bin_nicht_frei"))
					{
						FahrzeugFrei = false;
						Vehicle v(Obj);
						PersonList pol = v.GetPassengers();
						if (pol.GetNumPersons() >= 1)
						FahrzeugFrei = true;
						if (FahrzeugFrei == true)
						{
							Fahrzeug = i;
							Obj->PushActionExecuteCommand(ACTION_NEWLIST,"RufePersonal", Obj, 6, true);
							char * Wache = "f12";
							char * sndfile = "mod:Audio/FX/alarmierung/alarm_hlf1.wav";
						}
					}
			  	}
			}
			if (Fahrzeug == -1)
			{
				for(int i=0; i<l0.GetNumObjects(); i++)
		    		{
					GameObject *Obj = l0.GetObject(i);
					if (Obj->HasCommand("f22_hlf1") && !Obj->HasCommand("ich_bin_nicht_frei"))
					{
						FahrzeugFrei = false;
						Vehicle v(Obj);
						PersonList pol = v.GetPassengers();
						if (pol.GetNumPersons() >= 1)
						FahrzeugFrei = true;
						if (FahrzeugFrei == true)
						{
							Fahrzeug = i;
							Obj->PushActionExecuteCommand(ACTION_NEWLIST,"RufePersonal", Obj, 6, true);
							char * Wache = "f22";
							char * sndfile = "mod:Audio/FX/alarmierung/alarm_hlf1.wav";
						}
					}
			  	}
			}
			if (Fahrzeug == -1)
			{
				for(int i=0; i<l0.GetNumObjects(); i++)
		    		{
					GameObject *Obj = l0.GetObject(i);
					if (Obj->HasCommand("f33_hlf1") && !Obj->HasCommand("ich_bin_nicht_frei"))
					{
						FahrzeugFrei = false;
						Vehicle v(Obj);
						PersonList pol = v.GetPassengers();
						if (pol.GetNumPersons() >= 1)
						FahrzeugFrei = true;
						if (FahrzeugFrei == true)
						{
							Fahrzeug = i;
							Obj->PushActionExecuteCommand(ACTION_NEWLIST,"RufePersonal", Obj, 6, true);
							char * Wache = "f33";
							char * sndfile = "mod:Audio/FX/alarmierung/alarm_hlf1.wav";
						}
					}
			  	}
			}
			if (Fahrzeug == -1)
			{
				for(int i=0; i<l0.GetNumObjects(); i++)
		    		{
					GameObject *Obj = l0.GetObject(i);
					if (Obj->HasCommand("f23_hlf1") && !Obj->HasCommand("ich_bin_nicht_frei"))
					{
						FahrzeugFrei = false;
						Vehicle v(Obj);
						PersonList pol = v.GetPassengers();
						if (pol.GetNumPersons() >= 1)
						FahrzeugFrei = true;
						if (FahrzeugFrei == true)
						{
							Fahrzeug = i;
							Obj->PushActionExecuteCommand(ACTION_NEWLIST,"RufePersonal", Obj, 6, true);
							char * Wache = "f23";
							char * sndfile = "mod:Audio/FX/alarmierung/alarm_hlf1.wav";
						}
					}
			  	}
			}
			if (Fahrzeug == -1)
			{
				for(int i=0; i<l0.GetNumObjects(); i++)
		    		{
					GameObject *Obj = l0.GetObject(i);
					if (Obj->HasCommand("f23_hlf2") && !Obj->HasCommand("ich_bin_nicht_frei"))
					{
						FahrzeugFrei = false;
						Vehicle v(Obj);
						PersonList pol = v.GetPassengers();
						if (pol.GetNumPersons() >= 1)
						FahrzeugFrei = true;
						if (FahrzeugFrei == true)
						{
							Fahrzeug = i;
							Obj->PushActionExecuteCommand(ACTION_NEWLIST,"RufePersonal", Obj, 6, true);
							char * Wache = "f23";
							char * sndfile = "mod:Audio/FX/alarmierung/alarm_hlf2.wav";
						}
					}
			  	}
			}
			if (Fahrzeug < 0)
			{
				Mission::PlayHint("Zur Zeit ist kein freies HLF verfügbar!");
			  	return;
			}

			Mission::PlayHint("+++ HLF wird alarmiert +++");
			if (Wache=="f12")
			{
				GameObjectList WachListe = Game::GetGameObjects("gate_f12_tmf");
				for(int i=0; i < WachListe.GetNumObjects(); i++)
				{
					GameObject *WachObjekt = WachListe.GetObject(i);
					Vector AlarmPosition = WachObjekt->GetPosition();
					Audio::PlaySample3D(sndfile, AlarmPosition, false);
				}
		        }
			if (Wache=="f22")
			{
				GameObjectList WachListe = Game::GetGameObjects("gate_f22_hlf1");
				for(int i=0; i < WachListe.GetNumObjects(); i++)
				{
					GameObject *WachObjekt = WachListe.GetObject(i);
					Vector AlarmPosition = WachObjekt->GetPosition();
					Audio::PlaySample3D(sndfile, AlarmPosition, false);
				}
		        }
			if (Wache=="f23")
			{
				GameObjectList WachListe = Game::GetGameObjects("gate_f23_rtwb");
				for(int i=0; i < WachListe.GetNumObjects(); i++)
				{
					GameObject *WachObjekt = WachListe.GetObject(i);
					Vector AlarmPosition = WachObjekt->GetPosition();
					Audio::PlaySample3D(sndfile, AlarmPosition, false);
				}
		        }
			if (Wache=="f33")
			{
				GameObjectList WachListe = Game::GetGameObjects("gate_f33_rtwa");
				for(int i=0; i < WachListe.GetNumObjects(); i++)
				{
					GameObject *WachObjekt = WachListe.GetObject(i);
					Vector AlarmPosition = WachObjekt->GetPosition();
					Audio::PlaySample3D(sndfile, AlarmPosition, false);
				}
	        }
			GameObject *Obj = l0.GetObject(Fahrzeug);
			Obj->AssignCommand("ich_bin_nicht_frei");
			Obj->PushActionExecuteCommand(ACTION_APPEND,"OpenGate",Obj,0,true);
			Obj->PushActionWait(ACTION_APPEND, 3);
			Obj->PushActionLightOn(ACTION_APPEND, true);
			Obj->PushActionWait(ACTION_APPEND, 3);
			Game::FindFreePosition(Obj, Einsatzort, 100);
			Obj->PushActionExecuteCommand(ACTION_APPEND,"VCmdSiren",Obj,0,false);
			Obj->PushActionMove(ACTION_APPEND, Einsatzort);
			Obj->PushActionExecuteCommand(ACTION_APPEND,"CloseGate",Obj,0,true);
			Obj->PushActionExecuteCommand(ACTION_APPEND, "DUMMYDisableSiren", Caller, 2, false);

            makeCallerToOwner(Obj, Caller->GetPlayerMP());
		break;

		case 4:
			int Fahrzeug;
			bool FahrzeugFrei;
			GameObjectList l0 = Game::GetGameObjects(TYPE_VEHICLE);
		        Fahrzeug = -1;
		        for(int i=0; i<l0.GetNumObjects(); i++)
		        {
				GameObject *Obj = l0.GetObject(i);
				if (Obj->HasCommand("f12_tmf") && !Obj->HasCommand("ich_bin_nicht_frei"))
				{
					FahrzeugFrei = false;
					Vehicle v(Obj);
					PersonList pol = v.GetPassengers();
					if (pol.GetNumPersons() >= 1)
					FahrzeugFrei = true;
					if (FahrzeugFrei == true)
					{
						Fahrzeug = i;
						Obj->PushActionExecuteCommand(ACTION_NEWLIST,"RufePersonal", Obj, 2, true);
						char * Wache = "f12";
						char * sndfile = "mod:Audio/FX/alarmierung/alarm_dlk.wav";
					}
				}
			}
			if (Fahrzeug == -1)
			{
				for(int i=0; i<l0.GetNumObjects(); i++)
		    		{
					GameObject *Obj = l0.GetObject(i);
					if (Obj->HasCommand("f22_tmf") && !Obj->HasCommand("ich_bin_nicht_frei"))
					{
						FahrzeugFrei = false;
						Vehicle v(Obj);
						PersonList pol = v.GetPassengers();
						if (pol.GetNumPersons() >= 1)
						FahrzeugFrei = true;
						if (FahrzeugFrei == true)
						{
							Fahrzeug = i;
							Obj->PushActionExecuteCommand(ACTION_NEWLIST,"RufePersonal", Obj, 2, true);
							char * Wache = "f22";
							char * sndfile = "mod:Audio/FX/alarmierung/alarm_dlk.wav";
						}
					}
			  	}
			}
			if (Fahrzeug == -1)
			{
				for(int i=0; i<l0.GetNumObjects(); i++)
		    		{
					GameObject *Obj = l0.GetObject(i);
					if (Obj->HasCommand("f33_tmf") && !Obj->HasCommand("ich_bin_nicht_frei"))
					{
						FahrzeugFrei = false;
						Vehicle v(Obj);
						PersonList pol = v.GetPassengers();
						if (pol.GetNumPersons() >= 1)
						FahrzeugFrei = true;
						if (FahrzeugFrei == true)
						{
							Fahrzeug = i;
							Obj->PushActionExecuteCommand(ACTION_NEWLIST,"RufePersonal", Obj, 2, true);
							char * Wache = "f33";
							char * sndfile = "mod:Audio/FX/alarmierung/alarm_dlk.wav";
						}
					}
			  	}
			}
			if (Fahrzeug == -1)
			{
				for(int i=0; i<l0.GetNumObjects(); i++)
		    		{
					GameObject *Obj = l0.GetObject(i);
					if (Obj->HasCommand("f23_dlk") && !Obj->HasCommand("ich_bin_nicht_frei"))
					{
						FahrzeugFrei = false;
						Vehicle v(Obj);
						PersonList pol = v.GetPassengers();
						if (pol.GetNumPersons() >= 1)
						FahrzeugFrei = true;
						if (FahrzeugFrei == true)
						{
							Fahrzeug = i;
							Obj->PushActionExecuteCommand(ACTION_NEWLIST,"RufePersonal", Obj, 2, true);
							char * Wache = "f23";
							char * sndfile = "mod:Audio/FX/alarmierung/alarm_dlk.wav";
						}
					}
	  			}
			}
			if (Fahrzeug < 0)
			{
				Mission::PlayHint("Zur Zeit ist leider kein Hubrettungsfahrzeug verfügbar!");
			  	return;
			}

			Mission::PlayHint("+++ Hubrettungsfahrzeug wird alarmiert +++");
			if (Wache=="f12")
			{
				GameObjectList WachListe = Game::GetGameObjects("gate_f12_tmf");
				for(int i=0; i < WachListe.GetNumObjects(); i++)
				{
					GameObject *WachObjekt = WachListe.GetObject(i);
					Vector AlarmPosition = WachObjekt->GetPosition();
					Audio::PlaySample3D(sndfile, AlarmPosition, false);
				}
		        }
			if (Wache=="f22")
			{
				GameObjectList WachListe = Game::GetGameObjects("gate_f22_hlf1");
				for(int i=0; i < WachListe.GetNumObjects(); i++)
				{
					GameObject *WachObjekt = WachListe.GetObject(i);
					Vector AlarmPosition = WachObjekt->GetPosition();
					Audio::PlaySample3D(sndfile, AlarmPosition, false);
				}
		        }
			if (Wache=="f23")
			{
				GameObjectList WachListe = Game::GetGameObjects("gate_f23_rtwb");
				for(int i=0; i < WachListe.GetNumObjects(); i++)
				{
					GameObject *WachObjekt = WachListe.GetObject(i);
					Vector AlarmPosition = WachObjekt->GetPosition();
					Audio::PlaySample3D(sndfile, AlarmPosition, false);
				}
		        }
			if (Wache=="f33")
			{
				GameObjectList WachListe = Game::GetGameObjects("gate_f33_rtwa");
				for(int i=0; i < WachListe.GetNumObjects(); i++)
				{
					GameObject *WachObjekt = WachListe.GetObject(i);
					Vector AlarmPosition = WachObjekt->GetPosition();
					Audio::PlaySample3D(sndfile, AlarmPosition, false);
				}
	        }

			GameObject *Obj = l0.GetObject(Fahrzeug);
			Obj->AssignCommand("ich_bin_nicht_frei");
			Obj->PushActionExecuteCommand(ACTION_APPEND,"OpenGate",Obj,0,true);
			Obj->PushActionWait(ACTION_APPEND, 3);
			Obj->PushActionLightOn(ACTION_APPEND, true);
			Obj->PushActionWait(ACTION_APPEND, 3);
			Game::FindFreePosition(Obj, Einsatzort, 100);
			Obj->PushActionExecuteCommand(ACTION_APPEND,"VCmdSiren",Obj,0,false);
			Obj->PushActionMove(ACTION_APPEND, Einsatzort);
			Obj->PushActionExecuteCommand(ACTION_APPEND,"CloseGate",Obj,0,true);
			Obj->PushActionExecuteCommand(ACTION_APPEND, "DUMMYDisableSiren", Caller, 2, false);

            makeCallerToOwner(Obj, Caller->GetPlayerMP());
		break;

		case 5:
			int Fahrzeug;
			bool FahrzeugFrei;
			GameObjectList l0 = Game::GetGameObjects(TYPE_VEHICLE);
		        Fahrzeug = -1;
		        for(int i=0; i<l0.GetNumObjects(); i++)
		        {
				GameObject *Obj = l0.GetObject(i);
				if (Obj->HasCommand("f12_rtwa") && !Obj->HasCommand("ich_bin_nicht_frei"))
				{
					FahrzeugFrei = false;
					Vehicle v(Obj);
					PersonList pol = v.GetPassengers();
					if (pol.GetNumPersons() >= 1)
					FahrzeugFrei = true;
					if (FahrzeugFrei == true)
					{
						Fahrzeug = i;
						Obj->PushActionExecuteCommand(ACTION_NEWLIST,"RufePersonal", Obj, 2, true);
						char * Wache = "f12";
						char * sndfile = "mod:Audio/FX/alarmierung/alarm_rtwa.wav";
					}
				}
			}
			if (Fahrzeug == -1)
			{
				for(int i=0; i<l0.GetNumObjects(); i++)
		    		{
					GameObject *Obj = l0.GetObject(i);
					if (Obj->HasCommand("f12_rtwb") && !Obj->HasCommand("ich_bin_nicht_frei"))
					{
						FahrzeugFrei = false;
						Vehicle v(Obj);
						PersonList pol = v.GetPassengers();
						if (pol.GetNumPersons() >= 1)
						FahrzeugFrei = true;
						if (FahrzeugFrei == true)
						{
							Fahrzeug = i;
							Obj->PushActionExecuteCommand(ACTION_NEWLIST,"RufePersonal", Obj, 2, true);
							char * Wache = "f12";
							char * sndfile = "mod:Audio/FX/alarmierung/alarm_rtwb.wav";
						}
					}
	  			}
			}
			if (Fahrzeug == -1)
			{
				for(int i=0; i<l0.GetNumObjects(); i++)
		    		{
					GameObject *Obj = l0.GetObject(i);
					if (Obj->HasCommand("f12_rtwc") && !Obj->HasCommand("ich_bin_nicht_frei"))
					{
						FahrzeugFrei = false;
						Vehicle v(Obj);
						PersonList pol = v.GetPassengers();
						if (pol.GetNumPersons() >= 1)
						FahrzeugFrei = true;
						if (FahrzeugFrei == true)
						{
							Fahrzeug = i;
							Obj->PushActionExecuteCommand(ACTION_NEWLIST,"RufePersonal", Obj, 2, true);
							char * Wache = "f12";
							char * sndfile = "mod:Audio/FX/alarmierung/alarm_rtwc.wav";
						}
					}
	  			}
			}
			if (Fahrzeug == -1)
			{
				for(int i=0; i<l0.GetNumObjects(); i++)
		    		{
					GameObject *Obj = l0.GetObject(i);
					if (Obj->HasCommand("f22_rtwa") && !Obj->HasCommand("ich_bin_nicht_frei"))
					{
						FahrzeugFrei = false;
						Vehicle v(Obj);
						PersonList pol = v.GetPassengers();
						if (pol.GetNumPersons() >= 1)
						FahrzeugFrei = true;
						if (FahrzeugFrei == true)
						{
							Fahrzeug = i;
							Obj->PushActionExecuteCommand(ACTION_NEWLIST,"RufePersonal", Obj, 2, true);
							char * Wache = "f22";
							char * sndfile = "mod:Audio/FX/alarmierung/alarm_rtwa.wav";
						}
					}
			  	}
			}
			if (Fahrzeug == -1)
			{
				for(int i=0; i<l0.GetNumObjects(); i++)
		    		{
					GameObject *Obj = l0.GetObject(i);
					if (Obj->HasCommand("f22_rtwb") && !Obj->HasCommand("ich_bin_nicht_frei"))
					{
						FahrzeugFrei = false;
						Vehicle v(Obj);
						PersonList pol = v.GetPassengers();
						if (pol.GetNumPersons() >= 1)
						FahrzeugFrei = true;
						if (FahrzeugFrei == true)
						{
							Fahrzeug = i;
							Obj->PushActionExecuteCommand(ACTION_NEWLIST,"RufePersonal", Obj, 2, true);
							char * Wache = "f22";
							char * sndfile = "mod:Audio/FX/alarmierung/alarm_rtwb.wav";
						}
					}
	  			}
			}
			if (Fahrzeug == -1)
			{
				for(int i=0; i<l0.GetNumObjects(); i++)
    				{
					GameObject *Obj = l0.GetObject(i);
					if (Obj->HasCommand("f22_rtwc") && !Obj->HasCommand("ich_bin_nicht_frei"))
					{
						FahrzeugFrei = false;
						Vehicle v(Obj);
						PersonList pol = v.GetPassengers();
						if (pol.GetNumPersons() >= 1)
						FahrzeugFrei = true;
						if (FahrzeugFrei == true)
						{
							Fahrzeug = i;
							Obj->PushActionExecuteCommand(ACTION_NEWLIST,"RufePersonal", Obj, 2, true);
							char * Wache = "f22";
							char * sndfile = "mod:Audio/FX/alarmierung/alarm_rtwc.wav";
						}
					}
			  	}
			}
			if (Fahrzeug == -1)
			{
				for(int i=0; i<l0.GetNumObjects(); i++)
		    		{
					GameObject *Obj = l0.GetObject(i);
					if (Obj->HasCommand("f33_rtwa") && !Obj->HasCommand("ich_bin_nicht_frei"))
					{
						FahrzeugFrei = false;
						Vehicle v(Obj);
						PersonList pol = v.GetPassengers();
						if (pol.GetNumPersons() >= 1)
						FahrzeugFrei = true;
						if (FahrzeugFrei == true)
						{
							Fahrzeug = i;
							Obj->PushActionExecuteCommand(ACTION_NEWLIST,"RufePersonal", Obj, 2, true);
							char * Wache = "f33";
							char * sndfile = "mod:Audio/FX/alarmierung/alarm_rtwa.wav";
						}
					}
			  	}
			}
			if (Fahrzeug == -1)
			{
				for(int i=0; i<l0.GetNumObjects(); i++)
		    		{
					GameObject *Obj = l0.GetObject(i);
					if (Obj->HasCommand("f33_rtwk") && !Obj->HasCommand("ich_bin_nicht_frei"))
					{
						FahrzeugFrei = false;
						Vehicle v(Obj);
						PersonList pol = v.GetPassengers();
						if (pol.GetNumPersons() >= 1)
						FahrzeugFrei = true;
						if (FahrzeugFrei == true)
						{
							Fahrzeug = i;
							Obj->PushActionExecuteCommand(ACTION_NEWLIST,"RufePersonal", Obj, 2, true);
							char * Wache = "f33";
							char * sndfile = "mod:Audio/FX/alarmierung/alarm_rtwk.wav";
						}
					}
	  			}
			}
			if (Fahrzeug == -1)
			{
				for(int i=0; i<l0.GetNumObjects(); i++)
		    		{
					GameObject *Obj = l0.GetObject(i);
					if (Obj->HasCommand("f23_rtwa") && !Obj->HasCommand("ich_bin_nicht_frei"))
					{
						FahrzeugFrei = false;
						Vehicle v(Obj);
						PersonList pol = v.GetPassengers();
						if (pol.GetNumPersons() >= 1)
						FahrzeugFrei = true;
						if (FahrzeugFrei == true)
						{
							Fahrzeug = i;
							Obj->PushActionExecuteCommand(ACTION_NEWLIST,"RufePersonal", Obj, 2, true);
							char * Wache = "f23";
							char * sndfile = "mod:Audio/FX/alarmierung/alarm_rtwa.wav";
						}
					}
	  			}
			}
			if (Fahrzeug == -1)
			{
				for(int i=0; i<l0.GetNumObjects(); i++)
		    		{
					GameObject *Obj = l0.GetObject(i);
					if (Obj->HasCommand("f23_rtwb") && !Obj->HasCommand("ich_bin_nicht_frei"))
					{
						FahrzeugFrei = false;
						Vehicle v(Obj);
						PersonList pol = v.GetPassengers();
						if (pol.GetNumPersons() >= 1)
						FahrzeugFrei = true;
						if (FahrzeugFrei == true)
						{
							Fahrzeug = i;
							Obj->PushActionExecuteCommand(ACTION_NEWLIST,"RufePersonal", Obj, 2, true);
							char * Wache = "f23";
							char * sndfile = "mod:Audio/FX/alarmierung/alarm_rtwb.wav";
						}
					}
			  	}
			}
			if (Fahrzeug == -1)
			{
				for(int i=0; i<l0.GetNumObjects(); i++)
		    		{
					GameObject *Obj = l0.GetObject(i);
					if (Obj->HasCommand("f23_rtwc") && !Obj->HasCommand("ich_bin_nicht_frei"))
					{
						FahrzeugFrei = false;
						Vehicle v(Obj);
						PersonList pol = v.GetPassengers();
						if (pol.GetNumPersons() >= 1)
						FahrzeugFrei = true;
						if (FahrzeugFrei == true)
						{
							Fahrzeug = i;
							Obj->PushActionExecuteCommand(ACTION_NEWLIST,"RufePersonal", Obj, 2, true);
							char * Wache = "f23";
							char * sndfile = "mod:Audio/FX/alarmierung/alarm_rtwc.wav";
						}
					}
			  	}
			}
			if (Fahrzeug < 0)
			{
			  	Mission::PlayHint("Zur Zeit ist kein RTW verfügbar, es wird ein RTW des ASB alarmiert!");
				Caller->PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 56, false);
				return;
			}

		        Mission::PlayHint("+++ RTW wird alarmiert +++");
			if (Wache=="f12")
			{
				GameObjectList WachListe = Game::GetGameObjects("gate_f12_tmf");
				for(int i=0; i < WachListe.GetNumObjects(); i++)
				{
					GameObject *WachObjekt = WachListe.GetObject(i);
					Vector AlarmPosition = WachObjekt->GetPosition();
					Audio::PlaySample3D(sndfile, AlarmPosition, false);
				}
		        }
			if (Wache=="f22")
			{
				GameObjectList WachListe = Game::GetGameObjects("gate_f22_hlf1");
				for(int i=0; i < WachListe.GetNumObjects(); i++)
				{
					GameObject *WachObjekt = WachListe.GetObject(i);
					Vector AlarmPosition = WachObjekt->GetPosition();
					Audio::PlaySample3D(sndfile, AlarmPosition, false);
				}
		        }
			if (Wache=="f23")
			{
				GameObjectList WachListe = Game::GetGameObjects("gate_f23_rtwb");
				for(int i=0; i < WachListe.GetNumObjects(); i++)
				{
					GameObject *WachObjekt = WachListe.GetObject(i);
					Vector AlarmPosition = WachObjekt->GetPosition();
					Audio::PlaySample3D(sndfile, AlarmPosition, false);
				}
		        }
			if (Wache=="f33")
			{
				GameObjectList WachListe = Game::GetGameObjects("gate_f33_rtwa");
				for(int i=0; i < WachListe.GetNumObjects(); i++)
				{
					GameObject *WachObjekt = WachListe.GetObject(i);
					Vector AlarmPosition = WachObjekt->GetPosition();
					Audio::PlaySample3D(sndfile, AlarmPosition, false);
				}
		        }
			GameObject *Obj = l0.GetObject(Fahrzeug);
			Obj->AssignCommand("ich_bin_nicht_frei");
			Obj->PushActionWait(ACTION_APPEND, 5);
			Obj->PushActionExecuteCommand(ACTION_APPEND,"OpenGate",Obj,0,true);
			Obj->PushActionWait(ACTION_APPEND, 3);
			Obj->PushActionLightOn(ACTION_APPEND, true);
			Obj->PushActionWait(ACTION_APPEND, 3);
			Game::FindFreePosition(Obj, Einsatzort, 100);
			Obj->PushActionExecuteCommand(ACTION_APPEND,"VCmdSiren",Obj,0,false);
			Obj->PushActionMove(ACTION_APPEND, Einsatzort);
			Obj->PushActionExecuteCommand(ACTION_APPEND,"CloseGate",Obj,0,true);
			Obj->PushActionExecuteCommand(ACTION_APPEND, "DUMMYDisableSiren", Caller, 2, false);
		
            makeCallerToOwner(Obj, Caller->GetPlayerMP());
        break;

		case 7:
			int Fahrzeug;
			bool FahrzeugFrei;
			GameObjectList l0 = Game::GetGameObjects(TYPE_VEHICLE);
		        Fahrzeug = -1;
		        for(int i=0; i<l0.GetNumObjects(); i++)
		        {
				GameObject *Obj = l0.GetObject(i);
				if (Obj->HasCommand("f12_bdienst") && !Obj->HasCommand("ich_bin_nicht_frei"))
				{
					FahrzeugFrei = false;
					Vehicle v(Obj);
					PersonList pol = v.GetPassengers();
					if (pol.GetNumPersons() >= 1)
					FahrzeugFrei = true;
					if (FahrzeugFrei == true)
					{
						Fahrzeug = i;
						Obj->PushActionExecuteCommand(ACTION_NEWLIST,"RufePersonal", Obj, 2, true);
					}
				}
			}
			if (Fahrzeug == -1)
			{
				for(int i=0; i<l0.GetNumObjects(); i++)
		    		{
					GameObject *Obj = l0.GetObject(i);
					if (Obj->HasCommand("f23_bdienst") && !Obj->HasCommand("ich_bin_nicht_frei"))
					{
						FahrzeugFrei = false;
						Vehicle v(Obj);
						PersonList pol = v.GetPassengers();
						if (pol.GetNumPersons() >= 1)
						FahrzeugFrei = true;
						if (FahrzeugFrei == true)
						{
							Fahrzeug = i;
							Obj->PushActionExecuteCommand(ACTION_NEWLIST,"RufePersonal", Obj, 2, true);
						}
					}
			  	}
			}
			if (Fahrzeug < 0)
			{
				Mission::PlayHint("Der B-Dienst ist zur Zeit nicht verfügbar! Es wird der A-Dienst alarmiert!");
				Caller->PushActionExecuteCommand(ACTION_APPEND, "rufe_adienst",Caller,19,false);
			  	return;
			}

			Mission::PlayHint("+++ B-Dienst wird alarmiert +++");
			Audio::PlaySample("mod:Audio/FX/alarmierung/alarm_sonder.wav");
			GameObject *Obj = l0.GetObject(Fahrzeug);
			Obj->AssignCommand("ich_bin_nicht_frei");
			Obj->PushActionExecuteCommand(ACTION_APPEND,"OpenGate",Obj,0,true);
			Obj->PushActionWait(ACTION_APPEND, 3);
			Obj->PushActionLightOn(ACTION_APPEND, true);
			Obj->PushActionWait(ACTION_APPEND, 3);
			Game::FindFreePosition(Obj, Einsatzort, 100);
			Obj->PushActionExecuteCommand(ACTION_APPEND,"VCmdSiren",Obj,0,false);
			Obj->PushActionMove(ACTION_APPEND, Einsatzort);
			Obj->PushActionExecuteCommand(ACTION_APPEND,"CloseGate",Obj,0,true);
			Obj->PushActionExecuteCommand(ACTION_APPEND, "DUMMYDisableSiren", Caller, 2, false);

            makeCallerToOwner(Obj, Caller->GetPlayerMP());
		break;

		case 8:
			int Fahrzeug;
			bool FahrzeugFrei;
			GameObjectList l0 = Game::GetGameObjects(TYPE_VEHICLE);
		        Fahrzeug = -1;
		        for(int i=0; i<l0.GetNumObjects(); i++)
		        {
				GameObject *Obj = l0.GetObject(i);
				if (Obj->HasCommand("f12_wlf_asgw") && !Obj->HasCommand("ich_bin_nicht_frei"))
				{
					FahrzeugFrei = false;
					Vehicle v(Obj);
					PersonList pol = v.GetPassengers();
					if (pol.GetNumPersons() >= 1)
					FahrzeugFrei = true;
					if (FahrzeugFrei == true)
					{
						Fahrzeug = i;
						Obj->PushActionExecuteCommand(ACTION_NEWLIST,"RufePersonal", Obj, 2, true);
					}
				}
			}

			if (Fahrzeug < 0)
			{
				Mission::PlayHint("AB-Atemschutz ist zur Zeit nicht verfügbar!");
	  			return;
			}

			Mission::PlayHint("+++ AB-Atemschutz wird alarmiert +++");

			char * sndfile = "mod:Audio/FX/alarmierung/alarm_sonder.wav";
			GameObjectList WachListe = Game::GetGameObjects("gate_f12_tmf");
			for(int i=0; i < WachListe.GetNumObjects(); i++)
			{
				GameObject *WachObjekt = WachListe.GetObject(i);
				Vector AlarmPosition = WachObjekt->GetPosition();
				Audio::PlaySample3D(sndfile, AlarmPosition, false);
			}

			GameObject *Obj = l0.GetObject(Fahrzeug);
			Obj->AssignCommand("ich_bin_nicht_frei");
			Obj->PushActionExecuteCommand(ACTION_APPEND,"OpenGate",Obj,0,true);
			Obj->PushActionWait(ACTION_APPEND, 3);
			Obj->PushActionLightOn(ACTION_APPEND, true);
			Obj->PushActionWait(ACTION_APPEND, 3);
			Game::FindFreePosition(Obj, Einsatzort, 100);
			Obj->PushActionExecuteCommand(ACTION_APPEND,"VCmdSiren",Obj,0,false);
			Obj->PushActionMove(ACTION_APPEND, Einsatzort);
			Obj->PushActionExecuteCommand(ACTION_APPEND,"CloseGate",Obj,0,true);
			Obj->PushActionExecuteCommand(ACTION_APPEND, "DUMMYDisableSiren", Caller, 2, false);

            makeCallerToOwner(Obj, Caller->GetPlayerMP());
		break;


		case 9:
			int Fahrzeug;
			bool FahrzeugFrei;
			GameObjectList l0 = Game::GetGameObjects(TYPE_VEHICLE);
		        Fahrzeug = -1;
		        for(int i=0; i<l0.GetNumObjects(); i++)
		        {
				GameObject *Obj = l0.GetObject(i);
				if (Obj->HasCommand("f12_gwh") && !Obj->HasCommand("ich_bin_nicht_frei"))
				{
					FahrzeugFrei = false;
					Vehicle v(Obj);
					PersonList pol = v.GetPassengers();
					if (pol.GetNumPersons() >= 1)
					FahrzeugFrei = true;
					if (FahrzeugFrei == true)
					{
						Fahrzeug = i;
						Obj->PushActionExecuteCommand(ACTION_NEWLIST,"RufePersonal", Obj, 3, true);
					}
				}
			}
			if (Fahrzeug < 0)
			{
				Mission::PlayHint("Der GW-Höhenrettung ist zur Zeit nicht verfügbar!");
			  	return;
			}

			Mission::PlayHint("+++ GW Höhenrettung wird alarmiert +++");
			char * sndfile = "mod:Audio/FX/alarmierung/alarm_sonder.wav";
			GameObjectList WachListe = Game::GetGameObjects("gate_f12_tmf");
			for(int i=0; i < WachListe.GetNumObjects(); i++)
			{
				GameObject *WachObjekt = WachListe.GetObject(i);
				Vector AlarmPosition = WachObjekt->GetPosition();
				Audio::PlaySample3D(sndfile, AlarmPosition, false);
			}
			GameObject *Obj = l0.GetObject(Fahrzeug);
			Obj->AssignCommand("ich_bin_nicht_frei");
			Obj->PushActionExecuteCommand(ACTION_APPEND,"OpenGate",Obj,0,true);
			Obj->PushActionWait(ACTION_APPEND, 3);
			Obj->PushActionLightOn(ACTION_APPEND, true);
			Obj->PushActionWait(ACTION_APPEND, 3);
			Game::FindFreePosition(Obj, Einsatzort, 100);
			Obj->PushActionExecuteCommand(ACTION_APPEND,"VCmdSiren",Obj,0,false);
			Obj->PushActionMove(ACTION_APPEND, Einsatzort);
			Obj->PushActionExecuteCommand(ACTION_APPEND,"CloseGate",Obj,0,true);
			Obj->PushActionExecuteCommand(ACTION_APPEND, "DUMMYDisableSiren", Caller, 2, false);

            makeCallerToOwner(Obj, Caller->GetPlayerMP());
		break;

		case 10:
			int Fahrzeug;
			bool FahrzeugFrei;
			GameObjectList l0 = Game::GetGameObjects(TYPE_VEHICLE);
		        Fahrzeug = -1;
		        for(int i=0; i<l0.GetNumObjects(); i++)
		        {
				GameObject *Obj = l0.GetObject(i);
				if (Obj->HasCommand("f12_rw") && !Obj->HasCommand("ich_bin_nicht_frei"))
				{
					FahrzeugFrei = false;
					Vehicle v(Obj);
					PersonList pol = v.GetPassengers();
					if (pol.GetNumPersons() >= 1)
					FahrzeugFrei = true;
					if (FahrzeugFrei == true)
					{
						Fahrzeug = i;
					}
				}
			}
			if (Fahrzeug < 0)
			{
				Mission::PlayHint("Der Rüstwagen ist nicht verfügbar! Es wird ein HLF angefordert!");
				Caller->PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 2, false);
			  	return;
			}

			Mission::PlayHint("+++ Rüstwagen 12 wird alarmiert +++");
			char * sndfile = "mod:Audio/FX/alarmierung/alarm_rw.wav";
			GameObjectList WachListe = Game::GetGameObjects("gate_f12_tmf");
			for(int i=0; i < WachListe.GetNumObjects(); i++)
			{
				GameObject *WachObjekt = WachListe.GetObject(i);
				Vector AlarmPosition = WachObjekt->GetPosition();
				Audio::PlaySample3D(sndfile, AlarmPosition, false);
			}
			GameObject *Obj = l0.GetObject(Fahrzeug);
			Obj->AssignCommand("ich_bin_nicht_frei");
			Obj->PushActionWait(ACTION_NEWLIST, 3);
			Obj->PushActionExecuteCommand(ACTION_APPEND,"OpenGate",Obj,0,true);
			Obj->PushActionWait(ACTION_APPEND, 3);
			Obj->PushActionLightOn(ACTION_APPEND, true);
			Obj->PushActionWait(ACTION_APPEND, 3);
			Game::FindFreePosition(Obj, Einsatzort, 100);
			Obj->PushActionExecuteCommand(ACTION_APPEND,"VCmdSiren",Obj,0,false);
			Obj->PushActionMove(ACTION_APPEND, Einsatzort);
			Obj->PushActionExecuteCommand(ACTION_APPEND,"CloseGate",Obj,0,true);
			Obj->PushActionExecuteCommand(ACTION_APPEND, "DUMMYDisableSiren", Caller, 2, false);

            makeCallerToOwner(Obj, Caller->GetPlayerMP());
		break;

		case 11:
			int Fahrzeug;
			bool FahrzeugFrei;
			GameObjectList l0 = Game::GetGameObjects(TYPE_VEHICLE);
		        Fahrzeug = -1;
		        for(int i=0; i<l0.GetNumObjects(); i++)
		        {
				GameObject *Obj = l0.GetObject(i);
				if (Obj->HasCommand("f12_grtw") && !Obj->HasCommand("ich_bin_nicht_frei"))
				{
					FahrzeugFrei = false;
					Vehicle v(Obj);
					PersonList pol = v.GetPassengers();
					if (pol.GetNumPersons() >= 1)
					FahrzeugFrei = true;
					if (FahrzeugFrei == true)
					{
						Fahrzeug = i;
						Obj->PushActionExecuteCommand(ACTION_NEWLIST,"RufePersonal", Obj, 1, true);
					}
				}
			}
			if (Fahrzeug < 0)
			{
				Mission::PlayHint("Der GRTW ist zur Zeit nicht verfügbar!");
			  	return;
			}

			Mission::PlayHint("+++ GRTW wird alarmiert +++");
			char * sndfile = "mod:Audio/FX/alarmierung/alarm_sonder.wav";
			GameObjectList WachListe = Game::GetGameObjects("gate_f12_tmf");
			for(int i=0; i < WachListe.GetNumObjects(); i++)
			{
				GameObject *WachObjekt = WachListe.GetObject(i);
				Vector AlarmPosition = WachObjekt->GetPosition();
				Audio::PlaySample3D(sndfile, AlarmPosition, false);
			}
			GameObject *Obj = l0.GetObject(Fahrzeug);
			Obj->AssignCommand("ich_bin_nicht_frei");
			Obj->PushActionExecuteCommand(ACTION_APPEND,"OpenGate",Obj,0,true);
			Obj->PushActionWait(ACTION_APPEND, 3);
			Obj->PushActionLightOn(ACTION_APPEND, true);
			Obj->PushActionWait(ACTION_APPEND, 3);
			Game::FindFreePosition(Obj, Einsatzort, 100);
			Obj->PushActionExecuteCommand(ACTION_APPEND,"VCmdSiren",Obj,0,false);
			Obj->PushActionMove(ACTION_APPEND, Einsatzort);
			Obj->PushActionExecuteCommand(ACTION_APPEND,"CloseGate",Obj,0,true);
			Obj->PushActionExecuteCommand(ACTION_APPEND, "DUMMYDisableSiren", Caller, 2, false);

            makeCallerToOwner(Obj, Caller->GetPlayerMP());
		break;

		case 12:
			int Fahrzeug;
			bool FahrzeugFrei;
			GameObjectList l0 = Game::GetGameObjects(TYPE_VEHICLE);
		        Fahrzeug = -1;
		        for(int i=0; i<l0.GetNumObjects(); i++)
		        {
				GameObject *Obj = l0.GetObject(i);
				if (Obj->HasCommand("f22_klf") && !Obj->HasCommand("ich_bin_nicht_frei"))
				{
					FahrzeugFrei = false;
					Vehicle v(Obj);
					PersonList pol = v.GetPassengers();
					if (pol.GetNumPersons() >= 1)
					FahrzeugFrei = true;
					if (FahrzeugFrei == true)
					{
						Fahrzeug = i;
						Obj->PushActionExecuteCommand(ACTION_NEWLIST,"RufePersonal", Obj, 2, true);
						char * Wache = "f22";
						char * sndfile = "mod:Audio/FX/alarmierung/alarm_klf.wav";
					}
				}
			}
			if (Fahrzeug == -1)
			{
				for(int i=0; i<l0.GetNumObjects(); i++)
		    		{
					GameObject *Obj = l0.GetObject(i);
					if (Obj->HasCommand("f33_klf") && !Obj->HasCommand("ich_bin_nicht_frei"))
					{
						FahrzeugFrei = false;
						Vehicle v(Obj);
						PersonList pol = v.GetPassengers();
						if (pol.GetNumPersons() >= 1)
						FahrzeugFrei = true;
						if (FahrzeugFrei == true)
						{
							Fahrzeug = i;
							Obj->PushActionExecuteCommand(ACTION_NEWLIST,"RufePersonal", Obj, 2, true);
							char * Wache = "f33";
							char * sndfile = "mod:Audio/FX/alarmierung/alarm_klf.wav";
						}
					}
	  			}
			}
			if (Fahrzeug == -1)
			{
				for(int i=0; i<l0.GetNumObjects(); i++)
		    		{
					GameObject *Obj = l0.GetObject(i);
					if (Obj->HasCommand("f23_klf") && !Obj->HasCommand("ich_bin_nicht_frei"))
					{
						FahrzeugFrei = false;
						Vehicle v(Obj);
						PersonList pol = v.GetPassengers();
						if (pol.GetNumPersons() >= 1)
						FahrzeugFrei = true;
						if (FahrzeugFrei == true)
						{
							Fahrzeug = i;
							Obj->PushActionExecuteCommand(ACTION_NEWLIST,"RufePersonal", Obj, 2, true);
							char * Wache = "f23";
							char * sndfile = "mod:Audio/FX/alarmierung/alarm_klf.wav";
						}
					}
			  	}
			}
			if (Fahrzeug == -1)
			{
				for(int i=0; i<l0.GetNumObjects(); i++)
    				{
					GameObject *Obj = l0.GetObject(i);
					if (Obj->HasCommand("f12_klf") && !Obj->HasCommand("ich_bin_nicht_frei"))
					{
						FahrzeugFrei = false;
						Vehicle v(Obj);
						PersonList pol = v.GetPassengers();
						if (pol.GetNumPersons() >= 1)
						FahrzeugFrei = true;
						if (FahrzeugFrei == true)
						{
							Fahrzeug = i;
							Obj->PushActionExecuteCommand(ACTION_NEWLIST,"RufePersonal", Obj, 2, true);
							char * Wache = "f12";
							char * sndfile = "mod:Audio/FX/alarmierung/alarm_klf.wav";
						}
					}
			  	}
			}
			if (Fahrzeug < 0)
			{
	  			Mission::PlayHint("Zur Zeit sind alle KLFs im Einsatz! Es wird daher der B-Dienst alarmiert!");
				Caller->PushActionExecuteCommand(ACTION_APPEND, "rufe_bdienst",Caller,7,false);
			  	return;
			}

		        Mission::PlayHint("+++ KLF wird alarmiert +++");
			if (Wache=="f12")
			{
				GameObjectList WachListe = Game::GetGameObjects("gate_f12_tmf");
				for(int i=0; i < WachListe.GetNumObjects(); i++)
				{
					GameObject *WachObjekt = WachListe.GetObject(i);
					Vector AlarmPosition = WachObjekt->GetPosition();
					Audio::PlaySample3D(sndfile, AlarmPosition, false);
				}
		        }
			if (Wache=="f22")
			{
				GameObjectList WachListe = Game::GetGameObjects("gate_f22_hlf1");
				for(int i=0; i < WachListe.GetNumObjects(); i++)
				{
					GameObject *WachObjekt = WachListe.GetObject(i);
					Vector AlarmPosition = WachObjekt->GetPosition();
					Audio::PlaySample3D(sndfile, AlarmPosition, false);
				}
		        }
			if (Wache=="f23")
			{
				GameObjectList WachListe = Game::GetGameObjects("gate_f23_rtwb");
				for(int i=0; i < WachListe.GetNumObjects(); i++)
				{
					GameObject *WachObjekt = WachListe.GetObject(i);
					Vector AlarmPosition = WachObjekt->GetPosition();
					Audio::PlaySample3D(sndfile, AlarmPosition, false);
				}
		        }
			if (Wache=="f33")
			{
				GameObjectList WachListe = Game::GetGameObjects("gate_f33_rtwa");
				for(int i=0; i < WachListe.GetNumObjects(); i++)
				{
					GameObject *WachObjekt = WachListe.GetObject(i);
					Vector AlarmPosition = WachObjekt->GetPosition();
					Audio::PlaySample3D(sndfile, AlarmPosition, false);
				}
		        }
			GameObject *Obj = l0.GetObject(Fahrzeug);
			Obj->AssignCommand("ich_bin_nicht_frei");
			Obj->PushActionExecuteCommand(ACTION_APPEND,"OpenGate",Obj,0,true);
			Obj->PushActionWait(ACTION_APPEND, 3);
			Obj->PushActionLightOn(ACTION_APPEND, true);
			Obj->PushActionWait(ACTION_APPEND, 3);
			Game::FindFreePosition(Obj, Einsatzort, 100);
			Obj->PushActionExecuteCommand(ACTION_APPEND,"VCmdSiren",Obj,0,false);
			Obj->PushActionMove(ACTION_APPEND, Einsatzort);
			Obj->PushActionExecuteCommand(ACTION_APPEND,"CloseGate",Obj,0,true);
			Obj->PushActionExecuteCommand(ACTION_APPEND, "DUMMYDisableSiren", Caller, 2, false);

            makeCallerToOwner(Obj, Caller->GetPlayerMP());
		break;


		case 13:
			int Fahrzeug;
			bool FahrzeugFrei;
			GameObjectList l0 = Game::GetGameObjects(TYPE_VEHICLE);
		        Fahrzeug = -1;
		        for(int i=0; i<l0.GetNumObjects(); i++)
		        {
				GameObject *Obj = l0.GetObject(i);
				if (Obj->HasCommand("f22_hlf1") && !Obj->HasCommand("ich_bin_nicht_frei"))
				{
					FahrzeugFrei = false;
					Vehicle v(Obj);
					PersonList pol = v.GetPassengers();
					if (pol.GetNumPersons() >= 1)
					FahrzeugFrei = true;
					if (FahrzeugFrei == true)
					{
						Fahrzeug = i;
						Obj->PushActionExecuteCommand(ACTION_NEWLIST,"RufePersonal", Obj, 6, true);
						char * Wache = "f22";
						char * sndfile = "mod:Audio/FX/alarmierung/alarm_hlf1.wav";
					}
				}
			}
			if (Fahrzeug == -1)
			{
				for(int i=0; i<l0.GetNumObjects(); i++)
		    		{
					GameObject *Obj = l0.GetObject(i);
					if (Obj->HasCommand("f33_hlf1") && !Obj->HasCommand("ich_bin_nicht_frei"))
					{
						FahrzeugFrei = false;
						Vehicle v(Obj);
						PersonList pol = v.GetPassengers();
						if (pol.GetNumPersons() >= 1)
						FahrzeugFrei = true;
						if (FahrzeugFrei == true)
						{
							Fahrzeug = i;
							Obj->PushActionExecuteCommand(ACTION_NEWLIST,"RufePersonal", Obj, 6, true);
							char * Wache = "f33";
							char * sndfile = "mod:Audio/FX/alarmierung/alarm_hlf1.wav";
						}
					}
			  	}
			}
			if (Fahrzeug == -1)
			{
				for(int i=0; i<l0.GetNumObjects(); i++)
		    		{
					GameObject *Obj = l0.GetObject(i);
					if (Obj->HasCommand("f23_hlf2") && !Obj->HasCommand("ich_bin_nicht_frei"))
					{
						FahrzeugFrei = false;
						Vehicle v(Obj);
						PersonList pol = v.GetPassengers();
						if (pol.GetNumPersons() >= 1)
						FahrzeugFrei = true;
						if (FahrzeugFrei == true)
						{
							Fahrzeug = i;
							Obj->PushActionExecuteCommand(ACTION_NEWLIST,"RufePersonal", Obj, 6, true);
							char * Wache = "f23";
							char * sndfile = "mod:Audio/FX/alarmierung/alarm_hlf2.wav";
						}
					}
			  	}
			}
			if (Fahrzeug == -1)
			{
				for(int i=0; i<l0.GetNumObjects(); i++)
		    		{
					GameObject *Obj = l0.GetObject(i);
					if (Obj->HasCommand("f23_hlf1") && !Obj->HasCommand("ich_bin_nicht_frei"))
					{
						FahrzeugFrei = false;
						Vehicle v(Obj);
						PersonList pol = v.GetPassengers();
						if (pol.GetNumPersons() >= 1)
						FahrzeugFrei = true;
						if (FahrzeugFrei == true)
						{
							Fahrzeug = i;
							Obj->PushActionExecuteCommand(ACTION_NEWLIST,"RufePersonal", Obj, 6, true);
							char * Wache = "f23";
							char * sndfile = "mod:Audio/FX/alarmierung/alarm_hlf1.wav";
						}
					}
			  	}
			}
			if (Fahrzeug == -1)
			{
				for(int i=0; i<l0.GetNumObjects(); i++)
		    		{
					GameObject *Obj = l0.GetObject(i);
					if (Obj->HasCommand("f12_hlf2") && !Obj->HasCommand("ich_bin_nicht_frei"))
					{
						FahrzeugFrei = false;
						Vehicle v(Obj);
						PersonList pol = v.GetPassengers();
						if (pol.GetNumPersons() >= 1)
						FahrzeugFrei = true;
						if (FahrzeugFrei == true)
						{
							Fahrzeug = i;
							Obj->PushActionExecuteCommand(ACTION_NEWLIST,"RufePersonal", Obj, 6, true);
							char * Wache = "f12";
							char * sndfile = "mod:Audio/FX/alarmierung/alarm_hlf2.wav";
						}
					}
	  			}
			}
			if (Fahrzeug == -1)
			{
				for(int i=0; i<l0.GetNumObjects(); i++)
		    		{
					GameObject *Obj = l0.GetObject(i);
					if (Obj->HasCommand("f12_hlf1") && !Obj->HasCommand("ich_bin_nicht_frei"))
					{
						FahrzeugFrei = false;
						Vehicle v(Obj);
						PersonList pol = v.GetPassengers();
						if (pol.GetNumPersons() >= 1)
						FahrzeugFrei = true;
						if (FahrzeugFrei == true)
						{
							Fahrzeug = i;
							Obj->PushActionExecuteCommand(ACTION_NEWLIST,"RufePersonal", Obj, 6, true);
							char * Wache = "f12";
							char * sndfile = "mod:Audio/FX/alarmierung/alarm_hlf1.wav";
						}
					}
			  	}
			}
			if (Fahrzeug < 0)
			{
				Mission::PlayHint("Derzeit ist kein HLF verfügbar!");
			  	return;
			}

			Mission::PlayHint("+++ HLF wird alarmiert +++");

			if (Wache=="f12")
			{
				GameObjectList WachListe = Game::GetGameObjects("gate_f12_tmf");
				for(int i=0; i < WachListe.GetNumObjects(); i++)
				{
					GameObject *WachObjekt = WachListe.GetObject(i);
					Vector AlarmPosition = WachObjekt->GetPosition();
					Audio::PlaySample3D(sndfile, AlarmPosition, false);
				}
		        }
			if (Wache=="f22")
			{
				GameObjectList WachListe = Game::GetGameObjects("gate_f22_hlf1");
				for(int i=0; i < WachListe.GetNumObjects(); i++)
				{
					GameObject *WachObjekt = WachListe.GetObject(i);
					Vector AlarmPosition = WachObjekt->GetPosition();
					Audio::PlaySample3D(sndfile, AlarmPosition, false);
				}
		        }
			if (Wache=="f23")
			{
				GameObjectList WachListe = Game::GetGameObjects("gate_f23_rtwb");
				for(int i=0; i < WachListe.GetNumObjects(); i++)
				{
					GameObject *WachObjekt = WachListe.GetObject(i);
					Vector AlarmPosition = WachObjekt->GetPosition();
					Audio::PlaySample3D(sndfile, AlarmPosition, false);
				}
		        }
			if (Wache=="f33")
			{
				GameObjectList WachListe = Game::GetGameObjects("gate_f33_rtwa");
				for(int i=0; i < WachListe.GetNumObjects(); i++)
				{
					GameObject *WachObjekt = WachListe.GetObject(i);
					Vector AlarmPosition = WachObjekt->GetPosition();
					Audio::PlaySample3D(sndfile, AlarmPosition, false);
				}
		        }
			GameObject *Obj = l0.GetObject(Fahrzeug);
			Obj->AssignCommand("ich_bin_nicht_frei");
			Obj->PushActionExecuteCommand(ACTION_APPEND,"OpenGate",Obj,0,true);
			Obj->PushActionWait(ACTION_APPEND, 3);
			Obj->PushActionLightOn(ACTION_APPEND, true);
			Obj->PushActionWait(ACTION_APPEND, 3);
			Game::FindFreePosition(Obj, Einsatzort, 100);
			Obj->PushActionExecuteCommand(ACTION_APPEND,"VCmdSiren",Obj,0,false);
			Obj->PushActionMove(ACTION_APPEND, Einsatzort);
			Obj->PushActionExecuteCommand(ACTION_APPEND,"CloseGate",Obj,0,true);
			Obj->PushActionExecuteCommand(ACTION_APPEND, "DUMMYDisableSiren", Caller, 2, false);

            makeCallerToOwner(Obj, Caller->GetPlayerMP());
		break;

		case 14:
			int Fahrzeug;
			bool FahrzeugFrei;
			GameObjectList l0 = Game::GetGameObjects(TYPE_VEHICLE);
		        Fahrzeug = -1;
		        for(int i=0; i<l0.GetNumObjects(); i++)
		        {
				GameObject *Obj = l0.GetObject(i);
				if (Obj->HasCommand("f22_tmf") && !Obj->HasCommand("ich_bin_nicht_frei"))
				{
					FahrzeugFrei = false;
					Vehicle v(Obj);
					PersonList pol = v.GetPassengers();
					if (pol.GetNumPersons() >= 1)
					FahrzeugFrei = true;
					if (FahrzeugFrei == true)
					{
						Fahrzeug = i;
						Obj->PushActionExecuteCommand(ACTION_NEWLIST,"RufePersonal", Obj, 2, true);
						char * Wache = "f22";
						char * sndfile = "mod:Audio/FX/alarmierung/alarm_dlk.wav";
					}
				}
			}
			if (Fahrzeug == -1)
			{
				for(int i=0; i<l0.GetNumObjects(); i++)
		    		{
					GameObject *Obj = l0.GetObject(i);
					if (Obj->HasCommand("f33_tmf") && !Obj->HasCommand("ich_bin_nicht_frei"))
					{
						FahrzeugFrei = false;
						Vehicle v(Obj);
						PersonList pol = v.GetPassengers();
						if (pol.GetNumPersons() >= 1)
						FahrzeugFrei = true;
						if (FahrzeugFrei == true)
						{
							Fahrzeug = i;
							Obj->PushActionExecuteCommand(ACTION_NEWLIST,"RufePersonal", Obj, 2, true);
							char * Wache = "f33";
							char * sndfile = "mod:Audio/FX/alarmierung/alarm_dlk.wav";
						}
					}
			  	}
			}
			if (Fahrzeug == -1)
			{
				for(int i=0; i<l0.GetNumObjects(); i++)
    				{
					GameObject *Obj = l0.GetObject(i);
					if (Obj->HasCommand("f23_dlk") && !Obj->HasCommand("ich_bin_nicht_frei"))
					{
						FahrzeugFrei = false;
						Vehicle v(Obj);
						PersonList pol = v.GetPassengers();
						if (pol.GetNumPersons() >= 1)
						FahrzeugFrei = true;
						if (FahrzeugFrei == true)
						{
							Fahrzeug = i;
							Obj->PushActionExecuteCommand(ACTION_NEWLIST,"RufePersonal", Obj, 2, true);
							char * Wache = "f23";
							char * sndfile = "mod:Audio/FX/alarmierung/alarm_dlk.wav";
						}
					}
			  	}
			}
			if (Fahrzeug == -1)
			{
				for(int i=0; i<l0.GetNumObjects(); i++)
		    		{
					GameObject *Obj = l0.GetObject(i);
					if (Obj->HasCommand("f12_tmf") && !Obj->HasCommand("ich_bin_nicht_frei"))
					{
						FahrzeugFrei = false;
						Vehicle v(Obj);
						PersonList pol = v.GetPassengers();
						if (pol.GetNumPersons() >= 1)
						FahrzeugFrei = true;
						if (FahrzeugFrei == true)
						{
							Fahrzeug = i;
							Obj->PushActionExecuteCommand(ACTION_NEWLIST,"RufePersonal", Obj, 2, true);
							char * Wache = "f12";
							char * sndfile = "mod:Audio/FX/alarmierung/alarm_dlk.wav";
						}
					}
			  	}
			}

			if (Fahrzeug < 0)
			{
				Mission::PlayHint("Zur Zeit ist leider kein Hubrettungsfahrzeug verfügbar!");
			  	return;
			}

			Mission::PlayHint("+++ Hubrettungsfahrzeug wird alarmiert +++");
			if (Wache=="f12")
			{
				GameObjectList WachListe = Game::GetGameObjects("gate_f12_tmf");
				for(int i=0; i < WachListe.GetNumObjects(); i++)
				{
					GameObject *WachObjekt = WachListe.GetObject(i);
					Vector AlarmPosition = WachObjekt->GetPosition();
					Audio::PlaySample3D(sndfile, AlarmPosition, false);
				}
		        }
			if (Wache=="f22")
			{
				GameObjectList WachListe = Game::GetGameObjects("gate_f22_hlf1");
				for(int i=0; i < WachListe.GetNumObjects(); i++)
				{
					GameObject *WachObjekt = WachListe.GetObject(i);
					Vector AlarmPosition = WachObjekt->GetPosition();
					Audio::PlaySample3D(sndfile, AlarmPosition, false);
				}
		        }
			if (Wache=="f23")
			{
				GameObjectList WachListe = Game::GetGameObjects("gate_f23_rtwb");
				for(int i=0; i < WachListe.GetNumObjects(); i++)
				{
					GameObject *WachObjekt = WachListe.GetObject(i);
					Vector AlarmPosition = WachObjekt->GetPosition();
					Audio::PlaySample3D(sndfile, AlarmPosition, false);
				}
		        }
			if (Wache=="f33")
			{
				GameObjectList WachListe = Game::GetGameObjects("gate_f33_rtwa");
				for(int i=0; i < WachListe.GetNumObjects(); i++)
				{
					GameObject *WachObjekt = WachListe.GetObject(i);
					Vector AlarmPosition = WachObjekt->GetPosition();
					Audio::PlaySample3D(sndfile, AlarmPosition, false);
				}
		        }
			GameObject *Obj = l0.GetObject(Fahrzeug);
			Obj->AssignCommand("ich_bin_nicht_frei");
			Obj->PushActionExecuteCommand(ACTION_APPEND,"OpenGate",Obj,0,true);
			Obj->PushActionWait(ACTION_APPEND, 3);
			Obj->PushActionLightOn(ACTION_APPEND, true);
			Obj->PushActionWait(ACTION_APPEND, 3);
			Game::FindFreePosition(Obj, Einsatzort, 100);
			Obj->PushActionExecuteCommand(ACTION_APPEND,"VCmdSiren",Obj,0,false);
			Obj->PushActionMove(ACTION_APPEND, Einsatzort);
			Obj->PushActionExecuteCommand(ACTION_APPEND,"CloseGate",Obj,0,true);
			Obj->PushActionExecuteCommand(ACTION_APPEND, "DUMMYDisableSiren", Caller, 2, false);

            makeCallerToOwner(Obj, Caller->GetPlayerMP());
		break;

		case 15:
			int Fahrzeug;
			bool FahrzeugFrei;
			GameObjectList l0 = Game::GetGameObjects(TYPE_VEHICLE);
		        Fahrzeug = -1;
		        for(int i=0; i<l0.GetNumObjects(); i++)
		        {
				GameObject *Obj = l0.GetObject(i);
				if (Obj->HasCommand("f22_rtwa") && !Obj->HasCommand("ich_bin_nicht_frei"))
				{
					FahrzeugFrei = false;
					Vehicle v(Obj);
					PersonList pol = v.GetPassengers();
					if (pol.GetNumPersons() >= 1)
					FahrzeugFrei = true;
					if (FahrzeugFrei == true)
					{
						Fahrzeug = i;
						Obj->PushActionExecuteCommand(ACTION_NEWLIST,"RufePersonal", Obj, 2, true);
                		                char * Wache = "f22";
						char * sndfile = "mod:Audio/FX/alarmierung/alarm_rtwa.wav";
					}
				}
			}
			if (Fahrzeug == -1)
			{
				for(int i=0; i<l0.GetNumObjects(); i++)
    				{
					GameObject *Obj = l0.GetObject(i);
					if (Obj->HasCommand("f22_rtwb") && !Obj->HasCommand("ich_bin_nicht_frei"))
					{
						FahrzeugFrei = false;
						Vehicle v(Obj);
						PersonList pol = v.GetPassengers();
						if (pol.GetNumPersons() >= 1)
						FahrzeugFrei = true;
						if (FahrzeugFrei == true)
						{
							Fahrzeug = i;
							Obj->PushActionExecuteCommand(ACTION_NEWLIST,"RufePersonal", Obj, 2, true);
                                		        char * Wache = "f22";
							char * sndfile = "mod:Audio/FX/alarmierung/alarm_rtwb.wav";
						}
					}
			  	}
			}
			if (Fahrzeug == -1)
			{
				for(int i=0; i<l0.GetNumObjects(); i++)
		    		{
					GameObject *Obj = l0.GetObject(i);
					if (Obj->HasCommand("f22_rtwc") && !Obj->HasCommand("ich_bin_nicht_frei"))
					{
						FahrzeugFrei = false;
						Vehicle v(Obj);
						PersonList pol = v.GetPassengers();
						if (pol.GetNumPersons() >= 1)
						FahrzeugFrei = true;
						if (FahrzeugFrei == true)
						{
							Fahrzeug = i;
							Obj->PushActionExecuteCommand(ACTION_NEWLIST,"RufePersonal", Obj, 2, true);
                                		        char * Wache = "f22";
							char * sndfile = "mod:Audio/FX/alarmierung/alarm_rtwc.wav";
						}
					}
			  	}
			}
			if (Fahrzeug == -1)
			{
				for(int i=0; i<l0.GetNumObjects(); i++)
		    		{
					GameObject *Obj = l0.GetObject(i);
					if (Obj->HasCommand("f33_rtwa") && !Obj->HasCommand("ich_bin_nicht_frei"))
					{
						FahrzeugFrei = false;
						Vehicle v(Obj);
						PersonList pol = v.GetPassengers();
						if (pol.GetNumPersons() >= 1)
						FahrzeugFrei = true;
						if (FahrzeugFrei == true)
						{
							Fahrzeug = i;
							Obj->PushActionExecuteCommand(ACTION_NEWLIST,"RufePersonal", Obj, 2, true);
                                		        char * Wache = "f33";
							char * sndfile = "mod:Audio/FX/alarmierung/alarm_rtwa.wav";
						}
					}
	  			}
			}
			if (Fahrzeug == -1)
			{
				for(int i=0; i<l0.GetNumObjects(); i++)
		    		{
					GameObject *Obj = l0.GetObject(i);
					if (Obj->HasCommand("f33_rtwk") && !Obj->HasCommand("ich_bin_nicht_frei"))
					{
						FahrzeugFrei = false;
						Vehicle v(Obj);
						PersonList pol = v.GetPassengers();
						if (pol.GetNumPersons() >= 1)
						FahrzeugFrei = true;
						if (FahrzeugFrei == true)
						{
							Fahrzeug = i;
							Obj->PushActionExecuteCommand(ACTION_NEWLIST,"RufePersonal", Obj, 2, true);
                                		        char * Wache = "f33";
							char * sndfile = "mod:Audio/FX/alarmierung/alarm_rtwk.wav";
						}
					}
	  			}
			}
			if (Fahrzeug == -1)
			{
				for(int i=0; i<l0.GetNumObjects(); i++)
		    		{
					GameObject *Obj = l0.GetObject(i);
					if (Obj->HasCommand("f23_rtwa") && !Obj->HasCommand("ich_bin_nicht_frei"))
					{
						FahrzeugFrei = false;
						Vehicle v(Obj);
						PersonList pol = v.GetPassengers();
						if (pol.GetNumPersons() >= 1)
						FahrzeugFrei = true;
						if (FahrzeugFrei == true)
						{
							Fahrzeug = i;
							Obj->PushActionExecuteCommand(ACTION_NEWLIST,"RufePersonal", Obj, 2, true);
                		                        char * Wache = "f23";
							char * sndfile = "mod:Audio/FX/alarmierung/alarm_rtwa.wav";
						}
					}
	  			}
			}
			if (Fahrzeug == -1)
			{
				for(int i=0; i<l0.GetNumObjects(); i++)
    				{
					GameObject *Obj = l0.GetObject(i);
					if (Obj->HasCommand("f23_rtwb") && !Obj->HasCommand("ich_bin_nicht_frei"))
					{
						FahrzeugFrei = false;
						Vehicle v(Obj);
						PersonList pol = v.GetPassengers();
						if (pol.GetNumPersons() >= 1)
						FahrzeugFrei = true;
						if (FahrzeugFrei == true)
						{
							Fahrzeug = i;
							Obj->PushActionExecuteCommand(ACTION_NEWLIST,"RufePersonal", Obj, 2, true);
	                	                        char * Wache = "f23";
							char * sndfile = "mod:Audio/FX/alarmierung/alarm_rtwb.wav";
						}
					}
			  	}
			}
			if (Fahrzeug == -1)
			{
				for(int i=0; i<l0.GetNumObjects(); i++)
		    		{
					GameObject *Obj = l0.GetObject(i);
					if (Obj->HasCommand("f23_rtwc") && !Obj->HasCommand("ich_bin_nicht_frei"))
					{
						FahrzeugFrei = false;
						Vehicle v(Obj);
						PersonList pol = v.GetPassengers();
						if (pol.GetNumPersons() >= 1)
						FahrzeugFrei = true;
						if (FahrzeugFrei == true)
						{
							Fahrzeug = i;
							Obj->PushActionExecuteCommand(ACTION_NEWLIST,"RufePersonal", Obj, 2, true);
							char * Wache = "f23";
							char * sndfile = "mod:Audio/FX/alarmierung/alarm_rtwc.wav";
						}
					}
			  	}
			}
			if (Fahrzeug == -1)
			{
				for(int i=0; i<l0.GetNumObjects(); i++)
		    		{
					GameObject *Obj = l0.GetObject(i);
					if (Obj->HasCommand("f12_rtwa") && !Obj->HasCommand("ich_bin_nicht_frei"))
					{
						FahrzeugFrei = false;
						Vehicle v(Obj);
						PersonList pol = v.GetPassengers();
						if (pol.GetNumPersons() >= 1)
						FahrzeugFrei = true;
						if (FahrzeugFrei == true)
						{
							Fahrzeug = i;
							Obj->PushActionExecuteCommand(ACTION_NEWLIST,"RufePersonal", Obj, 2, true);
                		                        char * Wache = "f12";
							char * sndfile = "mod:Audio/FX/alarmierung/alarm_rtwa.wav";
						}
					}
			  	}
			}
			if (Fahrzeug == -1)
			{
				for(int i=0; i<l0.GetNumObjects(); i++)
		    		{
					GameObject *Obj = l0.GetObject(i);
					if (Obj->HasCommand("f12_rtwb") && !Obj->HasCommand("ich_bin_nicht_frei"))
					{
						FahrzeugFrei = false;
						Vehicle v(Obj);
						PersonList pol = v.GetPassengers();
						if (pol.GetNumPersons() >= 1)
						FahrzeugFrei = true;
						if (FahrzeugFrei == true)
						{
							Fahrzeug = i;
							Obj->PushActionExecuteCommand(ACTION_NEWLIST,"RufePersonal", Obj, 2, true);
                		                        char * Wache = "f12";
							char * sndfile = "mod:Audio/FX/alarmierung/alarm_rtwb.wav";
						}
					}
	  			}
			}
			if (Fahrzeug == -1)
			{
				for(int i=0; i<l0.GetNumObjects(); i++)
		    		{
					GameObject *Obj = l0.GetObject(i);
					if (Obj->HasCommand("f12_rtwc") && !Obj->HasCommand("ich_bin_nicht_frei"))
					{
						FahrzeugFrei = false;
						Vehicle v(Obj);
						PersonList pol = v.GetPassengers();
						if (pol.GetNumPersons() >= 1)
						FahrzeugFrei = true;
						if (FahrzeugFrei == true)
						{
							Fahrzeug = i;
							Obj->PushActionExecuteCommand(ACTION_NEWLIST,"RufePersonal", Obj, 2, true);
                		                        char * Wache = "f12";
							char * sndfile = "mod:Audio/FX/alarmierung/alarm_rtwc.wav";
						}
					}
	  			}
			}
			if (Fahrzeug < 0)
			{
			  	Mission::PlayHint("Zur Zeit ist kein RTW verfügbar, es wird ein RTW des ASB alarmiert!");
				Caller->PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 56, false);
				return;
			}

		        Mission::PlayHint("+++ RTW wird alarmiert +++");
			if (Wache=="f12")
			{
				GameObjectList WachListe = Game::GetGameObjects("gate_f12_tmf");
				for(int i=0; i < WachListe.GetNumObjects(); i++)
				{
					GameObject *WachObjekt = WachListe.GetObject(i);
					Vector AlarmPosition = WachObjekt->GetPosition();
					Audio::PlaySample3D(sndfile, AlarmPosition, false);
				}
		         }
			if (Wache=="f22")
			{
				GameObjectList WachListe = Game::GetGameObjects("gate_f22_hlf1");
				for(int i=0; i < WachListe.GetNumObjects(); i++)
				{
					GameObject *WachObjekt = WachListe.GetObject(i);
					Vector AlarmPosition = WachObjekt->GetPosition();
					Audio::PlaySample3D(sndfile, AlarmPosition, false);
				}
		         }
			if (Wache=="f23")
			{
				GameObjectList WachListe = Game::GetGameObjects("gate_f23_rtwb");
				for(int i=0; i < WachListe.GetNumObjects(); i++)
				{
					GameObject *WachObjekt = WachListe.GetObject(i);
					Vector AlarmPosition = WachObjekt->GetPosition();
					Audio::PlaySample3D(sndfile, AlarmPosition, false);
				}
		         }
			if (Wache=="f33")
			{
				GameObjectList WachListe = Game::GetGameObjects("gate_f33_rtwa");
				for(int i=0; i < WachListe.GetNumObjects(); i++)
				{
					GameObject *WachObjekt = WachListe.GetObject(i);
					Vector AlarmPosition = WachObjekt->GetPosition();
					Audio::PlaySample3D(sndfile, AlarmPosition, false);
				}
		         }
			GameObject *Obj = l0.GetObject(Fahrzeug);
			Obj->AssignCommand("ich_bin_nicht_frei");
			Obj->PushActionWait(ACTION_APPEND, 5);
			Obj->PushActionExecuteCommand(ACTION_APPEND,"OpenGate",Obj,0,true);
			Obj->PushActionWait(ACTION_APPEND, 3);
			Obj->PushActionLightOn(ACTION_APPEND, true);
			Obj->PushActionWait(ACTION_APPEND, 3);
			Game::FindFreePosition(Obj, Einsatzort, 50);
			Obj->PushActionExecuteCommand(ACTION_APPEND,"VCmdSiren",Obj,0,false);
			Obj->PushActionMove(ACTION_APPEND, Einsatzort);
			Obj->PushActionExecuteCommand(ACTION_APPEND,"CloseGate",Obj,0,true);
			Obj->PushActionExecuteCommand(ACTION_APPEND, "DUMMYDisableSiren", Caller, 2, false);

            makeCallerToOwner(Obj, Caller->GetPlayerMP());
		break;

		case 18:
			int Fahrzeug;
			bool FahrzeugFrei;
			GameObjectList l0 = Game::GetGameObjects(TYPE_VEHICLE);
		        Fahrzeug = -1;
		        for(int i=0; i<l0.GetNumObjects(); i++)
		        {
				GameObject *Obj = l0.GetObject(i);
				if (Obj->HasCommand("f22_gw") && !Obj->HasCommand("ich_bin_nicht_frei"))
				{
					FahrzeugFrei = false;
					Vehicle v(Obj);
					PersonList pol = v.GetPassengers();
					if (pol.GetNumPersons() >= 1)
					FahrzeugFrei = true;
					if (FahrzeugFrei == true)
					{
						Fahrzeug = i;
						Obj->PushActionExecuteCommand(ACTION_NEWLIST,"RufePersonal", Obj, 2, true);
					}
				}
			}
			if (Fahrzeug < 0)
			{
				Mission::PlayHint("Zurzeit ist kein Gerätewagen verfügbar! Es wird ein HLF angefordert!");
				Caller->PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 13, false);
			  	return;
			}

		        Mission::PlayHint("+++ Gerätewagen 22 wird alarmiert +++");
		        char * sndfile = "mod:Audio/FX/alarmierung/alarm_sonder.wav";
			GameObjectList WachListe = Game::GetGameObjects("gate_f22_hlf1");
		        for(int i=0; i < WachListe.GetNumObjects(); i++)
		        {
				GameObject *WachObjekt = WachListe.GetObject(i);
		  		Vector AlarmPosition = WachObjekt->GetPosition();
		  		Audio::PlaySample3D(sndfile, AlarmPosition, false);
		        }
			GameObject *Obj = l0.GetObject(Fahrzeug);
			Obj->AssignCommand("ich_bin_nicht_frei");
			Obj->PushActionExecuteCommand(ACTION_APPEND,"OpenGate",Obj,0,true);
			Obj->PushActionWait(ACTION_APPEND, 3);
			Obj->PushActionLightOn(ACTION_APPEND, true);
			Obj->PushActionWait(ACTION_APPEND, 3);
			Game::FindFreePosition(Obj, Einsatzort, 100);
			Obj->PushActionExecuteCommand(ACTION_APPEND,"VCmdSiren",Obj,0,false);
			Obj->PushActionMove(ACTION_APPEND, Einsatzort);
			Obj->PushActionExecuteCommand(ACTION_APPEND,"CloseGate",Obj,0,true);
			Obj->PushActionExecuteCommand(ACTION_APPEND, "DUMMYDisableSiren", Caller, 2, false);

            makeCallerToOwner(Obj, Caller->GetPlayerMP());
		break;

		case 19:
			int Fahrzeug;
			bool FahrzeugFrei;
			GameObjectList l0 = Game::GetGameObjects(TYPE_VEHICLE);
			Fahrzeug = -1;
	        	for(int i=0; i<l0.GetNumObjects(); i++)
			{
				GameObject *Obj = l0.GetObject(i);
				if (Obj->HasCommand("f22_adienst") && !Obj->HasCommand("ich_bin_nicht_frei"))
				{
					FahrzeugFrei = false;
					Vehicle v(Obj);
					PersonList pol = v.GetPassengers();
					if (pol.GetNumPersons() >= 1)
					FahrzeugFrei = true;
					if (FahrzeugFrei == true)
					{
						if (Game::IsMultiplayer())
						{
							int PlayerIDTemp = Caller->GetPlayerMP();
							v.SetPlayerMP(PlayerIDTemp);
						}
						Fahrzeug = i;
						Obj->PushActionExecuteCommand(ACTION_NEWLIST,"RufePersonal", Obj, 2, true);
					}
				}
			}

			if (Fahrzeug < 0)
			{
				Mission::PlayHint("Der A-Dienst ist zur Zeit nicht verfügbar!");
			  	return;
			}

			Mission::PlayHint("+++ A-Dienst wird alarmiert +++");

			char * sndfile = "mod:Audio/FX/alarmierung/alarm_sonder.wav";
			GameObjectList WachListe = Game::GetGameObjects("gate_f22_hlf1");
			for(int i=0; i < WachListe.GetNumObjects(); i++)
			{
				GameObject *WachObjekt = WachListe.GetObject(i);
				Vector AlarmPosition = WachObjekt->GetPosition();
				Audio::PlaySample3D(sndfile, AlarmPosition, false);
			}

			GameObject *Obj = l0.GetObject(Fahrzeug);
			if (Game::IsMultiplayer())
			{
				int PlayerIDTemp = Caller->GetPlayerMP();
				Obj->SetPlayerMP(PlayerIDTemp);
			}

			Obj->AssignCommand("ich_bin_nicht_frei");
			Obj->PushActionExecuteCommand(ACTION_APPEND,"OpenGate",Obj,0,true);
			Obj->PushActionWait(ACTION_APPEND, 3);
			Obj->PushActionLightOn(ACTION_APPEND, true);
			Obj->PushActionWait(ACTION_APPEND, 3);
			Game::FindFreePosition(Obj, Einsatzort, 100);
			Obj->PushActionExecuteCommand(ACTION_APPEND,"VCmdSiren",Obj,0,false);
			Obj->PushActionMove(ACTION_APPEND, Einsatzort);
			Obj->PushActionExecuteCommand(ACTION_APPEND,"CloseGate",Obj,0,true);
			Obj->PushActionExecuteCommand(ACTION_APPEND, "DUMMYDisableSiren", Caller, 2, false);

            makeCallerToOwner(Obj, Caller->GetPlayerMP());
		break;

		case 20:
			int Fahrzeug;
			bool FahrzeugFrei;
			GameObjectList l0 = Game::GetGameObjects(TYPE_VEHICLE);
		        Fahrzeug = -1;
		        for(int i=0; i<l0.GetNumObjects(); i++)
		        {
				GameObject *Obj = l0.GetObject(i);
				if (Obj->HasCommand("f22_bfw") && !Obj->HasCommand("ich_bin_nicht_frei"))
				{
					if (Game::IsMultiplayer())
					{
						int PlayerIDTemp = Caller->GetPlayerMP();
						Obj->SetPlayerMP(PlayerIDTemp);
					}
					Fahrzeug = i;
				}
			}

			if (Fahrzeug < 0)
			{
				Mission::PlayHint("Der Befehlswagen ist zur Zeit nicht verfügbar!");
			  	return;
			}

			Mission::PlayHint("+++ Befehlswagen wird alarmiert +++");

			char * sndfile = "mod:Audio/FX/alarmierung/alarm_sonder.wav";
			GameObjectList WachListe = Game::GetGameObjects("gate_f22_hlf1");
			for(int i=0; i < WachListe.GetNumObjects(); i++)
			{
				GameObject *WachObjekt = WachListe.GetObject(i);
				Vector AlarmPosition = WachObjekt->GetPosition();
				Audio::PlaySample3D(sndfile, AlarmPosition, false);
			}

			GameObject *Obj = l0.GetObject(Fahrzeug);
			if (Game::IsMultiplayer())
			{
				int PlayerIDTemp = Caller->GetPlayerMP();
				Obj->SetPlayerMP(PlayerIDTemp);
			}

			Obj->AssignCommand("ich_bin_nicht_frei");
			Obj->PushActionExecuteCommand(ACTION_APPEND,"OpenGate",Obj,0,true);
			Obj->PushActionWait(ACTION_APPEND, 3);
			Obj->PushActionLightOn(ACTION_APPEND, true);
			Obj->PushActionWait(ACTION_APPEND, 3);
			Game::FindFreePosition(Obj, Einsatzort, 100);
			Obj->PushActionExecuteCommand(ACTION_APPEND,"VCmdSiren",Obj,0,false);
			Obj->PushActionMove(ACTION_APPEND, Einsatzort);
			Obj->PushActionExecuteCommand(ACTION_APPEND,"CloseGate",Obj,0,true);
			Obj->PushActionExecuteCommand(ACTION_APPEND, "DUMMYDisableSiren", Caller, 2, false);

            makeCallerToOwner(Obj, Caller->GetPlayerMP());
		break;

		case 21:
			int Fahrzeug;
			bool FahrzeugFrei;
			GameObjectList l0 = Game::GetGameObjects(TYPE_VEHICLE);
		        Fahrzeug = -1;
		        for(int i=0; i<l0.GetNumObjects(); i++)
		        {
				GameObject *Obj = l0.GetObject(i);
				if (Obj->HasCommand("f33_klf") && !Obj->HasCommand("ich_bin_nicht_frei"))
				{
					FahrzeugFrei = false;
					Vehicle v(Obj);
					PersonList pol = v.GetPassengers();
					if (pol.GetNumPersons() >= 1)
					FahrzeugFrei = true;
					if (FahrzeugFrei == true)
					{
						Fahrzeug = i;
						Obj->PushActionExecuteCommand(ACTION_NEWLIST,"RufePersonal", Obj, 2, true);
						char * Wache = "f33";
						char * sndfile = "mod:Audio/FX/alarmierung/alarm_klf.wav";
					}
				}
			}
			if (Fahrzeug == -1)
			{
				for(int i=0; i<l0.GetNumObjects(); i++)
		    		{
					GameObject *Obj = l0.GetObject(i);
					if (Obj->HasCommand("f22_klf") && !Obj->HasCommand("ich_bin_nicht_frei"))
					{
						FahrzeugFrei = false;
						Vehicle v(Obj);
						PersonList pol = v.GetPassengers();
						if (pol.GetNumPersons() >= 1)
						FahrzeugFrei = true;
						if (FahrzeugFrei == true)
						{
							Fahrzeug = i;
							Obj->PushActionExecuteCommand(ACTION_NEWLIST,"RufePersonal", Obj, 2, true);
                		 			char * Wache = "f22";
							char * sndfile = "mod:Audio/FX/alarmierung/alarm_klf.wav";
						}
					}
			  	}
			}
			if (Fahrzeug == -1)
			{
				for(int i=0; i<l0.GetNumObjects(); i++)
		    		{
					GameObject *Obj = l0.GetObject(i);
					if (Obj->HasCommand("f12_klf") && !Obj->HasCommand("ich_bin_nicht_frei"))
					{
						FahrzeugFrei = false;
						Vehicle v(Obj);
						PersonList pol = v.GetPassengers();
						if (pol.GetNumPersons() >= 1)
						FahrzeugFrei = true;
						if (FahrzeugFrei == true)
						{
							Fahrzeug = i;
							Obj->PushActionExecuteCommand(ACTION_NEWLIST,"RufePersonal", Obj, 2, true);
                		 			char * Wache = "f12";
							char * sndfile = "mod:Audio/FX/alarmierung/alarm_klf.wav";
						}
					}
	  			}
			}
			if (Fahrzeug == -1)
			{
				for(int i=0; i<l0.GetNumObjects(); i++)
		    		{
					GameObject *Obj = l0.GetObject(i);
					if (Obj->HasCommand("f23_klf") && !Obj->HasCommand("ich_bin_nicht_frei"))
					{
						FahrzeugFrei = false;
						Vehicle v(Obj);
						PersonList pol = v.GetPassengers();
						if (pol.GetNumPersons() >= 1)
						FahrzeugFrei = true;
						if (FahrzeugFrei == true)
						{
							Fahrzeug = i;
							Obj->PushActionExecuteCommand(ACTION_NEWLIST,"RufePersonal", Obj, 2, true);
		                 			char * Wache = "f23";
							char * sndfile = "mod:Audio/FX/alarmierung/alarm_klf.wav";
						}
					}
			  	}
			}
			if (Fahrzeug < 0)
			{
	  			Mission::PlayHint("Zur Zeit sind alle KLFs im Einsatz! Es wird daher der B-Dienst alarmiert!");
				Caller->PushActionExecuteCommand(ACTION_APPEND, "rufe_bdienst",Caller,7,false);
		  		return;
			}

			Mission::PlayHint("+++ KLF wird alarmiert +++");
			if (Wache=="f12")
			{
				GameObjectList WachListe = Game::GetGameObjects("gate_f12_tmf");
				for(int i=0; i < WachListe.GetNumObjects(); i++)
				{
					GameObject *WachObjekt = WachListe.GetObject(i);
					Vector AlarmPosition = WachObjekt->GetPosition();
					Audio::PlaySample3D(sndfile, AlarmPosition, false);
				}
		        }
			if (Wache=="f22")
			{
				GameObjectList WachListe = Game::GetGameObjects("gate_f22_hlf1");
				for(int i=0; i < WachListe.GetNumObjects(); i++)
				{
					GameObject *WachObjekt = WachListe.GetObject(i);
					Vector AlarmPosition = WachObjekt->GetPosition();
					Audio::PlaySample3D(sndfile, AlarmPosition, false);
				}
		        }
			if (Wache=="f23")
			{
				GameObjectList WachListe = Game::GetGameObjects("gate_f23_rtwb");
				for(int i=0; i < WachListe.GetNumObjects(); i++)
				{
					GameObject *WachObjekt = WachListe.GetObject(i);
					Vector AlarmPosition = WachObjekt->GetPosition();
					Audio::PlaySample3D(sndfile, AlarmPosition, false);
				}
		        }
			if (Wache=="f33")
			{
				GameObjectList WachListe = Game::GetGameObjects("gate_f33_rtwa");
				for(int i=0; i < WachListe.GetNumObjects(); i++)
				{
					GameObject *WachObjekt = WachListe.GetObject(i);
					Vector AlarmPosition = WachObjekt->GetPosition();
					Audio::PlaySample3D(sndfile, AlarmPosition, false);
				}
		        }
			GameObject *Obj = l0.GetObject(Fahrzeug);
			Obj->AssignCommand("ich_bin_nicht_frei");
			Obj->PushActionExecuteCommand(ACTION_APPEND,"OpenGate",Obj,0,true);
			Obj->PushActionWait(ACTION_APPEND, 3);
			Obj->PushActionLightOn(ACTION_APPEND, true);
			Obj->PushActionWait(ACTION_APPEND, 3);
			Game::FindFreePosition(Obj, Einsatzort, 100);
			Obj->PushActionExecuteCommand(ACTION_APPEND,"VCmdSiren",Obj,0,false);
			Obj->PushActionMove(ACTION_APPEND, Einsatzort);
			Obj->PushActionExecuteCommand(ACTION_APPEND,"CloseGate",Obj,0,true);
			Obj->PushActionExecuteCommand(ACTION_APPEND, "DUMMYDisableSiren", Caller, 2, false);

            makeCallerToOwner(Obj, Caller->GetPlayerMP());
		break;

		case 22:
			int Fahrzeug;
			bool FahrzeugFrei;
			GameObjectList l0 = Game::GetGameObjects(TYPE_VEHICLE);
		        Fahrzeug = -1;
		        for(int i=0; i<l0.GetNumObjects(); i++)
		        {
				GameObject *Obj = l0.GetObject(i);
				if (Obj->HasCommand("f33_hlf1") && !Obj->HasCommand("ich_bin_nicht_frei"))
				{
					FahrzeugFrei = false;
					Vehicle v(Obj);
					PersonList pol = v.GetPassengers();
					if (pol.GetNumPersons() >= 1)
					FahrzeugFrei = true;
					if (FahrzeugFrei == true)
					{
						Fahrzeug = i;
						Obj->PushActionExecuteCommand(ACTION_NEWLIST,"RufePersonal", Obj, 6, true);
						char * Wache = "f33";
						char * sndfile = "mod:Audio/FX/alarmierung/alarm_hlf1.wav";
					}
				}
			}
			if (Fahrzeug == -1)
			{
				for(int i=0; i<l0.GetNumObjects(); i++)
		    		{
					GameObject *Obj = l0.GetObject(i);
					if (Obj->HasCommand("f22_hlf1") && !Obj->HasCommand("ich_bin_nicht_frei"))
					{
						FahrzeugFrei = false;
						Vehicle v(Obj);
						PersonList pol = v.GetPassengers();
						if (pol.GetNumPersons() >= 1)
						FahrzeugFrei = true;
						if (FahrzeugFrei == true)
						{
							Fahrzeug = i;
							Obj->PushActionExecuteCommand(ACTION_NEWLIST,"RufePersonal", Obj, 6, true);
							char * Wache = "f22";
							char * sndfile = "mod:Audio/FX/alarmierung/alarm_hlf1.wav";
						}
					}
			  	}
			}
			if (Fahrzeug == -1)
			{
				for(int i=0; i<l0.GetNumObjects(); i++)
		    		{
					GameObject *Obj = l0.GetObject(i);
					if (Obj->HasCommand("f12_hlf2") && !Obj->HasCommand("ich_bin_nicht_frei"))
					{
						FahrzeugFrei = false;
						Vehicle v(Obj);
						PersonList pol = v.GetPassengers();
						if (pol.GetNumPersons() >= 1)
						FahrzeugFrei = true;
						if (FahrzeugFrei == true)
						{
							Fahrzeug = i;
							Obj->PushActionExecuteCommand(ACTION_NEWLIST,"RufePersonal", Obj, 6, true);
							char * Wache = "f12";
							char * sndfile = "mod:Audio/FX/alarmierung/alarm_hlf2.wav";
						}
					}
			  	}
			}
			if (Fahrzeug == -1)
			{
				for(int i=0; i<l0.GetNumObjects(); i++)
		    		{
					GameObject *Obj = l0.GetObject(i);
					if (Obj->HasCommand("f12_hlf1") && !Obj->HasCommand("ich_bin_nicht_frei"))
					{
						FahrzeugFrei = false;
						Vehicle v(Obj);
						PersonList pol = v.GetPassengers();
						if (pol.GetNumPersons() >= 1)
						FahrzeugFrei = true;
						if (FahrzeugFrei == true)
						{
							Fahrzeug = i;
							Obj->PushActionExecuteCommand(ACTION_NEWLIST,"RufePersonal", Obj, 6, true);
		       					char * Wache = "f12";
							char * sndfile = "mod:Audio/FX/alarmierung/alarm_hlf1.wav";
						}
					}
			  	}
			}
			if (Fahrzeug == -1)
			{
				for(int i=0; i<l0.GetNumObjects(); i++)
		    		{
					GameObject *Obj = l0.GetObject(i);
					if (Obj->HasCommand("f23_hlf2") && !Obj->HasCommand("ich_bin_nicht_frei"))
					{
						FahrzeugFrei = false;
						Vehicle v(Obj);
						PersonList pol = v.GetPassengers();
						if (pol.GetNumPersons() >= 1)
						FahrzeugFrei = true;
						if (FahrzeugFrei == true)
						{
							Fahrzeug = i;
							Obj->PushActionExecuteCommand(ACTION_NEWLIST,"RufePersonal", Obj, 6, true);
		       					char * Wache = "f23";
							char * sndfile = "mod:Audio/FX/alarmierung/alarm_hlf2.wav";
						}
					}
			  	}
			}
			if (Fahrzeug == -1)
			{
				for(int i=0; i<l0.GetNumObjects(); i++)
    				{
					GameObject *Obj = l0.GetObject(i);
					if (Obj->HasCommand("f23_hlf1") && !Obj->HasCommand("ich_bin_nicht_frei"))
					{
						FahrzeugFrei = false;
						Vehicle v(Obj);
						PersonList pol = v.GetPassengers();
						if (pol.GetNumPersons() >= 1)
						FahrzeugFrei = true;
						if (FahrzeugFrei == true)
						{
							Fahrzeug = i;
							Obj->PushActionExecuteCommand(ACTION_NEWLIST,"RufePersonal", Obj, 6, true);
		       					char * Wache = "f23";
							char * sndfile = "mod:Audio/FX/alarmierung/alarm_hlf1.wav";
						}
					}
			  	}
			}
			if (Fahrzeug < 0)
			{
				Mission::PlayHint("Derzeit ist kein HLF verfügbar!");
			  	return;
			}

		        Mission::PlayHint("+++ HLF wird alarmiert +++");
			if (Wache=="f12")
			{
				GameObjectList WachListe = Game::GetGameObjects("gate_f12_tmf");
				for(int i=0; i < WachListe.GetNumObjects(); i++)
				{
					GameObject *WachObjekt = WachListe.GetObject(i);
					Vector AlarmPosition = WachObjekt->GetPosition();
					Audio::PlaySample3D(sndfile, AlarmPosition, false);
				}
		        }
			if (Wache=="f22")
			{
				GameObjectList WachListe = Game::GetGameObjects("gate_f22_hlf1");
				for(int i=0; i < WachListe.GetNumObjects(); i++)
				{
					GameObject *WachObjekt = WachListe.GetObject(i);
					Vector AlarmPosition = WachObjekt->GetPosition();
					Audio::PlaySample3D(sndfile, AlarmPosition, false);
				}
		        }
			if (Wache=="f23")
			{
				GameObjectList WachListe = Game::GetGameObjects("gate_f23_rtwb");
				for(int i=0; i < WachListe.GetNumObjects(); i++)
				{
					GameObject *WachObjekt = WachListe.GetObject(i);
					Vector AlarmPosition = WachObjekt->GetPosition();
					Audio::PlaySample3D(sndfile, AlarmPosition, false);
				}
		        }
			if (Wache=="f33")
			{
				GameObjectList WachListe = Game::GetGameObjects("gate_f33_hlf1");
				for(int i=0; i < WachListe.GetNumObjects(); i++)
				{
					GameObject *WachObjekt = WachListe.GetObject(i);
					Vector AlarmPosition = WachObjekt->GetPosition();
					Audio::PlaySample3D(sndfile, AlarmPosition, false);
				}
		        }
			GameObject *Obj = l0.GetObject(Fahrzeug);
			Obj->AssignCommand("ich_bin_nicht_frei");
			Obj->PushActionExecuteCommand(ACTION_APPEND,"OpenGate",Obj,0,true);
			Obj->PushActionWait(ACTION_APPEND, 3);
			Obj->PushActionLightOn(ACTION_APPEND, true);
			Obj->PushActionWait(ACTION_APPEND, 3);
			Game::FindFreePosition(Obj, Einsatzort, 100);
			Obj->PushActionExecuteCommand(ACTION_APPEND,"VCmdSiren",Obj,0,false);
			Obj->PushActionMove(ACTION_APPEND, Einsatzort);
			Obj->PushActionExecuteCommand(ACTION_APPEND,"CloseGate",Obj,0,true);
			Obj->PushActionExecuteCommand(ACTION_APPEND, "DUMMYDisableSiren", Caller, 2, false);

            makeCallerToOwner(Obj, Caller->GetPlayerMP());
		break;


		case 23:
			int Fahrzeug;
			bool FahrzeugFrei;
			GameObjectList l0 = Game::GetGameObjects(TYPE_VEHICLE);
		        Fahrzeug = -1;
		        for(int i=0; i<l0.GetNumObjects(); i++)
		        {
				GameObject *Obj = l0.GetObject(i);
				if (Obj->HasCommand("f33_tmf") && !Obj->HasCommand("ich_bin_nicht_frei"))
				{
					FahrzeugFrei = false;
					Vehicle v(Obj);
					PersonList pol = v.GetPassengers();
					if (pol.GetNumPersons() >= 1)
					FahrzeugFrei = true;
					if (FahrzeugFrei == true)
					{
						Fahrzeug = i;
						Obj->PushActionExecuteCommand(ACTION_NEWLIST,"RufePersonal", Obj, 2, true);
						char * Wache = "f33";
						char * sndfile = "mod:Audio/FX/alarmierung/alarm_dlk.wav";
					}
				}
			}
			if (Fahrzeug == -1)
			{
				for(int i=0; i<l0.GetNumObjects(); i++)
		    		{
					GameObject *Obj = l0.GetObject(i);
					if (Obj->HasCommand("f22_tmf") && !Obj->HasCommand("ich_bin_nicht_frei"))
					{
						FahrzeugFrei = false;
						Vehicle v(Obj);
						PersonList pol = v.GetPassengers();
						if (pol.GetNumPersons() >= 1)
						FahrzeugFrei = true;
						if (FahrzeugFrei == true)
						{
							Fahrzeug = i;
							Obj->PushActionExecuteCommand(ACTION_NEWLIST,"RufePersonal", Obj, 2, true);
							char * Wache = "f22";
							char * sndfile = "mod:Audio/FX/alarmierung/alarm_dlk.wav";
						}
					}
			  	}
			}
			if (Fahrzeug == -1)
			{
				for(int i=0; i<l0.GetNumObjects(); i++)
		    		{
					GameObject *Obj = l0.GetObject(i);
					if (Obj->HasCommand("f12_tmf") && !Obj->HasCommand("ich_bin_nicht_frei"))
					{
						FahrzeugFrei = false;
						Vehicle v(Obj);
						PersonList pol = v.GetPassengers();
						if (pol.GetNumPersons() >= 1)
						FahrzeugFrei = true;
						if (FahrzeugFrei == true)
						{
							Fahrzeug = i;
							Obj->PushActionExecuteCommand(ACTION_NEWLIST,"RufePersonal", Obj, 2, true);
							char * Wache = "f12";
							char * sndfile = "mod:Audio/FX/alarmierung/alarm_dlk.wav";
						}
					}
			  	}
			}
			if (Fahrzeug == -1)
			{
				for(int i=0; i<l0.GetNumObjects(); i++)
		    		{
					GameObject *Obj = l0.GetObject(i);
					if (Obj->HasCommand("f23_dlk") && !Obj->HasCommand("ich_bin_nicht_frei"))
					{
						FahrzeugFrei = false;
						Vehicle v(Obj);
						PersonList pol = v.GetPassengers();
						if (pol.GetNumPersons() >= 1)
						FahrzeugFrei = true;
						if (FahrzeugFrei == true)
						{
							Fahrzeug = i;
							Obj->PushActionExecuteCommand(ACTION_NEWLIST,"RufePersonal", Obj, 2, true);
							char * Wache = "f23";
							char * sndfile = "mod:Audio/FX/alarmierung/alarm_dlk.wav";
						}
					}
			  	}
			}
			if (Fahrzeug < 0)
			{
				Mission::PlayHint("Zur Zeit ist leider kein Hubrettungsfahrzeug verfügbar!");
			  	return;
			}

			Mission::PlayHint("+++ Hubrettungsfahrzeug wird alarmiert +++");
			if (Wache=="f12")
			{
				GameObjectList WachListe = Game::GetGameObjects("gate_f12_tmf");
				for(int i=0; i < WachListe.GetNumObjects(); i++)
				{
					GameObject *WachObjekt = WachListe.GetObject(i);
					Vector AlarmPosition = WachObjekt->GetPosition();
					Audio::PlaySample3D(sndfile, AlarmPosition, false);
				}
			}
			if (Wache=="f22")
			{
				GameObjectList WachListe = Game::GetGameObjects("gate_f22_hlf1");
				for(int i=0; i < WachListe.GetNumObjects(); i++)
				{
					GameObject *WachObjekt = WachListe.GetObject(i);
					Vector AlarmPosition = WachObjekt->GetPosition();
					Audio::PlaySample3D(sndfile, AlarmPosition, false);
				}
		        }
			if (Wache=="f23")
			{
				GameObjectList WachListe = Game::GetGameObjects("gate_f23_rtwb");
				for(int i=0; i < WachListe.GetNumObjects(); i++)
				{
					GameObject *WachObjekt = WachListe.GetObject(i);
					Vector AlarmPosition = WachObjekt->GetPosition();
					Audio::PlaySample3D(sndfile, AlarmPosition, false);
				}
		        }
			if (Wache=="f33")
			{
				GameObjectList WachListe = Game::GetGameObjects("gate_f33_rtwa");
				for(int i=0; i < WachListe.GetNumObjects(); i++)
				{
					GameObject *WachObjekt = WachListe.GetObject(i);
					Vector AlarmPosition = WachObjekt->GetPosition();
					Audio::PlaySample3D(sndfile, AlarmPosition, false);
				}
		        }
			GameObject *Obj = l0.GetObject(Fahrzeug);
			Obj->AssignCommand("ich_bin_nicht_frei");
			Obj->PushActionExecuteCommand(ACTION_APPEND,"OpenGate",Obj,0,true);
			Obj->PushActionWait(ACTION_APPEND, 3);
			Obj->PushActionLightOn(ACTION_APPEND, true);
			Obj->PushActionWait(ACTION_APPEND, 3);
			Game::FindFreePosition(Obj, Einsatzort, 100);
			Obj->PushActionExecuteCommand(ACTION_APPEND,"VCmdSiren",Obj,0,false);
			Obj->PushActionMove(ACTION_APPEND, Einsatzort);
			Obj->PushActionExecuteCommand(ACTION_APPEND,"CloseGate",Obj,0,true);
			Obj->PushActionExecuteCommand(ACTION_APPEND, "DUMMYDisableSiren", Caller, 2, false);

            makeCallerToOwner(Obj, Caller->GetPlayerMP());
		break;


		case 24:
			int Fahrzeug;
			bool FahrzeugFrei;
			GameObjectList l0 = Game::GetGameObjects(TYPE_VEHICLE);
		        Fahrzeug = -1;
		        for(int i=0; i<l0.GetNumObjects(); i++)
		        {
				GameObject *Obj = l0.GetObject(i);
				if (Obj->HasCommand("f33_rtwa") && !Obj->HasCommand("ich_bin_nicht_frei"))
				{
					FahrzeugFrei = false;
					Vehicle v(Obj);
					PersonList pol = v.GetPassengers();
					if (pol.GetNumPersons() >= 1)
					FahrzeugFrei = true;
					if (FahrzeugFrei == true)
					{
						Fahrzeug = i;
						Obj->PushActionExecuteCommand(ACTION_NEWLIST,"RufePersonal", Obj, 2, true);
		                                char * Wache = "f33";
						char * sndfile = "mod:Audio/FX/alarmierung/alarm_rtwa.wav";
					}
				}
			}
			if (Fahrzeug == -1)
			{
				for(int i=0; i<l0.GetNumObjects(); i++)
		    		{
					GameObject *Obj = l0.GetObject(i);
					if (Obj->HasCommand("f33_rtwk") && !Obj->HasCommand("ich_bin_nicht_frei"))
					{
						FahrzeugFrei = false;
						Vehicle v(Obj);
						PersonList pol = v.GetPassengers();
						if (pol.GetNumPersons() >= 1)
						FahrzeugFrei = true;
						if (FahrzeugFrei == true)
						{
							Fahrzeug = i;
							Obj->PushActionExecuteCommand(ACTION_NEWLIST,"RufePersonal", Obj, 2, true);
                		                        char * Wache = "f33";
							char * sndfile = "mod:Audio/FX/alarmierung/alarm_rtwk.wav";
						}
					}
			  	}
			}
			if (Fahrzeug == -1)
			{
				for(int i=0; i<l0.GetNumObjects(); i++)
		    		{
					GameObject *Obj = l0.GetObject(i);
					if (Obj->HasCommand("f22_rtwa") && !Obj->HasCommand("ich_bin_nicht_frei"))
					{
						FahrzeugFrei = false;
						Vehicle v(Obj);
						PersonList pol = v.GetPassengers();
						if (pol.GetNumPersons() >= 1)
						FahrzeugFrei = true;
						if (FahrzeugFrei == true)
						{
							Fahrzeug = i;
							Obj->PushActionExecuteCommand(ACTION_NEWLIST,"RufePersonal", Obj, 2, true);
                		                        char * Wache = "f22";
							char * sndfile = "mod:Audio/FX/alarmierung/alarm_rtwa.wav";
		                                }
					}
			  	}
			}
			if (Fahrzeug == -1)
			{
				for(int i=0; i<l0.GetNumObjects(); i++)
		    		{
					GameObject *Obj = l0.GetObject(i);
					if (Obj->HasCommand("f22_rtwb") && !Obj->HasCommand("ich_bin_nicht_frei"))
					{
						FahrzeugFrei = false;
						Vehicle v(Obj);
						PersonList pol = v.GetPassengers();
						if (pol.GetNumPersons() >= 1)
						FahrzeugFrei = true;
						if (FahrzeugFrei == true)
						{
							Fahrzeug = i;
							Obj->PushActionExecuteCommand(ACTION_NEWLIST,"RufePersonal", Obj, 2, true);
		                                        char * Wache = "f22";
							char * sndfile = "mod:Audio/FX/alarmierung/alarm_rtwb.wav";
						}
					}
			  	}
			}
			if (Fahrzeug == -1)
			{
				for(int i=0; i<l0.GetNumObjects(); i++)
		    		{
					GameObject *Obj = l0.GetObject(i);
					if (Obj->HasCommand("f22_rtwc") && !Obj->HasCommand("ich_bin_nicht_frei"))
					{
						FahrzeugFrei = false;
						Vehicle v(Obj);
						PersonList pol = v.GetPassengers();
						if (pol.GetNumPersons() >= 1)
						FahrzeugFrei = true;
						if (FahrzeugFrei == true)
						{
							Fahrzeug = i;
							Obj->PushActionExecuteCommand(ACTION_NEWLIST,"RufePersonal", Obj, 2, true);
		                                        char * Wache = "f22";
							char * sndfile = "mod:Audio/FX/alarmierung/alarm_rtwc.wav";
						}
					}
			  	}
			}
			if (Fahrzeug == -1)
			{
				for(int i=0; i<l0.GetNumObjects(); i++)
		    		{
					GameObject *Obj = l0.GetObject(i);
					if (Obj->HasCommand("f12_rtwa") && !Obj->HasCommand("ich_bin_nicht_frei"))
					{
						FahrzeugFrei = false;
						Vehicle v(Obj);
						PersonList pol = v.GetPassengers();
						if (pol.GetNumPersons() >= 1)
						FahrzeugFrei = true;
						if (FahrzeugFrei == true)
						{
							Fahrzeug = i;
							Obj->PushActionExecuteCommand(ACTION_NEWLIST,"RufePersonal", Obj, 2, true);
                		                        char * Wache = "f12";
							char * sndfile = "mod:Audio/FX/alarmierung/alarm_rtwa.wav";
						}
					}
			  	}
			}
			if (Fahrzeug == -1)
			{
				for(int i=0; i<l0.GetNumObjects(); i++)
		    		{
					GameObject *Obj = l0.GetObject(i);
					if (Obj->HasCommand("f12_rtwb") && !Obj->HasCommand("ich_bin_nicht_frei"))
					{
						FahrzeugFrei = false;
						Vehicle v(Obj);
						PersonList pol = v.GetPassengers();
						if (pol.GetNumPersons() >= 1)
						FahrzeugFrei = true;
						if (FahrzeugFrei == true)
						{
							Fahrzeug = i;
							Obj->PushActionExecuteCommand(ACTION_NEWLIST,"RufePersonal", Obj, 2, true);
		                                        char * Wache = "f12";
							char * sndfile = "mod:Audio/FX/alarmierung/alarm_rtwb.wav";
						}
					}
	  			}
			}
			if (Fahrzeug == -1)
			{
				for(int i=0; i<l0.GetNumObjects(); i++)
		    		{
					GameObject *Obj = l0.GetObject(i);
					if (Obj->HasCommand("f12_rtwc") && !Obj->HasCommand("ich_bin_nicht_frei"))
					{
						FahrzeugFrei = false;
						Vehicle v(Obj);
						PersonList pol = v.GetPassengers();
						if (pol.GetNumPersons() >= 1)
						FahrzeugFrei = true;
						if (FahrzeugFrei == true)
						{
							Fahrzeug = i;
							Obj->PushActionExecuteCommand(ACTION_NEWLIST,"RufePersonal", Obj, 2, true);
                		                        char * Wache = "f12";
							char * sndfile = "mod:Audio/FX/alarmierung/alarm_rtwc.wav";
						}
					}
	  			}
			}
			if (Fahrzeug == -1)
			{
				for(int i=0; i<l0.GetNumObjects(); i++)
		    		{
					GameObject *Obj = l0.GetObject(i);
					if (Obj->HasCommand("f23_rtwa") && !Obj->HasCommand("ich_bin_nicht_frei"))
					{
						FahrzeugFrei = false;
						Vehicle v(Obj);
						PersonList pol = v.GetPassengers();
						if (pol.GetNumPersons() >= 1)
						FahrzeugFrei = true;
						if (FahrzeugFrei == true)
						{
							Fahrzeug = i;
							Obj->PushActionExecuteCommand(ACTION_NEWLIST,"RufePersonal", Obj, 2, true);
                		                        char * Wache = "f23";
							char * sndfile = "mod:Audio/FX/alarmierung/alarm_rtwa.wav";
						}
					}
			  	}
			}
			if (Fahrzeug == -1)
			{
				for(int i=0; i<l0.GetNumObjects(); i++)
    				{
					GameObject *Obj = l0.GetObject(i);
					if (Obj->HasCommand("f23_rtwb") && !Obj->HasCommand("ich_bin_nicht_frei"))
					{
						FahrzeugFrei = false;
						Vehicle v(Obj);
						PersonList pol = v.GetPassengers();
						if (pol.GetNumPersons() >= 1)
						FahrzeugFrei = true;
						if (FahrzeugFrei == true)
						{
							Fahrzeug = i;
							Obj->PushActionExecuteCommand(ACTION_NEWLIST,"RufePersonal", Obj, 2, true);
                		                        char * Wache = "f23";
							char * sndfile = "mod:Audio/FX/alarmierung/alarm_rtwb.wav";
						}
					}
			  	}
			}
			if (Fahrzeug == -1)
			{
				for(int i=0; i<l0.GetNumObjects(); i++)
		    		{
					GameObject *Obj = l0.GetObject(i);
					if (Obj->HasCommand("f23_rtwc") && !Obj->HasCommand("ich_bin_nicht_frei"))
					{
						FahrzeugFrei = false;
						Vehicle v(Obj);
						PersonList pol = v.GetPassengers();
						if (pol.GetNumPersons() >= 1)
						FahrzeugFrei = true;
						if (FahrzeugFrei == true)
						{
							Fahrzeug = i;
							Obj->PushActionExecuteCommand(ACTION_NEWLIST,"RufePersonal", Obj, 2, true);
							char * Wache = "f23";
							char * sndfile = "mod:Audio/FX/alarmierung/alarm_rtwc.wav";
						}
					}
			  	}
			}
			if (Fahrzeug < 0)
			{
			  	Mission::PlayHint("Zur Zeit ist kein RTW verfügbar, es wird ein ASB RTW alarmiert!");
				Caller->PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 56, false);
				return;
			}

		        Mission::PlayHint("+++ RTW wird alarmiert +++");
			if (Wache=="f12")
			{
				GameObjectList WachListe = Game::GetGameObjects("gate_f12_tmf");
				for(int i=0; i < WachListe.GetNumObjects(); i++)
				{
					GameObject *WachObjekt = WachListe.GetObject(i);
					Vector AlarmPosition = WachObjekt->GetPosition();
					Audio::PlaySample3D(sndfile, AlarmPosition, false);
				}
		        }
			if (Wache=="f22")
			{
				GameObjectList WachListe = Game::GetGameObjects("gate_f22_hlf1");
				for(int i=0; i < WachListe.GetNumObjects(); i++)
				{
					GameObject *WachObjekt = WachListe.GetObject(i);
					Vector AlarmPosition = WachObjekt->GetPosition();
					Audio::PlaySample3D(sndfile, AlarmPosition, false);
				}
		        }
			if (Wache=="f23")
			{
				GameObjectList WachListe = Game::GetGameObjects("gate_f23_rtwb");
				for(int i=0; i < WachListe.GetNumObjects(); i++)
				{
					GameObject *WachObjekt = WachListe.GetObject(i);
					Vector AlarmPosition = WachObjekt->GetPosition();
					Audio::PlaySample3D(sndfile, AlarmPosition, false);
				}
		        }
			if (Wache=="f33")
			{
				GameObjectList WachListe = Game::GetGameObjects("gate_f33_rtwa");
				for(int i=0; i < WachListe.GetNumObjects(); i++)
				{
					GameObject *WachObjekt = WachListe.GetObject(i);
					Vector AlarmPosition = WachObjekt->GetPosition();
					Audio::PlaySample3D(sndfile, AlarmPosition, false);
				}
		        }
			GameObject *Obj = l0.GetObject(Fahrzeug);
			Obj->AssignCommand("ich_bin_nicht_frei");
			Obj->PushActionWait(ACTION_APPEND, 5);
			Obj->PushActionExecuteCommand(ACTION_APPEND,"OpenGate",Obj,0,true);
			Obj->PushActionWait(ACTION_APPEND, 3);
			Obj->PushActionLightOn(ACTION_APPEND, true);
			Obj->PushActionWait(ACTION_APPEND, 3);
			Game::FindFreePosition(Obj, Einsatzort, 100);
			Obj->PushActionExecuteCommand(ACTION_APPEND,"VCmdSiren",Obj,0,false);
			Obj->PushActionMove(ACTION_APPEND, Einsatzort);
			Obj->PushActionExecuteCommand(ACTION_APPEND,"CloseGate",Obj,0,true);
			Obj->PushActionExecuteCommand(ACTION_APPEND, "DUMMYDisableSiren", Caller, 2, false);

            makeCallerToOwner(Obj, Caller->GetPlayerMP());
		break;


		case 26:
			int Fahrzeug;
			bool FahrzeugFrei;
			GameObjectList l0 = Game::GetGameObjects(TYPE_VEHICLE);
		        Fahrzeug = -1;
		        for(int i=0; i<l0.GetNumObjects(); i++)
		        {
				GameObject *Obj = l0.GetObject(i);
				if (Obj->HasCommand("f33_gwrd") && !Obj->HasCommand("ich_bin_nicht_frei"))
				{
					FahrzeugFrei = false;
					Vehicle v(Obj);
					PersonList pol = v.GetPassengers();
					if (pol.GetNumPersons() >= 1)
					FahrzeugFrei = true;
					if (FahrzeugFrei == true)
					{
						Fahrzeug = i;
						Obj->PushActionExecuteCommand(ACTION_NEWLIST,"RufePersonal", Obj, 2, true);
					}
				}
			}
			if (Fahrzeug < 0)
			{
				Mission::PlayHint("Der GW-Rettungsdienst ist zurzeit nicht verfügbar!");
			  	return;
			}

			Mission::PlayHint("+++ 33 Gerätewagen RD wird alarmiert +++");
			char * sndfile = "mod:Audio/FX/alarmierung/alarm_sonder.wav";
			GameObjectList WachListe = Game::GetGameObjects("gate_f33_rtwa");
			for(int i=0; i < WachListe.GetNumObjects(); i++)
			{
				GameObject *WachObjekt = WachListe.GetObject(i);
				Vector AlarmPosition = WachObjekt->GetPosition();
				Audio::PlaySample3D(sndfile, AlarmPosition, false);
			}
			GameObject *Obj = l0.GetObject(Fahrzeug);
			Obj->AssignCommand("ich_bin_nicht_frei");
			Obj->PushActionExecuteCommand(ACTION_APPEND,"OpenGate",Obj,0,true);
			Obj->PushActionWait(ACTION_APPEND, 3);
			Obj->PushActionLightOn(ACTION_APPEND, true);
			Obj->PushActionWait(ACTION_APPEND, 3);
			Game::FindFreePosition(Obj, Einsatzort, 100);
			Obj->PushActionExecuteCommand(ACTION_APPEND,"VCmdSiren",Obj,0,false);
			Obj->PushActionMove(ACTION_APPEND, Einsatzort);
			Obj->PushActionExecuteCommand(ACTION_APPEND,"CloseGate",Obj,0,true);
			Obj->PushActionExecuteCommand(ACTION_APPEND, "DUMMYDisableSiren", Caller, 2, false);

            makeCallerToOwner(Obj, Caller->GetPlayerMP());
		break;


		case 27:

			// PRÜFEN, OB FF AUSSER DIENST
			int h,m,s;
			int loeschzug = 0;
			Game::GetTime(h,m,s);
			if ((h==06) || (h==07) || (h==08) || (h==09) || (h==10))
			{
				Mission::PlayHint("Die FF Rothenburgsort/Veddel ist derzeit ausser Dienst! Es wird ein HLF angefordert.");
				Einsatzort=Game::GetCommandPos();
				Vehicle p = Game::CreateVehicle("mod:Prototypes/Vehicles/geraete/pylone.e4p", "EinsatzortDummy");
				p.Hide();
				Game::FindFreePosition(&p,Einsatzort);
				p.SetPosition(Einsatzort);
				p.PushActionWait(ACTION_NEWLIST, 3);
				if (Game::IsMultiplayer())
					p.SetPlayerMP(Caller->GetPlayerMP());

				if(Game::IsInTrigger("einsatzgebiet_nord_west", Einsatzort))
				{
					p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 22, false);
				}
				else
				if(Game::IsInTrigger("einsatzgebiet_nord_ost", Einsatzort))
				{
					p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 2, false);
				}
				else
				if(Game::IsInTrigger("einsatzgebiet_mitte", Einsatzort))
				{
					p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 13, false);
				}
				else
				if(Game::IsInTrigger("einsatzgebiet_sued", Einsatzort))
				{
					p.PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 60, false);
				}
			} else
			// ENDE DER PRÜFUNG

			{
				GameObjectList l0 = Game::GetGameObjects(TYPE_VEHICLE);
				GameObjectList FFWacheListe = Game::GetGameObjects("f3917_entry");
				GameObject *FFWache = FFWacheListe.GetObject(0);

				Mission::PlayHint("+++ FF Rothenburgsort/Veddel wird alarmiert +++");

				if (!FFWache->HasCommand("ich_bin_kein_fz"))
				{
					Audio::PlaySample("mod:Audio/FX/alarmierung/dme.wav");
					FFWache->AssignCommand("ich_bin_kein_fz");
					FFWache->PushActionExecuteCommand(ACTION_NEWLIST, "AlarmFF", FFWache, 0, false);
				}

				for(int i=0; i<l0.GetNumObjects(); i++)
				{
					GameObject *Obj = l0.GetObject(i);
				        bool kriterien_erfuellt = false;
			        	if (Obj->HasCommand("ich_bin_ff") && !Obj->HasCommand("ich_bin_nicht_frei"))
				        {
						Vehicle v(Obj);
						PersonList fw = v.GetPassengers();
						if (fw.GetNumPersons() > 0)
						{
							kriterien_erfuellt = true;
						}
				        }

				        if (kriterien_erfuellt == true)
				        {
						Vehicle v(Obj);
						loeschzug++;
						Obj->AssignCommand("ich_bin_nicht_frei");

						if (v.GetBlinkerStatus() == BLT_BOTH)
						{
							v.EnableBlinker(BLT_NONE);
						}
						if (v.IsSpecialLightEnabled())
						{
							v.EnableSpecialLights(false);
							v.PlayAnimCloseDoor(DAT_SPECIAL, 3.0f);
						}

						if (v.HasCommand("DUMMYHasTriblitz"))
						{
							int UnitID = v.GetID();
							GameObjectList liste = Game::GetGameObjects("Triblitz");
							for(int i = 0; i < liste.GetNumObjects(); i++)
							{
								GameObject *obj = liste.GetObject(i);
								if (obj->GetUserData() == UnitID)
								{
									obj->PushActionDeleteOwner(ACTION_NEWLIST);
								}
							}

							GameObjectList liste2 = Game::GetGameObjects("DummyTriblitz");
							for(int i = 0; i < liste2.GetNumObjects(); i++)
							{
								GameObject *obj = liste2.GetObject(i);
								if (obj->GetUserData() == UnitID)
								{
									obj->PushActionDeleteOwner(ACTION_NEWLIST);
								}
							}
							v.EnableTrafficLight(TLT_NONE);
							v.RemoveCommand("DUMMYHasTriblitz");
						}

						Obj->PushActionWait(ACTION_NEWLIST,4);

				     		// 1. HLF1
				     		if(Obj->HasCommand("f3917_hlf1"))

		     				{
		     					Obj->PushActionWait(ACTION_APPEND,9);
			     			}

				     		// 2. HLF2
		     				if(Obj->HasCommand("f3917_hlf2"))
		     				{
				     			Obj->PushActionWait(ACTION_APPEND,12);
				     		}

						Obj->PushActionExecuteCommand(ACTION_APPEND,"OpenGate",Obj,0,true);
						Obj->PushActionWait(ACTION_APPEND, 3);
						Obj->PushActionLightOn(ACTION_APPEND, true);
						Obj->SetCommandable(true);
						Obj->PushActionWait(ACTION_APPEND, 3);
						Game::FindFreePosition(Obj, Einsatzort, 100);
						Obj->PushActionExecuteCommand(ACTION_APPEND,"VCmdSiren",Obj,0,false);
						Obj->PushActionMove(ACTION_APPEND, Einsatzort);
						Obj->PushActionExecuteCommand(ACTION_APPEND,"CloseGate",Obj,0,true);
						Obj->PushActionExecuteCommand(ACTION_APPEND, "DUMMYDisableSiren", Caller, 2, false);
					}
				}
			}
			if (loeschzug < 1)
			{
				return;
			}
		break;


		case 29:
			int Fahrzeug;
			bool FahrzeugFrei;
			GameObjectList l0 = Game::GetGameObjects(TYPE_VEHICLE);
		        Fahrzeug = -1;
		        for(int i=0; i<l0.GetNumObjects(); i++)
		        {
				GameObject *Obj = l0.GetObject(i);
				if (Obj->HasCommand("f25_segt") && !Obj->HasCommand("ich_bin_nicht_frei"))
				{
					FahrzeugFrei = false;
					Vehicle v(Obj);
					PersonList pol = v.GetPassengers();
					if (pol.GetNumPersons() >= 1)
					FahrzeugFrei = true;
					if (FahrzeugFrei == true)
					{
						Fahrzeug = i;
						v.Show();
					}
				}
			}
			if (Fahrzeug < 0)
			{
				Mission::PlayHint("Die SEG-Tauchen ist nicht verfügbar!");
			  	return;
			}

		         Mission::PlayHint("+++ 25 / SEG Tauchen wird alarmiert +++");
		         Audio::PlaySample("mod:Audio/FX/alarmierung/alarm_sonder.wav");
			GameObject *Obj = l0.GetObject(Fahrzeug);
			Obj->AssignCommand("ich_bin_nicht_frei");
			Obj->PushActionWait(ACTION_APPEND, 3);
			Obj->PushActionLightOn(ACTION_APPEND, true);
			Obj->PushActionWait(ACTION_APPEND, 3);
			Game::FindFreePosition(Obj, Einsatzort, 50);
			Obj->PushActionExecuteCommand(ACTION_APPEND,"VCmdSiren",Obj,0,false);
			Obj->PushActionMove(ACTION_APPEND, Einsatzort);
			Obj->PushActionExecuteCommand(ACTION_APPEND, "DUMMYDisableSiren", Caller, 2, false);

            makeCallerToOwner(Obj, Caller->GetPlayerMP());
		break;

		case 30:
			int Fahrzeug;
			bool FahrzeugFrei;
			GameObjectList l0 = Game::GetGameObjects(TYPE_VEHICLE);
		        Fahrzeug = -1;
		        for(int i=0; i<l0.GetNumObjects(); i++)
		        {
				GameObject *Obj = l0.GetObject(i);
				if (Obj->HasCommand("f32_udienst") && !Obj->HasCommand("ich_bin_nicht_frei"))
				{
					FahrzeugFrei = false;
					Vehicle v(Obj);
					PersonList pol = v.GetPassengers();
					if (pol.GetNumPersons() >= 1)
					FahrzeugFrei = true;
					if (FahrzeugFrei == true)
					{
						Fahrzeug = i;
						v.Show();
					}
				}
			}

			if (Fahrzeug < 0)
			{
				Mission::PlayHint("Der U-Dienst ist derzeit nicht verfügbar!");
	  			return;
			}

			Mission::PlayHint("+++ U-Dienst wird alarmiert +++");
			Audio::PlaySample("mod:Audio/FX/alarmierung/alarm_sonder.wav");

			GameObject *Obj = l0.GetObject(Fahrzeug);
			Obj->AssignCommand("ich_bin_nicht_frei");
			Obj->PushActionWait(ACTION_NEWLIST, 3);
			Obj->PushActionLightOn(ACTION_APPEND, true);
			Obj->PushActionWait(ACTION_APPEND, 3);
			Game::FindFreePosition(Obj, Einsatzort, 100);
			Obj->PushActionExecuteCommand(ACTION_APPEND,"VCmdSiren",Obj,0,false);
			Obj->PushActionMove(ACTION_APPEND, Einsatzort);
			Obj->PushActionExecuteCommand(ACTION_APPEND, "DUMMYDisableSiren", Caller, 2, false);

            makeCallerToOwner(Obj, Caller->GetPlayerMP());
		break;


		case 31:
			int Fahrzeug;
			bool FahrzeugFrei;
			GameObjectList l0 = Game::GetGameObjects(TYPE_VEHICLE);
		        Fahrzeug = -1;
		        for(int i=0; i<l0.GetNumObjects(); i++)
		        {
				GameObject *Obj = l0.GetObject(i);
				if (Obj->HasCommand("f32_kmrd") && !Obj->HasCommand("ich_bin_nicht_frei"))
				{
					FahrzeugFrei = false;
					Vehicle v(Obj);
					PersonList pol = v.GetPassengers();
					if (pol.GetNumPersons() >= 1)
					FahrzeugFrei = true;
					if (FahrzeugFrei == true)
					{
						Fahrzeug = i;
						v.Show();
					}
				}
			}
			if (Fahrzeug < 0)
			{
				Mission::PlayHint("Der Kampfmittelräumdienst ist nicht verfügbar!");
			  	return;
			}

			Mission::PlayHint("+++ Kampfmittelräumdienst wird alarmiert +++");
		        Audio::PlaySample("mod:Audio/FX/alarmierung/alarm_sonder.wav");
			GameObject *Obj = l0.GetObject(Fahrzeug);
			Obj->AssignCommand("ich_bin_nicht_frei");
			Obj->PushActionWait(ACTION_NEWLIST, 3);
			Obj->PushActionLightOn(ACTION_APPEND, true);
			Obj->PushActionWait(ACTION_APPEND, 3);
			Game::FindFreePosition(Obj, Einsatzort, 100);
			Obj->PushActionExecuteCommand(ACTION_APPEND,"VCmdSiren",Obj,0,false);
			Obj->PushActionMove(ACTION_APPEND, Einsatzort);
			Obj->PushActionExecuteCommand(ACTION_APPEND, "DUMMYDisableSiren", Caller, 2, false);

            makeCallerToOwner(Obj, Caller->GetPlayerMP());
		break;


		case 32:
			GameObjectList l0 = Game::GetGameObjects(TYPE_VEHICLE);
			int Fahrzeug;
			bool FahrzeugFrei;
		        Fahrzeug = -1;
		        for(int i=0; i<l0.GetNumObjects(); i++)
		        {
				GameObject *Obj = l0.GetObject(i);
				if (Obj->HasCommand("f32_wlf_dekon") && !Obj->HasCommand("ich_bin_nicht_frei"))
				{
					FahrzeugFrei = false;
					Vehicle v(Obj);
					PersonList pol = v.GetPassengers();
					if (pol.GetNumPersons() >= 1)
					FahrzeugFrei = true;
					if (FahrzeugFrei == true)
					{
						Fahrzeug = i;
						v.Show();
					}
				}
			}
			if (Fahrzeug < 0)
			{
				Mission::PlayHint("Das WLF-32 AB-Dekon ist nicht verfügbar!");
			  	return;
			}

			Mission::PlayHint("+++ AB-Dekontamination wird alarmiert +++");
		        Audio::PlaySample("mod:Audio/FX/alarmierung/alarm_sonder.wav");
			GameObject *Obj = l0.GetObject(Fahrzeug);
			Obj->AssignCommand("ich_bin_nicht_frei");
			Obj->PushActionExecuteCommand(ACTION_NEWLIST,"OpenGate",Obj,0,true);
			Obj->PushActionWait(ACTION_APPEND, 3);
			Obj->PushActionLightOn(ACTION_APPEND, true);
			Obj->PushActionWait(ACTION_APPEND, 3);
			Game::FindFreePosition(Obj, Einsatzort, 100);
			Obj->PushActionExecuteCommand(ACTION_APPEND,"VCmdSiren",Obj,0,false);
			Obj->PushActionMove(ACTION_APPEND, Einsatzort);
			Obj->PushActionExecuteCommand(ACTION_APPEND,"CloseGate",Obj,0,true);
			Obj->PushActionExecuteCommand(ACTION_APPEND, "DUMMYDisableSiren", Caller, 2, false);

            makeCallerToOwner(Obj, Caller->GetPlayerMP());
		break;


		case 33:
			int Fahrzeug;
			bool FahrzeugFrei;
			GameObjectList l0 = Game::GetGameObjects(TYPE_VEHICLE);
		        Fahrzeug = -1;
		        for(int i=0; i<l0.GetNumObjects(); i++)
		        {
				GameObject *Obj = l0.GetObject(i);
				if (Obj->HasCommand("f32_kran") && !Obj->HasCommand("ich_bin_nicht_frei"))
				{
					FahrzeugFrei = false;
					Vehicle v(Obj);
					FahrzeugFrei = true;
					if (FahrzeugFrei == true)
					{
						Fahrzeug = i;
						v.Show();
					}
				}
			}
			if (Fahrzeug < 0)
			{
				Mission::PlayHint("Der Kran ist momentan nicht verfügbar!");
			  	return;
			}

		        Mission::PlayHint("+++ 32-KRAN wird alarmiert +++");
		        Audio::PlaySample("mod:Audio/FX/alarmierung/alarm_sonder.wav");
			GameObject *Obj = l0.GetObject(Fahrzeug);
			Obj->AssignCommand("ich_bin_nicht_frei");
			Obj->PushActionWait(ACTION_NEWLIST, 3);
			Obj->PushActionLightOn(ACTION_APPEND, true);
			Obj->PushActionWait(ACTION_APPEND, 3);
			Game::FindFreePosition(Obj, Einsatzort, 100);
			Obj->PushActionExecuteCommand(ACTION_APPEND,"VCmdSiren",Obj,0,false);
			Obj->PushActionMove(ACTION_APPEND, Einsatzort);
			Obj->PushActionExecuteCommand(ACTION_APPEND, "DUMMYDisableSiren", Caller, 2, false);

            makeCallerToOwner(Obj, Caller->GetPlayerMP());
		break;


		case 34:
			int Fahrzeug;
			bool FahrzeugFrei;
			GameObjectList l0 = Game::GetGameObjects(TYPE_VEHICLE);
		        Fahrzeug = -1;
		        for(int i=0; i<l0.GetNumObjects(); i++)
		        {
				GameObject *Obj = l0.GetObject(i);
				if (Obj->HasCommand("f22_nef") && !Obj->HasCommand("ich_bin_nicht_frei"))
				{
					FahrzeugFrei = false;
					Vehicle v(Obj);
					PersonList pol = v.GetPassengers();
					if (pol.GetNumPersons() >= 1)
					FahrzeugFrei = true;
					if (FahrzeugFrei == true)
					{
						Fahrzeug = i;
					}
				}
			}
			if (Fahrzeug == -1)
			{
				for(int i=0; i<l0.GetNumObjects(); i++)
		    		{
					GameObject *Obj = l0.GetObject(i);
					if (Obj->HasCommand("f14_nef") && !Obj->HasCommand("ich_bin_nicht_frei"))
					{
						FahrzeugFrei = false;
						Vehicle v(Obj);
						PersonList pol = v.GetPassengers();
						if (pol.GetNumPersons() >= 1)
						FahrzeugFrei = true;
						if (FahrzeugFrei == true)
						{
							Fahrzeug = i;
							v.Show();
						}
					}
			  	}
			}
			if (Fahrzeug == -1)
			{
				for(int i=0; i<l0.GetNumObjects(); i++)
		    		{
					GameObject *Obj = l0.GetObject(i);
					if (Obj->HasCommand("bwk_nef") && !Obj->HasCommand("ich_bin_nicht_frei"))
					{
						FahrzeugFrei = false;
						Vehicle v(Obj);
						PersonList pol = v.GetPassengers();
						if (pol.GetNumPersons() >= 1)
						FahrzeugFrei = true;
						if (FahrzeugFrei == true)
						{
							Fahrzeug = i;
							v.Show();
						}
					}
	  			}
			}
			if (Fahrzeug < 0)
			{
			  	Mission::PlayHint("Zur Zeit ist kein freies NEF verfügbar! Es wird daher der Rettungshubschrauber Christoph 29 alarmiert.");
				Caller->PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 66, false);
				return;
			}

		        Mission::PlayHint("+++ NEF wird alarmiert +++");
		        Audio::PlaySample("mod:Audio/FX/alarmierung/alarm_nef.wav");
			GameObject *Obj = l0.GetObject(Fahrzeug);
			Obj->AssignCommand("ich_bin_nicht_frei");
			Obj->PushActionExecuteCommand(ACTION_NEWLIST,"OpenGate",Obj,0,true);
			Obj->PushActionWait(ACTION_APPEND, 3);
			Obj->PushActionLightOn(ACTION_APPEND, true);
			Obj->PushActionWait(ACTION_APPEND, 3);
			Game::FindFreePosition(Obj, Einsatzort, 100);
			Obj->PushActionExecuteCommand(ACTION_APPEND,"VCmdSiren",Obj,0,false);
			Obj->PushActionMove(ACTION_APPEND, Einsatzort, false);
			Obj->PushActionExecuteCommand(ACTION_APPEND,"CloseGate",Obj,0,true);
			Obj->PushActionExecuteCommand(ACTION_APPEND, "DUMMYDisableSiren", Caller, 2, false);

            makeCallerToOwner(Obj, Caller->GetPlayerMP());
		break;


		case 35:
			int Fahrzeug;
			bool FahrzeugFrei;
			GameObjectList l0 = Game::GetGameObjects(TYPE_VEHICLE);
		        Fahrzeug = -1;
		        for(int i=0; i<l0.GetNumObjects(); i++)
		        {
				GameObject *Obj = l0.GetObject(i);
				if (Obj->HasCommand("f22_nef") && !Obj->HasCommand("ich_bin_nicht_frei"))
				{
					FahrzeugFrei = false;
					Vehicle v(Obj);
					PersonList pol = v.GetPassengers();
					if (pol.GetNumPersons() >= 1)
					FahrzeugFrei = true;
					if (FahrzeugFrei == true)
					{
						Fahrzeug = i;
					}
				}
			}
			if (Fahrzeug == -1)
			{
				for(int i=0; i<l0.GetNumObjects(); i++)
		    		{
					GameObject *Obj = l0.GetObject(i);
					if (Obj->HasCommand("f14_nef") && !Obj->HasCommand("ich_bin_nicht_frei"))
					{
						FahrzeugFrei = false;
						Vehicle v(Obj);
						PersonList pol = v.GetPassengers();
						if (pol.GetNumPersons() >= 1)
						FahrzeugFrei = true;
						if (FahrzeugFrei == true)
						{
							Fahrzeug = i;
							v.Show();
						}
					}
			  	}
			}
			if (Fahrzeug == -1)
			{
				for(int i=0; i<l0.GetNumObjects(); i++)
		    		{
					GameObject *Obj = l0.GetObject(i);
					if (Obj->HasCommand("bwk_nef") && !Obj->HasCommand("ich_bin_nicht_frei"))
					{
						FahrzeugFrei = false;
						Vehicle v(Obj);
						PersonList pol = v.GetPassengers();
						if (pol.GetNumPersons() >= 1)
						FahrzeugFrei = true;
						if (FahrzeugFrei == true)
						{
							Fahrzeug = i;
							v.Show();
						}
					}
	  			}
			}
			if (Fahrzeug < 0)
			{
			  	Mission::PlayHint("Zur Zeit ist kein freies NEF verfügbar! Es wird der Rettungshubschrauber Christoph 29 alarmiert.");
				Caller->PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 66, false);
				return;
			}

		        Mission::PlayHint("+++ NEF wird alarmiert +++");
		        Audio::PlaySample("mod:Audio/FX/alarmierung/alarm_nef.wav");
			GameObject *Obj = l0.GetObject(Fahrzeug);
			Obj->AssignCommand("ich_bin_nicht_frei");
			Obj->PushActionExecuteCommand(ACTION_NEWLIST,"OpenGate",Obj,0,true);
			Obj->PushActionWait(ACTION_APPEND, 3);
			Obj->PushActionLightOn(ACTION_APPEND, true);
			Obj->PushActionWait(ACTION_APPEND, 3);
			Game::FindFreePosition(Obj, Einsatzort, 100);
			Obj->PushActionExecuteCommand(ACTION_APPEND,"VCmdSiren",Obj,0,false);
			Obj->PushActionMove(ACTION_APPEND, Einsatzort, false);
			Obj->PushActionExecuteCommand(ACTION_APPEND,"CloseGate",Obj,0,true);
			Obj->PushActionExecuteCommand(ACTION_APPEND, "DUMMYDisableSiren", Caller, 2, false);
		break;


		case 36:
			int Fahrzeug;
			bool FahrzeugFrei;
			GameObjectList l0 = Game::GetGameObjects(TYPE_VEHICLE);
		        Fahrzeug = -1;
		        for(int i=0; i<l0.GetNumObjects(); i++)
		        {
				GameObject *Obj = l0.GetObject(i);
				if (Obj->HasCommand("bwk_nef") && !Obj->HasCommand("ich_bin_nicht_frei"))
				{
					FahrzeugFrei = false;
					Vehicle v(Obj);
					PersonList pol = v.GetPassengers();
					if (pol.GetNumPersons() >= 1)
					FahrzeugFrei = true;
					if (FahrzeugFrei == true)
					{
						Fahrzeug = i;
						v.Show();
					}
				}
			}
			if (Fahrzeug == -1)
			{
				for(int i=0; i<l0.GetNumObjects(); i++)
		    		{
					GameObject *Obj = l0.GetObject(i);
					if (Obj->HasCommand("f22_nef") && !Obj->HasCommand("ich_bin_nicht_frei"))
					{
						FahrzeugFrei = false;
						Vehicle v(Obj);
						PersonList pol = v.GetPassengers();
						if (pol.GetNumPersons() >= 1)
						FahrzeugFrei = true;
						if (FahrzeugFrei == true)
						{
							Fahrzeug = i;
						}
					}
			  	}
			}
			if (Fahrzeug == -1)
			{
				for(int i=0; i<l0.GetNumObjects(); i++)
		    		{
					GameObject *Obj = l0.GetObject(i);
					if (Obj->HasCommand("f14_nef") && !Obj->HasCommand("ich_bin_nicht_frei"))
					{
						FahrzeugFrei = false;
						Vehicle v(Obj);
						PersonList pol = v.GetPassengers();
						if (pol.GetNumPersons() >= 1)
						FahrzeugFrei = true;
						if (FahrzeugFrei == true)
						{
							Fahrzeug = i;
							v.Show();
						}
					}
	  			}
			}
			if (Fahrzeug < 0)
			{
			  	Mission::PlayHint("Zur Zeit ist kein freies NEF verfügbar! Es wird der Rettungshubschrauber Christoph 29 alarmiert.");
				Caller->PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 66, false);
				return;
			}

		        Mission::PlayHint("+++ NEF wird alarmiert +++");
		        Audio::PlaySample("mod:Audio/FX/alarmierung/alarm_nef.wav");
			GameObject *Obj = l0.GetObject(Fahrzeug);
			Obj->AssignCommand("ich_bin_nicht_frei");
			Obj->PushActionExecuteCommand(ACTION_NEWLIST,"OpenGate",Obj,0,true);
			Obj->PushActionWait(ACTION_APPEND, 3);
			Obj->PushActionLightOn(ACTION_APPEND, true);
			Obj->PushActionWait(ACTION_APPEND, 3);
			Game::FindFreePosition(Obj, Einsatzort, 100);
			Obj->PushActionExecuteCommand(ACTION_APPEND,"VCmdSiren",Obj,0,false);
			Obj->PushActionMove(ACTION_APPEND, Einsatzort, false);
			Obj->PushActionExecuteCommand(ACTION_APPEND,"CloseGate",Obj,0,true);
			Obj->PushActionExecuteCommand(ACTION_APPEND, "DUMMYDisableSiren", Caller, 2, false);
		break;

		case 41:

			int Fahrzeug;
			bool FahrzeugFrei;
			GameObjectList l0 = Game::GetGameObjects(TYPE_VEHICLE);
		        Fahrzeug = -1;
		        for(int i=0; i<l0.GetNumObjects(); i++)
		        {
				GameObject *Obj = l0.GetObject(i);
				if (Obj->HasCommand("pol_nord_mtw1") && !Obj->HasCommand("ich_bin_nicht_frei"))
				{
					FahrzeugFrei = false;
					Vehicle v(Obj);
					PersonList pol = v.GetPassengers();
					if (pol.GetNumPersons() >= 1)
					FahrzeugFrei = true;
					if (FahrzeugFrei == true)
					{
						Fahrzeug = i;
						v.Show();
					}
				}
			}
			if (Fahrzeug < 0)
			{
				Mission::PlayHint("Zur Zeit ist leider kein MTW der Polizei verfügbar!");
			  	return;
			}

			Mission::PlayHint("+++ MTW der Polizei wird gerufen +++");
			GameObject *Obj = l0.GetObject(Fahrzeug);
			Obj->AssignCommand("ich_bin_nicht_frei");
			Obj->PushActionWait(ACTION_APPEND, 3);
			Obj->PushActionLightOn(ACTION_APPEND, true);
			Obj->PushActionWait(ACTION_APPEND, 3);
			Game::FindFreePosition(Obj, Einsatzort, 100);
			Obj->PushActionExecuteCommand(ACTION_APPEND,"VCmdSiren",Obj,0,false);
			Obj->PushActionMove(ACTION_APPEND, Einsatzort);
			Obj->PushActionExecuteCommand(ACTION_APPEND, "DUMMYDisableSiren", Caller, 2, false);
		break;


		case 42:
			int Fahrzeug;
			bool FahrzeugFrei;
			GameObjectList l0 = Game::GetGameObjects(TYPE_VEHICLE);
		        Fahrzeug = -1;
		        for(int i=0; i<l0.GetNumObjects(); i++)
		        {
				GameObject *Obj = l0.GetObject(i);
				if (Obj->HasCommand("pol_nord_kripo1") && !Obj->HasCommand("ich_bin_nicht_frei"))
				{
					FahrzeugFrei = false;
					Vehicle v(Obj);
					PersonList pol = v.GetPassengers();
					if (pol.GetNumPersons() >= 1)
					FahrzeugFrei = true;
					if (FahrzeugFrei == true)
					{
						Fahrzeug = i;
						v.Show();
					}
				}
			}
			if (Fahrzeug == -1)
			{
				for(int i=0; i<l0.GetNumObjects(); i++)
		    		{
					GameObject *Obj = l0.GetObject(i);
					if (Obj->HasCommand("pol_nord_kripo2") && !Obj->HasCommand("ich_bin_nicht_frei"))
					{
						FahrzeugFrei = false;
						Vehicle v(Obj);
						PersonList pol = v.GetPassengers();
						if (pol.GetNumPersons() >= 1)
						FahrzeugFrei = true;
						if (FahrzeugFrei == true)
						{
							Fahrzeug = i;
							v.Show();
						}
					}
			  	}
			}
			if (Fahrzeug < 0)
			{
				Mission::PlayHint("Zur Zeit ist leider kein Fahrzeug der Kripo verfügbar!");
			  	return;
			}

				Mission::PlayHint("+++ Kripo wird gerufen +++");
				GameObject *Obj = l0.GetObject(Fahrzeug);
				Obj->AssignCommand("ich_bin_nicht_frei");
				Obj->PushActionExecuteCommand(ACTION_NEWLIST,"OpenGate",Obj,0,true);
				Obj->PushActionWait(ACTION_APPEND, 3);
				Obj->PushActionLightOn(ACTION_APPEND, true);
				Obj->PushActionWait(ACTION_APPEND, 3);
				Game::FindFreePosition(Obj, Einsatzort, 100);
				Obj->PushActionExecuteCommand(ACTION_APPEND,"VCmdSiren",Obj,0,false);
				Obj->PushActionMove(ACTION_APPEND, Einsatzort);
				Obj->PushActionExecuteCommand(ACTION_APPEND,"CloseGate",Obj,0,true);
				Obj->PushActionExecuteCommand(ACTION_APPEND, "DUMMYDisableSiren", Caller, 2, false);
		break;


		case 44:
			Vehicle *theCar = NULL;
			float bestCar = 0.;
			VehicleList patrolCars(VT_POLICE_MTW, VT_POLICE_STW);
			for (int i = 0; i < patrolCars.GetNumVehicles(); i++) 
			{
				Vehicle *aCar = patrolCars.GetVehicle(i);
				Vehicle v(aCar);
				PersonList pol = v.GetPassengers();
				if (pol.GetNumPersons() >= 1 && !v.HasCommand("ich_bin_nicht_frei"))
				{
					float distCurrCar = Math::dist(Einsatzort.x, Einsatzort.y, aCar->GetPosition().x, aCar->GetPosition().y);
					if (distCurrCar < bestCar || bestCar == 0.) 
					{
						theCar = aCar;
						bestCar = distCurrCar;
					}
				} 
			}
	
			if (theCar)
			{
				Mission::PlayHint("+++ Polizei wird gerufen +++");
				theCar->AssignCommand("ich_bin_nicht_frei");
				theCar->RemoveObjectPath();
				theCar->SetSpeed(13.0.f);
				theCar->PushActionWait(ACTION_NEWLIST, 1);
				theCar->PushActionLightOn(ACTION_APPEND, true);
				theCar->EnableHeadLights(true);
				theCar->PushActionWait(ACTION_APPEND, 3);
				Game::FindFreePosition(theCar, Einsatzort, 100);
				theCar->PushActionExecuteCommand(ACTION_APPEND,"VCmdSiren",theCar,0,false);
				theCar->PushActionMove(ACTION_APPEND, Einsatzort);
				theCar->PushActionExecuteCommand(ACTION_APPEND, "DUMMYDisableSiren", Caller, 2, false);
			} 
			else
				Mission::PlayHint("Zur Zeit ist kein Fahrzeug der Polizei verfügbar!");
			break;


		case 47:
			Mission::PlayHint("+++ THW wird alarmiert +++");
			Audio::PlaySample("mod:Audio/FX/alarmierung/thw_dme.wav");
			GameObjectList l0 = Game::GetGameObjects(TYPE_VEHICLE);
			int loeschzug = 0;
			for(int i=0; i<l0.GetNumObjects(); i++)
			{
        			GameObject *Obj = l0.GetObject(i);
		        	bool kriterien_erfuellt = false;
			        if (Obj->HasCommand("thw_zug_teilnehmer") && !Obj->HasCommand("ich_bin_nicht_frei"))
		        	{
					Vehicle v(Obj);
					PersonList fw = v.GetPassengers();
					if (fw.GetNumPersons() > 0)
					{
						kriterien_erfuellt = true;
						v.Show();
					}
			        }
				if (kriterien_erfuellt == true)
        			{
		 			Vehicle v(Obj);
					loeschzug++;
		 			Obj->AssignCommand("ich_bin_nicht_frei");


					if (v.GetBlinkerStatus() == BLT_BOTH)
					{
						v.EnableBlinker(BLT_NONE);
					}
					if (v.IsSpecialLightEnabled())
					{
						v.EnableSpecialLights(false);
						v.PlayAnimCloseDoor(DAT_SPECIAL, 3.0f);
					}

					if (v.HasCommand("DUMMYHasTriblitz"))
					{
						int UnitID = v.GetID();
						GameObjectList liste = Game::GetGameObjects("Triblitz");
						for(int i = 0; i < liste.GetNumObjects(); i++)
						{
							GameObject *obj = liste.GetObject(i);
							if (obj->GetUserData() == UnitID)
							{
								obj->PushActionDeleteOwner(ACTION_NEWLIST);
							}
						}
						GameObjectList liste2 = Game::GetGameObjects("DummyTriblitz");
						for(int i = 0; i < liste2.GetNumObjects(); i++)
						{
							GameObject *obj = liste2.GetObject(i);
							if (obj->GetUserData() == UnitID)
							{
								obj->PushActionDeleteOwner(ACTION_NEWLIST);
							}
						}
						v.EnableTrafficLight(TLT_NONE);
						v.RemoveCommand("DUMMYHasTriblitz");
					}

		     			// 1. ELW
     					if(Obj->HasCommand("thw_elw1"))
	     				{
     						Obj->PushActionWait(ACTION_APPEND,10);
		     			}
			     		// 2. MLW
     					if(Obj->HasCommand("thw_mlw1"))
     					{
		     				Obj->PushActionWait(ACTION_APPEND,15);
		     			}
			     		// 3. UNIMOG
     					if(Obj->HasCommand("thw_unimog1"))
	     				{
		     				Obj->PushActionWait(ACTION_APPEND,20);
	     				}
					Obj->PushActionExecuteCommand(ACTION_APPEND,"OpenGate",Obj,0,true);
					Obj->PushActionWait(ACTION_APPEND, 3);
					Obj->PushActionLightOn(ACTION_APPEND, true);
					Obj->PushActionWait(ACTION_APPEND, 3);
					Game::FindFreePosition(Obj, Einsatzort, 50);
					Obj->PushActionExecuteCommand(ACTION_APPEND,"VCmdSiren",Obj,0,false);
					Obj->PushActionMove(ACTION_APPEND, Einsatzort);
					Obj->PushActionExecuteCommand(ACTION_APPEND,"CloseGate",Obj,0,true);
					Obj->PushActionExecuteCommand(ACTION_APPEND, "DUMMYDisableSiren", Caller, 2, false);
				}
			}
			if (loeschzug < 1)
			{
				Mission::PlayHint("Das THW ist derzeit nicht verfügbar!");
				return;
			}
		break;


		case 50:
			int Fahrzeug;
			bool FahrzeugFrei;
			GameObjectList l0 = Game::GetGameObjects(TYPE_VEHICLE);
		        Fahrzeug = -1;
		        for(int i=0; i<l0.GetNumObjects(); i++)
		        {
				GameObject *Obj = l0.GetObject(i);
				if (Obj->HasCommand("entstoerdienst") && !Obj->HasCommand("ich_bin_nicht_frei"))
				{
					FahrzeugFrei = false;
					Vehicle v(Obj);
					FahrzeugFrei = true;
					if (FahrzeugFrei == true)
					{
						Fahrzeug = i;
						v.Show();
					}
				}
			}
			if (Fahrzeug < 0)
			{
				Mission::PlayHint("Der Entstördienst Wasser ist momentan nicht verfügbar!");
			  	return;
			}
			Mission::PlayHint("+++ Entstördienst Hamburg Wasser wird gerufen +++");
			GameObject *Obj = l0.GetObject(Fahrzeug);
			Obj->AssignCommand("ich_bin_nicht_frei");
			Obj->PushActionExecuteCommand(ACTION_NEWLIST,"OpenGate",Obj,0,true);
			Obj->PushActionWait(ACTION_APPEND, 3);
			Obj->PushActionLightOn(ACTION_APPEND, true);
			Obj->PushActionWait(ACTION_APPEND, 3);
			Game::FindFreePosition(Obj, Einsatzort, 100);
			Obj->PushActionExecuteCommand(ACTION_APPEND,"VCmdSiren",Obj,0,false);
			Obj->PushActionMove(ACTION_APPEND, Einsatzort);
			Obj->PushActionExecuteCommand(ACTION_APPEND,"CloseGate",Obj,0,true);
			Obj->PushActionExecuteCommand(ACTION_APPEND, "DUMMYDisableSiren", Caller, 2, false);
		break;


		case 51:
			int Fahrzeug;
			bool FahrzeugFrei;
			GameObjectList l0 = Game::GetGameObjects(TYPE_VEHICLE);
		        Fahrzeug = -1;
		        for(int i=0; i<l0.GetNumObjects(); i++)
        		{
				GameObject *Obj = l0.GetObject(i);
				if (Obj->HasCommand("ich_bin_ein_asf") && !Obj->HasCommand("ich_bin_nicht_frei"))
				{
					FahrzeugFrei = false;
					Vehicle v(Obj);
					FahrzeugFrei = true;
					if (FahrzeugFrei == true)
					{
						Fahrzeug = i;
					}
				}
			}

			if (Fahrzeug < 0)
			{
				Mission::PlayHint("Momentan ist kein freies Abschleppfahrzeug verfügbar!");
		  		return;
			}

			Mission::PlayHint("+++ Abschleppfahrzeug wird gerufen +++");
			GameObject *Obj = l0.GetObject(Fahrzeug);

			Obj->AssignCommand("ich_bin_nicht_frei");
			Obj->PushActionWait(ACTION_NEWLIST, 3);
			Obj->PushActionLightOn(ACTION_APPEND, true);
			Obj->PushActionWait(ACTION_APPEND, 3);
			Game::FindFreePosition(Obj, Einsatzort, 100);
			Obj->PushActionExecuteCommand(ACTION_APPEND,"VCmdSiren",Obj,0,false);
			Obj->PushActionMove(ACTION_APPEND, Einsatzort);
			Obj->PushActionExecuteCommand(ACTION_APPEND, "DUMMYDisableSiren", Caller, 2, false);
		break;


		case 54:
			int Fahrzeug;
			bool FahrzeugFrei;
			GameObjectList l0 = Game::GetGameObjects(TYPE_VEHICLE);
		        Fahrzeug = -1;
		        for(int i=0; i<l0.GetNumObjects(); i++)
		        {
				GameObject *Obj = l0.GetObject(i);
				if (Obj->HasCommand("ich_bin_ein_bestattungswagen") && !Obj->HasCommand("ich_bin_nicht_frei"))
				{
					FahrzeugFrei = false;
					Vehicle v(Obj);
					PersonList pol = v.GetPassengers();
					if (pol.GetNumPersons() >= 1)
					FahrzeugFrei = true;
					if (FahrzeugFrei == true)
					{
						Fahrzeug = i;
						v.Show();
					}
				}
			}

			if (Fahrzeug < 0)
			{
				Mission::PlayHint("Momentan ist kein Bestatter verfügbar!");
			  	return;
			}

			Mission::PlayHint("+++ Bestatter wird gerufen +++");
			GameObject *Obj = l0.GetObject(Fahrzeug);
			Obj->AssignCommand("ich_bin_nicht_frei");
			Obj->PushActionWait(ACTION_NEWLIST, 3);
			Obj->PushActionLightOn(ACTION_APPEND, true);
			Obj->PushActionWait(ACTION_APPEND, 3);
			Game::FindFreePosition(Obj, Einsatzort, 100);
			Obj->PushActionExecuteCommand(ACTION_APPEND,"VCmdSiren",Obj,0,false);
			Obj->PushActionMove(ACTION_APPEND, Einsatzort);
			Obj->PushActionExecuteCommand(ACTION_APPEND, "DUMMYDisableSiren", Caller, 2, false);
		break;


		case 56:
			int Fahrzeug;
			bool FahrzeugFrei;
			GameObjectList l0 = Game::GetGameObjects(TYPE_VEHICLE);
		        Fahrzeug = -1;
		        for(int i=0; i<l0.GetNumObjects(); i++)
		        {
				GameObject *Obj = l0.GetObject(i);
				if (Obj->HasCommand("asb_rtw1") && !Obj->HasCommand("ich_bin_nicht_frei"))
				{
					FahrzeugFrei = false;
					Vehicle v(Obj);
					PersonList pol = v.GetPassengers();
					if (pol.GetNumPersons() >= 1)
					FahrzeugFrei = true;
					if (FahrzeugFrei == true)
					{
						Fahrzeug = i;
						v.Show();
					}
				}
			}

			if (Fahrzeug == -1)
			{
				for(int i=0; i<l0.GetNumObjects(); i++)
		    		{
					GameObject *Obj = l0.GetObject(i);
					if (Obj->HasCommand("asb_rtw2") && !Obj->HasCommand("ich_bin_nicht_frei"))
					{
						FahrzeugFrei = false;
						Vehicle v(Obj);
						PersonList pol = v.GetPassengers();
						if (pol.GetNumPersons() >= 1)
						FahrzeugFrei = true;
						if (FahrzeugFrei == true)
						{
							Fahrzeug = i;
							v.Show();
						}
					}
			  	}
			}

			if (Fahrzeug == -1)
			{
				for(int i=0; i<l0.GetNumObjects(); i++)
		    		{
					GameObject *Obj = l0.GetObject(i);
					if (Obj->HasCommand("asb_rtw3") && !Obj->HasCommand("ich_bin_nicht_frei"))
					{
						FahrzeugFrei = false;
						Vehicle v(Obj);
						PersonList pol = v.GetPassengers();
						if (pol.GetNumPersons() >= 1)
						FahrzeugFrei = true;
						if (FahrzeugFrei == true)
						{
							Fahrzeug = i;
							v.Show();
						}
					}
	  			}
			}

			if (Fahrzeug < 0)
			{
				Mission::PlayHint("Zur Zeit ist leider kein ASB RTW verfügbar!");
			  	return;
			}

			Mission::PlayHint("+++ ASB RTW wird alarmiert +++");
			GameObject *Obj = l0.GetObject(Fahrzeug);
			Obj->AssignCommand("ich_bin_nicht_frei");
			Obj->PushActionWait(ACTION_APPEND, 3);
			Obj->PushActionLightOn(ACTION_APPEND, true);
			Obj->PushActionWait(ACTION_APPEND, 3);
			Game::FindFreePosition(Obj, Einsatzort, 100);
			Obj->PushActionExecuteCommand(ACTION_APPEND,"VCmdSiren",Obj,0,false);
			Obj->PushActionMove(ACTION_APPEND, Einsatzort);
			Obj->PushActionExecuteCommand(ACTION_APPEND, "DUMMYDisableSiren", Caller, 2, false);
		break;


		case 59:
			int Fahrzeug;
			bool FahrzeugFrei;
			GameObjectList l0 = Game::GetGameObjects(TYPE_VEHICLE);
		        Fahrzeug = -1;
		        for(int i=0; i<l0.GetNumObjects(); i++)
		        {
				GameObject *Obj = l0.GetObject(i);
				if (Obj->HasCommand("f23_klf") && !Obj->HasCommand("ich_bin_nicht_frei"))
				{
					FahrzeugFrei = false;
					Vehicle v(Obj);
					PersonList pol = v.GetPassengers();
					if (pol.GetNumPersons() >= 1)
					FahrzeugFrei = true;
					if (FahrzeugFrei == true)
					{
						Fahrzeug = i;
						Obj->PushActionExecuteCommand(ACTION_NEWLIST,"RufePersonal", Obj, 2, true);
						char * Wache = "f23";
						char * sndfile = "mod:Audio/FX/alarmierung/alarm_klf.wav";
					}
				}
			}
			if (Fahrzeug == -1)
			{
				for(int i=0; i<l0.GetNumObjects(); i++)
		    		{
					GameObject *Obj = l0.GetObject(i);
					if (Obj->HasCommand("f22_klf") && !Obj->HasCommand("ich_bin_nicht_frei"))
					{
						FahrzeugFrei = false;
						Vehicle v(Obj);
						PersonList pol = v.GetPassengers();
						if (pol.GetNumPersons() >= 1)
						FahrzeugFrei = true;
						if (FahrzeugFrei == true)
						{
							Fahrzeug = i;
							Obj->PushActionExecuteCommand(ACTION_NEWLIST,"RufePersonal", Obj, 2, true);
							char * Wache = "f22";
							char * sndfile = "mod:Audio/FX/alarmierung/alarm_klf.wav";
						}
					}
			  	}
			}
			if (Fahrzeug == -1)
			{
				for(int i=0; i<l0.GetNumObjects(); i++)
    				{
					GameObject *Obj = l0.GetObject(i);
					if (Obj->HasCommand("f33_klf") && !Obj->HasCommand("ich_bin_nicht_frei"))
					{
						FahrzeugFrei = false;
						Vehicle v(Obj);
						PersonList pol = v.GetPassengers();
						if (pol.GetNumPersons() >= 1)
						FahrzeugFrei = true;
						if (FahrzeugFrei == true)
						{
							Fahrzeug = i;
							Obj->PushActionExecuteCommand(ACTION_NEWLIST,"RufePersonal", Obj, 2, true);
							char * Wache = "f12";
							char * sndfile = "mod:Audio/FX/alarmierung/alarm_klf.wav";
						}
					}
			  	}
			}
			if (Fahrzeug == -1)
			{
				for(int i=0; i<l0.GetNumObjects(); i++)
		   		{
					GameObject *Obj = l0.GetObject(i);
					if (Obj->HasCommand("f12_klf") && !Obj->HasCommand("ich_bin_nicht_frei"))
					{
						FahrzeugFrei = false;
						Vehicle v(Obj);
						PersonList pol = v.GetPassengers();
						if (pol.GetNumPersons() >= 1)
						FahrzeugFrei = true;
						if (FahrzeugFrei == true)
						{
							Fahrzeug = i;
							Obj->PushActionExecuteCommand(ACTION_NEWLIST,"RufePersonal", Obj, 2, true);
							char * Wache = "f33";
							char * sndfile = "mod:Audio/FX/alarmierung/alarm_klf.wav";
						}
					}
			  	}
			}
			if (Fahrzeug < 0)
			{
	  			Mission::PlayHint("Zur Zeit sind alle KLFs im Einsatz! Es wird daher der B-Dienst alarmiert!");
				Caller->PushActionExecuteCommand(ACTION_APPEND, "rufe_adienst",Caller,65,false);
			  	return;
			}

		        Mission::PlayHint("+++ KLF wird alarmiert +++");
			if (Wache=="f12")
			{
				GameObjectList WachListe = Game::GetGameObjects("gate_f12_tmf");
				for(int i=0; i < WachListe.GetNumObjects(); i++)
				{
					GameObject *WachObjekt = WachListe.GetObject(i);
					Vector AlarmPosition = WachObjekt->GetPosition();
					Audio::PlaySample3D(sndfile, AlarmPosition, false);
				}
		        }
			if (Wache=="f22")
			{
				GameObjectList WachListe = Game::GetGameObjects("gate_f22_hlf1");
				for(int i=0; i < WachListe.GetNumObjects(); i++)
				{
					GameObject *WachObjekt = WachListe.GetObject(i);
					Vector AlarmPosition = WachObjekt->GetPosition();
					Audio::PlaySample3D(sndfile, AlarmPosition, false);
				}
		        }
			if (Wache=="f23")
			{
				GameObjectList WachListe = Game::GetGameObjects("gate_f23_rtwb");
				for(int i=0; i < WachListe.GetNumObjects(); i++)
				{
					GameObject *WachObjekt = WachListe.GetObject(i);
					Vector AlarmPosition = WachObjekt->GetPosition();
					Audio::PlaySample3D(sndfile, AlarmPosition, false);
				}
		        }
			if (Wache=="f33")
			{
				GameObjectList WachListe = Game::GetGameObjects("gate_f33_rtwa");
				for(int i=0; i < WachListe.GetNumObjects(); i++)
				{
					GameObject *WachObjekt = WachListe.GetObject(i);
					Vector AlarmPosition = WachObjekt->GetPosition();
					Audio::PlaySample3D(sndfile, AlarmPosition, false);
				}
		        }
			GameObject *Obj = l0.GetObject(Fahrzeug);
			Obj->AssignCommand("ich_bin_nicht_frei");
			Obj->PushActionExecuteCommand(ACTION_APPEND,"OpenGate",Obj,0,true);
			Obj->PushActionWait(ACTION_APPEND, 3);
			Obj->PushActionLightOn(ACTION_APPEND, true);
			Obj->PushActionWait(ACTION_APPEND, 3);
			Game::FindFreePosition(Obj, Einsatzort, 100);
			Obj->PushActionExecuteCommand(ACTION_APPEND,"VCmdSiren",Obj,0,false);
			Obj->PushActionMove(ACTION_APPEND, Einsatzort);
			Obj->PushActionExecuteCommand(ACTION_APPEND,"CloseGate",Obj,0,true);
			Obj->PushActionExecuteCommand(ACTION_APPEND, "DUMMYDisableSiren", Caller, 2, false);
		break;


		case 60:
			int Fahrzeug;
			bool FahrzeugFrei;
			GameObjectList l0 = Game::GetGameObjects(TYPE_VEHICLE);
		        Fahrzeug = -1;
		        for(int i=0; i<l0.GetNumObjects(); i++)
		        {
				GameObject *Obj = l0.GetObject(i);
				if (Obj->HasCommand("f23_hlf2") && !Obj->HasCommand("ich_bin_nicht_frei"))
				{
					FahrzeugFrei = false;
					Vehicle v(Obj);
					PersonList pol = v.GetPassengers();
					if (pol.GetNumPersons() >= 1)
					FahrzeugFrei = true;
					if (FahrzeugFrei == true)
					{
						Fahrzeug = i;
						Obj->PushActionExecuteCommand(ACTION_NEWLIST,"RufePersonal", Obj, 6, true);
						char * Wache = "f23";
						char * sndfile = "mod:Audio/FX/alarmierung/alarm_hlf2.wav";
					}
				}
			}
			if (Fahrzeug == -1)
			{
				for(int i=0; i<l0.GetNumObjects(); i++)
    				{
					GameObject *Obj = l0.GetObject(i);
					if (Obj->HasCommand("f23_hlf1") && !Obj->HasCommand("ich_bin_nicht_frei"))
					{
						FahrzeugFrei = false;
						Vehicle v(Obj);
						PersonList pol = v.GetPassengers();
						if (pol.GetNumPersons() >= 1)
						FahrzeugFrei = true;
						if (FahrzeugFrei == true)
						{
							Fahrzeug = i;
							Obj->PushActionExecuteCommand(ACTION_NEWLIST,"RufePersonal", Obj, 6, true);
							char * Wache = "f23";
							char * sndfile = "mod:Audio/FX/alarmierung/alarm_hlf1.wav";
						}
					}
			  	}
			}
			if (Fahrzeug == -1)
			{
				for(int i=0; i<l0.GetNumObjects(); i++)
		    		{
					GameObject *Obj = l0.GetObject(i);
					if (Obj->HasCommand("f22_hlf1") && !Obj->HasCommand("ich_bin_nicht_frei"))
					{
						FahrzeugFrei = false;
						Vehicle v(Obj);
						PersonList pol = v.GetPassengers();
						if (pol.GetNumPersons() >= 1)
						FahrzeugFrei = true;
						if (FahrzeugFrei == true)
						{
							Fahrzeug = i;
							Obj->PushActionExecuteCommand(ACTION_NEWLIST,"RufePersonal", Obj, 6, true);
							char * Wache = "f22";
							char * sndfile = "mod:Audio/FX/alarmierung/alarm_hlf1.wav";
						}
					}
			  	}
			}
			if (Fahrzeug == -1)
			{
				for(int i=0; i<l0.GetNumObjects(); i++)
		    		{
					GameObject *Obj = l0.GetObject(i);
					if (Obj->HasCommand("f12_hlf2") && !Obj->HasCommand("ich_bin_nicht_frei"))
					{
						FahrzeugFrei = false;
						Vehicle v(Obj);
						PersonList pol = v.GetPassengers();
						if (pol.GetNumPersons() >= 1)
						FahrzeugFrei = true;
						if (FahrzeugFrei == true)
						{
							Fahrzeug = i;
							Obj->PushActionExecuteCommand(ACTION_NEWLIST,"RufePersonal", Obj, 6, true);
							char * Wache = "f12";
							char * sndfile = "mod:Audio/FX/alarmierung/alarm_hlf2.wav";
						}
					}
			  	}
			}
			if (Fahrzeug == -1)
			{
				for(int i=0; i<l0.GetNumObjects(); i++)
		    		{
					GameObject *Obj = l0.GetObject(i);
					if (Obj->HasCommand("f12_hlf1") && !Obj->HasCommand("ich_bin_nicht_frei"))
					{
						FahrzeugFrei = false;
						Vehicle v(Obj);
						PersonList pol = v.GetPassengers();
						if (pol.GetNumPersons() >= 1)
						FahrzeugFrei = true;
						if (FahrzeugFrei == true)
						{
							Fahrzeug = i;
							Obj->PushActionExecuteCommand(ACTION_NEWLIST,"RufePersonal", Obj, 6, true);
							char * Wache = "f12";
							char * sndfile = "mod:Audio/FX/alarmierung/alarm_hlf1.wav";
						}
					}
			  	}
			}
			if (Fahrzeug == -1)
			{
				for(int i=0; i<l0.GetNumObjects(); i++)
		    		{
					GameObject *Obj = l0.GetObject(i);
					if (Obj->HasCommand("f33_hlf1") && !Obj->HasCommand("ich_bin_nicht_frei"))
					{
						FahrzeugFrei = false;
						Vehicle v(Obj);
						PersonList pol = v.GetPassengers();
						if (pol.GetNumPersons() >= 1)
						FahrzeugFrei = true;
						if (FahrzeugFrei == true)
						{
							Fahrzeug = i;
							Obj->PushActionExecuteCommand(ACTION_NEWLIST,"RufePersonal", Obj, 6, true);
							char * Wache = "f33";
							char * sndfile = "mod:Audio/FX/alarmierung/alarm_hlf1.wav";
						}
					}
			  	}
			}
			if (Fahrzeug < 0)
			{
				Mission::PlayHint("Derzeit ist kein HLF verfügbar!");
			  	return;
			}

			Mission::PlayHint("+++ HLF wird alarmiert +++");
			if (Wache=="f12")
			{
				GameObjectList WachListe = Game::GetGameObjects("gate_f12_tmf");
				for(int i=0; i < WachListe.GetNumObjects(); i++)
				{
					GameObject *WachObjekt = WachListe.GetObject(i);
					Vector AlarmPosition = WachObjekt->GetPosition();
					Audio::PlaySample3D(sndfile, AlarmPosition, false);
				}
		        }
			if (Wache=="f22")
			{
				GameObjectList WachListe = Game::GetGameObjects("gate_f22_hlf1");
				for(int i=0; i < WachListe.GetNumObjects(); i++)
				{
					GameObject *WachObjekt = WachListe.GetObject(i);
					Vector AlarmPosition = WachObjekt->GetPosition();
					Audio::PlaySample3D(sndfile, AlarmPosition, false);
				}
		        }
			if (Wache=="f23")
			{
				GameObjectList WachListe = Game::GetGameObjects("gate_f23_rtwb");
				for(int i=0; i < WachListe.GetNumObjects(); i++)
				{
					GameObject *WachObjekt = WachListe.GetObject(i);
					Vector AlarmPosition = WachObjekt->GetPosition();
					Audio::PlaySample3D(sndfile, AlarmPosition, false);
				}
		        }
			if (Wache=="f33")
			{
				GameObjectList WachListe = Game::GetGameObjects("gate_f33_rtwa");
				for(int i=0; i < WachListe.GetNumObjects(); i++)
				{
					GameObject *WachObjekt = WachListe.GetObject(i);
					Vector AlarmPosition = WachObjekt->GetPosition();
					Audio::PlaySample3D(sndfile, AlarmPosition, false);
				}
		        }
			GameObject *Obj = l0.GetObject(Fahrzeug);
			Obj->AssignCommand("ich_bin_nicht_frei");
			Obj->PushActionExecuteCommand(ACTION_APPEND,"OpenGate",Obj,0,true);
			Obj->PushActionWait(ACTION_APPEND, 3);
			Obj->PushActionLightOn(ACTION_APPEND, true);
			Obj->PushActionWait(ACTION_APPEND, 3);
			Game::FindFreePosition(Obj, Einsatzort, 100);
			Obj->PushActionExecuteCommand(ACTION_APPEND,"VCmdSiren",Obj,0,false);
			Obj->PushActionMove(ACTION_APPEND, Einsatzort);
			Obj->PushActionExecuteCommand(ACTION_APPEND,"CloseGate",Obj,0,true);
			Obj->PushActionExecuteCommand(ACTION_APPEND, "DUMMYDisableSiren", Caller, 2, false);
		break;


		case 62:
			int Fahrzeug;
			bool FahrzeugFrei;
			GameObjectList l0 = Game::GetGameObjects(TYPE_VEHICLE);
		        Fahrzeug = -1;
		        for(int i=0; i<l0.GetNumObjects(); i++)
		        {
				GameObject *Obj = l0.GetObject(i);
				if (Obj->HasCommand("f23_dlk") && !Obj->HasCommand("ich_bin_nicht_frei"))
				{
					FahrzeugFrei = false;
					Vehicle v(Obj);
					PersonList pol = v.GetPassengers();
					if (pol.GetNumPersons() >= 1)
					FahrzeugFrei = true;
					if (FahrzeugFrei == true)
					{
						Fahrzeug = i;
						Obj->PushActionExecuteCommand(ACTION_NEWLIST,"RufePersonal", Obj, 2, true);
						char * Wache = "f23";
						char * sndfile = "mod:Audio/FX/alarmierung/alarm_dlk.wav";
					}
				}
			}
			if (Fahrzeug == -1)
			{
				for(int i=0; i<l0.GetNumObjects(); i++)
		    		{
					GameObject *Obj = l0.GetObject(i);
					if (Obj->HasCommand("f22_tmf") && !Obj->HasCommand("ich_bin_nicht_frei"))
					{
						FahrzeugFrei = false;
						Vehicle v(Obj);
						PersonList pol = v.GetPassengers();
						if (pol.GetNumPersons() >= 1)
						FahrzeugFrei = true;
						if (FahrzeugFrei == true)
						{
							Fahrzeug = i;
							Obj->PushActionExecuteCommand(ACTION_NEWLIST,"RufePersonal", Obj, 2, true);
							char * Wache = "f22";
							char * sndfile = "mod:Audio/FX/alarmierung/alarm_dlk.wav";
						}
					}
			  	}
			}
			if (Fahrzeug == -1)
			{
				for(int i=0; i<l0.GetNumObjects(); i++)
		    		{
					GameObject *Obj = l0.GetObject(i);
					if (Obj->HasCommand("f33_tmf") && !Obj->HasCommand("ich_bin_nicht_frei"))
					{
						FahrzeugFrei = false;
						Vehicle v(Obj);
						PersonList pol = v.GetPassengers();
						if (pol.GetNumPersons() >= 1)
						FahrzeugFrei = true;
						if (FahrzeugFrei == true)
						{
							Fahrzeug = i;
							Obj->PushActionExecuteCommand(ACTION_NEWLIST,"RufePersonal", Obj, 2, true);
							char * Wache = "f33";
							char * sndfile = "mod:Audio/FX/alarmierung/alarm_dlk.wav";
						}
					}
			  	}
			}
			if (Fahrzeug == -1)
			{
				for(int i=0; i<l0.GetNumObjects(); i++)
    				{
					GameObject *Obj = l0.GetObject(i);
					if (Obj->HasCommand("f12_tmf") && !Obj->HasCommand("ich_bin_nicht_frei"))
					{
						FahrzeugFrei = false;
						Vehicle v(Obj);
						PersonList pol = v.GetPassengers();
						if (pol.GetNumPersons() >= 1)
						FahrzeugFrei = true;
						if (FahrzeugFrei == true)
						{
							Fahrzeug = i;
							Obj->PushActionExecuteCommand(ACTION_NEWLIST,"RufePersonal", Obj, 2, true);
							char * Wache = "f12";
							char * sndfile = "mod:Audio/FX/alarmierung/alarm_dlk.wav";
						}
					}
	  			}
			}
			if (Fahrzeug < 0)
			{
				Mission::PlayHint("Zur Zeit ist leider kein Hubrettungsfahrzeug verfügbar!");
			  	return;
			}

			Mission::PlayHint("+++ Hubrettungsfahrzeug wird alarmiert +++");
			if (Wache=="f12")
			{
				GameObjectList WachListe = Game::GetGameObjects("gate_f12_tmf");
				for(int i=0; i < WachListe.GetNumObjects(); i++)
				{
					GameObject *WachObjekt = WachListe.GetObject(i);
					Vector AlarmPosition = WachObjekt->GetPosition();
					Audio::PlaySample3D(sndfile, AlarmPosition, false);
				}
		        }
			if (Wache=="f22")
			{
				GameObjectList WachListe = Game::GetGameObjects("gate_f22_hlf1");
				for(int i=0; i < WachListe.GetNumObjects(); i++)
				{
					GameObject *WachObjekt = WachListe.GetObject(i);
					Vector AlarmPosition = WachObjekt->GetPosition();
					Audio::PlaySample3D(sndfile, AlarmPosition, false);
				}
		        }
			if (Wache=="f23")
			{
				GameObjectList WachListe = Game::GetGameObjects("gate_f23_rtwb");
				for(int i=0; i < WachListe.GetNumObjects(); i++)
				{
					GameObject *WachObjekt = WachListe.GetObject(i);
					Vector AlarmPosition = WachObjekt->GetPosition();
					Audio::PlaySample3D(sndfile, AlarmPosition, false);
				}
		        }
			if (Wache=="f33")
			{
				GameObjectList WachListe = Game::GetGameObjects("gate_f33_rtwa");
				for(int i=0; i < WachListe.GetNumObjects(); i++)
				{
					GameObject *WachObjekt = WachListe.GetObject(i);
					Vector AlarmPosition = WachObjekt->GetPosition();
					Audio::PlaySample3D(sndfile, AlarmPosition, false);
				}
		        }
			GameObject *Obj = l0.GetObject(Fahrzeug);
			Obj->AssignCommand("ich_bin_nicht_frei");
			Obj->PushActionExecuteCommand(ACTION_APPEND,"OpenGate",Obj,0,true);
			Obj->PushActionWait(ACTION_APPEND, 3);
			Obj->PushActionLightOn(ACTION_APPEND, true);
			Obj->PushActionWait(ACTION_APPEND, 3);
			Game::FindFreePosition(Obj, Einsatzort, 100);
			Obj->PushActionExecuteCommand(ACTION_APPEND,"VCmdSiren",Obj,0,false);
			Obj->PushActionMove(ACTION_APPEND, Einsatzort);
			Obj->PushActionExecuteCommand(ACTION_APPEND,"CloseGate",Obj,0,true);
			Obj->PushActionExecuteCommand(ACTION_APPEND, "DUMMYDisableSiren", Caller, 2, false);
		break;


		case 63:
			int Fahrzeug;
			bool FahrzeugFrei;
			GameObjectList l0 = Game::GetGameObjects(TYPE_VEHICLE);
		        Fahrzeug = -1;
		        for(int i=0; i<l0.GetNumObjects(); i++)
		        {
				GameObject *Obj = l0.GetObject(i);
				if (Obj->HasCommand("f23_rtwa") && !Obj->HasCommand("ich_bin_nicht_frei"))
				{
					FahrzeugFrei = false;
					Vehicle v(Obj);
					PersonList pol = v.GetPassengers();
					if (pol.GetNumPersons() >= 1)
					FahrzeugFrei = true;
					if (FahrzeugFrei == true)
					{
						Fahrzeug = i;
						Obj->PushActionExecuteCommand(ACTION_NEWLIST,"RufePersonal", Obj, 2, true);
                		                char * Wache = "f23";
						char * sndfile = "mod:Audio/FX/alarmierung/alarm_rtwa.wav";
					}
				}
			}
			if (Fahrzeug == -1)
			{
				for(int i=0; i<l0.GetNumObjects(); i++)
    				{
					GameObject *Obj = l0.GetObject(i);
					if (Obj->HasCommand("f23_rtwb") && !Obj->HasCommand("ich_bin_nicht_frei"))
					{
						FahrzeugFrei = false;
						Vehicle v(Obj);
						PersonList pol = v.GetPassengers();
						if (pol.GetNumPersons() >= 1)
						FahrzeugFrei = true;
						if (FahrzeugFrei == true)
						{
							Fahrzeug = i;
							Obj->PushActionExecuteCommand(ACTION_NEWLIST,"RufePersonal", Obj, 2, true);
		                                        char * Wache = "f23";
							char * sndfile = "mod:Audio/FX/alarmierung/alarm_rtwb.wav";
						}
					}
			  	}
			}
			if (Fahrzeug == -1)
			{
				for(int i=0; i<l0.GetNumObjects(); i++)
		    		{
					GameObject *Obj = l0.GetObject(i);
					if (Obj->HasCommand("f23_rtwc") && !Obj->HasCommand("ich_bin_nicht_frei"))
					{
						FahrzeugFrei = false;
						Vehicle v(Obj);
						PersonList pol = v.GetPassengers();
						if (pol.GetNumPersons() >= 1)
						FahrzeugFrei = true;
						if (FahrzeugFrei == true)
						{
							Fahrzeug = i;
							Obj->PushActionExecuteCommand(ACTION_NEWLIST,"RufePersonal", Obj, 2, true);
							char * Wache = "f23";
							char * sndfile = "mod:Audio/FX/alarmierung/alarm_rtwc.wav";
						}
					}
			  	}
			}
			if (Fahrzeug == -1)
			{
				for(int i=0; i<l0.GetNumObjects(); i++)
		    		{
					GameObject *Obj = l0.GetObject(i);
					if (Obj->HasCommand("f22_rtwa") && !Obj->HasCommand("ich_bin_nicht_frei"))
					{
						FahrzeugFrei = false;
						Vehicle v(Obj);
						PersonList pol = v.GetPassengers();
						if (pol.GetNumPersons() >= 1)
						FahrzeugFrei = true;
						if (FahrzeugFrei == true)
						{
							Fahrzeug = i;
							Obj->PushActionExecuteCommand(ACTION_NEWLIST,"RufePersonal", Obj, 2, true);
		                                        char * Wache = "f22";
							char * sndfile = "mod:Audio/FX/alarmierung/alarm_rtwa.wav";
						}
					}
			  	}
			}
			if (Fahrzeug == -1)
			{
				for(int i=0; i<l0.GetNumObjects(); i++)
		    		{
					GameObject *Obj = l0.GetObject(i);
					if (Obj->HasCommand("f22_rtwb") && !Obj->HasCommand("ich_bin_nicht_frei"))
					{
						FahrzeugFrei = false;
						Vehicle v(Obj);
						PersonList pol = v.GetPassengers();
						if (pol.GetNumPersons() >= 1)
						FahrzeugFrei = true;
						if (FahrzeugFrei == true)
						{
							Fahrzeug = i;
							Obj->PushActionExecuteCommand(ACTION_NEWLIST,"RufePersonal", Obj, 2, true);
                		                        char * Wache = "f22";
							char * sndfile = "mod:Audio/FX/alarmierung/alarm_rtwb.wav";
						}
					}
	  			}
			}
			if (Fahrzeug == -1)
			{
				for(int i=0; i<l0.GetNumObjects(); i++)
		    		{
					GameObject *Obj = l0.GetObject(i);
					if (Obj->HasCommand("f22_rtwc") && !Obj->HasCommand("ich_bin_nicht_frei"))
					{
						FahrzeugFrei = false;
						Vehicle v(Obj);
						PersonList pol = v.GetPassengers();
						if (pol.GetNumPersons() >= 1)
						FahrzeugFrei = true;
						if (FahrzeugFrei == true)
						{
							Fahrzeug = i;
							Obj->PushActionExecuteCommand(ACTION_NEWLIST,"RufePersonal", Obj, 2, true);
        		                                char * Wache = "f22";
							char * sndfile = "mod:Audio/FX/alarmierung/alarm_rtwc.wav";
						}
					}
			  	}
			}
			if (Fahrzeug == -1)
			{
				for(int i=0; i<l0.GetNumObjects(); i++)
		    		{
					GameObject *Obj = l0.GetObject(i);
					if (Obj->HasCommand("f12_rtwa") && !Obj->HasCommand("ich_bin_nicht_frei"))
					{
						FahrzeugFrei = false;
						Vehicle v(Obj);
						PersonList pol = v.GetPassengers();
						if (pol.GetNumPersons() >= 1)
						FahrzeugFrei = true;
						if (FahrzeugFrei == true)
						{
							Fahrzeug = i;
							Obj->PushActionExecuteCommand(ACTION_NEWLIST,"RufePersonal", Obj, 2, true);
                                		        char * Wache = "f12";
							char * sndfile = "mod:Audio/FX/alarmierung/alarm_rtwa.wav";
						}
					}
			  	}
			}
			if (Fahrzeug == -1)
			{
				for(int i=0; i<l0.GetNumObjects(); i++)
		    		{
					GameObject *Obj = l0.GetObject(i);
					if (Obj->HasCommand("f12_rtwb") && !Obj->HasCommand("ich_bin_nicht_frei"))
					{
						FahrzeugFrei = false;
						Vehicle v(Obj);
						PersonList pol = v.GetPassengers();
						if (pol.GetNumPersons() >= 1)
						FahrzeugFrei = true;
						if (FahrzeugFrei == true)
						{
							Fahrzeug = i;
							Obj->PushActionExecuteCommand(ACTION_NEWLIST,"RufePersonal", Obj, 2, true);
                		                        char * Wache = "f12";
							char * sndfile = "mod:Audio/FX/alarmierung/alarm_rtwb.wav";
						}
					}
			  	}
			}
			if (Fahrzeug == -1)
			{
				for(int i=0; i<l0.GetNumObjects(); i++)
		    		{
					GameObject *Obj = l0.GetObject(i);
					if (Obj->HasCommand("f12_rtwc") && !Obj->HasCommand("ich_bin_nicht_frei"))
					{
						FahrzeugFrei = false;
						Vehicle v(Obj);
						PersonList pol = v.GetPassengers();
						if (pol.GetNumPersons() >= 1)
						FahrzeugFrei = true;
						if (FahrzeugFrei == true)
						{
							Fahrzeug = i;
							Obj->PushActionExecuteCommand(ACTION_NEWLIST,"RufePersonal", Obj, 2, true);
                		                        char * Wache = "f12";
							char * sndfile = "mod:Audio/FX/alarmierung/alarm_rtwc.wav";
						}
					}
	  			}
			}
			if (Fahrzeug == -1)
			{
				for(int i=0; i<l0.GetNumObjects(); i++)
		    		{
					GameObject *Obj = l0.GetObject(i);
					if (Obj->HasCommand("f33_rtwa") && !Obj->HasCommand("ich_bin_nicht_frei"))
					{
						FahrzeugFrei = false;
						Vehicle v(Obj);
						PersonList pol = v.GetPassengers();
						if (pol.GetNumPersons() >= 1)
						FahrzeugFrei = true;
						if (FahrzeugFrei == true)
						{
							Fahrzeug = i;
							Obj->PushActionExecuteCommand(ACTION_NEWLIST,"RufePersonal", Obj, 2, true);
		                                        char * Wache = "f33";
							char * sndfile = "mod:Audio/FX/alarmierung/alarm_rtwa.wav";
						}
					}
			  	}
			}
			if (Fahrzeug == -1)
			{
				for(int i=0; i<l0.GetNumObjects(); i++)
		    		{
					GameObject *Obj = l0.GetObject(i);
					if (Obj->HasCommand("f33_rtwk") && !Obj->HasCommand("ich_bin_nicht_frei"))
					{
						FahrzeugFrei = false;
						Vehicle v(Obj);
						PersonList pol = v.GetPassengers();
						if (pol.GetNumPersons() >= 1)
						FahrzeugFrei = true;
						if (FahrzeugFrei == true)
						{
							Fahrzeug = i;
							Obj->PushActionExecuteCommand(ACTION_NEWLIST,"RufePersonal", Obj, 2, true);
                		                        char * Wache = "f33";
							char * sndfile = "mod:Audio/FX/alarmierung/alarm_rtwk.wav";
						}
					}
			  	}
			}
			if (Fahrzeug < 0)
			{
			  	Mission::PlayHint("Zur Zeit ist kein RTW verfügbar, es wird ein RTW des ASB alarmiert!");
				Caller->PushActionExecuteCommand(ACTION_APPEND, "rufe_fahrzeug", Caller, 56, false);
				return;
			}

		        Mission::PlayHint("+++ RTW wird alarmiert +++");
			if (Wache=="f12")
			{
				GameObjectList WachListe = Game::GetGameObjects("gate_f12_tmf");
				for(int i=0; i < WachListe.GetNumObjects(); i++)
				{
					GameObject *WachObjekt = WachListe.GetObject(i);
					Vector AlarmPosition = WachObjekt->GetPosition();
					Audio::PlaySample3D(sndfile, AlarmPosition, false);
				}
		         }
			if (Wache=="f22")
			{
				GameObjectList WachListe = Game::GetGameObjects("gate_f22_hlf1");
				for(int i=0; i < WachListe.GetNumObjects(); i++)
				{
					GameObject *WachObjekt = WachListe.GetObject(i);
					Vector AlarmPosition = WachObjekt->GetPosition();
					Audio::PlaySample3D(sndfile, AlarmPosition, false);
				}
		        }
			if (Wache=="f23")
			{
				GameObjectList WachListe = Game::GetGameObjects("gate_f23_rtwb");
				for(int i=0; i < WachListe.GetNumObjects(); i++)
				{
					GameObject *WachObjekt = WachListe.GetObject(i);
					Vector AlarmPosition = WachObjekt->GetPosition();
					Audio::PlaySample3D(sndfile, AlarmPosition, false);
				}
		        }
			if (Wache=="f33")
			{
				GameObjectList WachListe = Game::GetGameObjects("gate_f33_rtwa");
				for(int i=0; i < WachListe.GetNumObjects(); i++)
				{
					GameObject *WachObjekt = WachListe.GetObject(i);
					Vector AlarmPosition = WachObjekt->GetPosition();
					Audio::PlaySample3D(sndfile, AlarmPosition, false);
				}
		         }
			GameObject *Obj = l0.GetObject(Fahrzeug);
			Obj->AssignCommand("ich_bin_nicht_frei");
			Obj->PushActionWait(ACTION_APPEND, 5);
			Obj->PushActionExecuteCommand(ACTION_APPEND,"OpenGate",Obj,0,true);
			Obj->PushActionWait(ACTION_APPEND, 3);
			Obj->PushActionLightOn(ACTION_APPEND, true);
			Obj->PushActionWait(ACTION_APPEND, 3);
			Game::FindFreePosition(Obj, Einsatzort, 100);
			Obj->PushActionExecuteCommand(ACTION_APPEND,"VCmdSiren",Obj,0,false);
			Obj->PushActionMove(ACTION_APPEND, Einsatzort);
			Obj->PushActionExecuteCommand(ACTION_APPEND,"CloseGate",Obj,0,true);
			Obj->PushActionExecuteCommand(ACTION_APPEND, "DUMMYDisableSiren", Caller, 2, false);
		break;


		case 65:
			int Fahrzeug;
			bool FahrzeugFrei;
			GameObjectList l0 = Game::GetGameObjects(TYPE_VEHICLE);
		        Fahrzeug = -1;
		        for(int i=0; i<l0.GetNumObjects(); i++)
		        {
				GameObject *Obj = l0.GetObject(i);
				if (Obj->HasCommand("f23_bdienst") && !Obj->HasCommand("ich_bin_nicht_frei"))
				{
					FahrzeugFrei = false;
					Vehicle v(Obj);
					PersonList pol = v.GetPassengers();
					if (pol.GetNumPersons() >= 1)
					FahrzeugFrei = true;
					if (FahrzeugFrei == true)
					{
						Fahrzeug = i;
						Obj->PushActionExecuteCommand(ACTION_NEWLIST,"RufePersonal", Obj, 2, true);
					}
				}
			}
			if (Fahrzeug == -1)
			{
				for(int i=0; i<l0.GetNumObjects(); i++)
		    		{
					GameObject *Obj = l0.GetObject(i);
					if (Obj->HasCommand("f12_bdienst") && !Obj->HasCommand("ich_bin_nicht_frei"))
					{
						FahrzeugFrei = false;
						Vehicle v(Obj);
						PersonList pol = v.GetPassengers();
						if (pol.GetNumPersons() >= 1)
						FahrzeugFrei = true;
						if (FahrzeugFrei == true)
						{
							Fahrzeug = i;
							Obj->PushActionExecuteCommand(ACTION_NEWLIST,"RufePersonal", Obj, 2, true);
						}
					}
			  	}
			}
			if (Fahrzeug < 0)
			{
				Mission::PlayHint("Der B-Dienst ist zur Zeit nicht verfügbar! Es wird der A-Dienst alarmiert!");
				Caller->PushActionExecuteCommand(ACTION_APPEND, "rufe_adienst",Caller,19,false);
			  	return;
			}

			Mission::PlayHint("+++ B-Dienst wird alarmiert +++");
			Audio::PlaySample("mod:Audio/FX/alarmierung/alarm_sonder.wav");
			GameObject *Obj = l0.GetObject(Fahrzeug);
			Obj->AssignCommand("ich_bin_nicht_frei");
			Obj->PushActionExecuteCommand(ACTION_APPEND,"OpenGate",Obj,0,true);
			Obj->PushActionWait(ACTION_APPEND, 3);
			Obj->PushActionLightOn(ACTION_APPEND, true);
			Obj->PushActionWait(ACTION_APPEND, 3);
			Game::FindFreePosition(Obj, Einsatzort, 100);
			Obj->PushActionExecuteCommand(ACTION_APPEND,"VCmdSiren",Obj,0,false);
			Obj->PushActionMove(ACTION_APPEND, Einsatzort);
			Obj->PushActionExecuteCommand(ACTION_APPEND,"CloseGate",Obj,0,true);
			Obj->PushActionExecuteCommand(ACTION_APPEND, "DUMMYDisableSiren", Caller, 2, false);
		break;


		case 66:
			int Fahrzeug;
			bool FahrzeugFrei;
			GameObjectList l0 = Game::GetGameObjects(TYPE_VEHICLE);
		        Fahrzeug = -1;
		        for(int i=0; i<l0.GetNumObjects(); i++)
		        {
				GameObject *Obj = l0.GetObject(i);
				if (Obj->HasCommand("rth_chr29") && !Obj->HasCommand("ich_bin_nicht_frei"))
				{
					FahrzeugFrei = false;
					Vehicle v(Obj);
					PersonList pol = v.GetPassengers();
					if (pol.GetNumPersons() >= 1)
					FahrzeugFrei = true;
					if (FahrzeugFrei == true)
					{
						Fahrzeug = i;
						v.Show();
					}
				}
			}

			if (Fahrzeug < 0)
			{
				Mission::PlayHint("Der Rettungshubschrauber ist zur Zeit nicht verfügbar!");
			  	return;
			}

			Mission::PlayHint("+++ RTH Christoph 29 wird alarmiert +++");
			Audio::PlaySample("mod:Audio/FX/alarmierung/alarm_sonder.wav");
			GameObject *Obj = l0.GetObject(Fahrzeug);
			Obj->AssignCommand("ich_bin_nicht_frei");
			Obj->PushActionWait(ACTION_APPEND, 3);
			Obj->PushActionLightOn(ACTION_APPEND, true);
			Obj->PushActionWait(ACTION_APPEND, 3);
			Game::FindFreePosition(Obj, Einsatzort, 100);
			Obj->PushActionFlyTo(ACTION_APPEND, Einsatzort, false, -1.0f);
			Obj->PushActionExecuteCommand(ACTION_APPEND, "DUMMYDisableSiren", Caller, 2, false);
		break;


		case 112:
		 	GameObjectList l0 = Game::GetGameObjects(TYPE_VEHICLE);
		      	int loeschzug = 0;

			Mission::PlayHint("+++ Löschzug 12 wird alarmiert +++");
			char * sndfile = "mod:Audio/FX/alarmierung/alarm_loeschzug.wav";
			GameObjectList WachListe = Game::GetGameObjects("gate_f12_tmf");
			for(int i=0; i < WachListe.GetNumObjects(); i++)
			{
				GameObject *WachObjekt = WachListe.GetObject(i);
				Vector AlarmPosition = WachObjekt->GetPosition();
				Audio::PlaySample3D(sndfile, AlarmPosition, false);
		 	}
		  	for(int i=0; i<l0.GetNumObjects(); i++)
			{
				GameObject *Obj = l0.GetObject(i);
				bool kriterien_erfuellt = false;
				if (Obj->HasCommand("loeschzug_f12_teilnehmer") && !Obj->HasCommand("ich_bin_nicht_frei"))
				{
					Vehicle v(Obj);
					PersonList fw = v.GetPassengers();
					if (fw.GetNumPersons() > 0)
						kriterien_erfuellt = true;
				}
				if (kriterien_erfuellt == true)
				{
					Vehicle v(Obj);
			         	loeschzug++;
					Obj->AssignCommand("ich_bin_nicht_frei");

						if (v.GetBlinkerStatus() == BLT_BOTH)
						{
							v.EnableBlinker(BLT_NONE);
						}
						if (v.IsSpecialLightEnabled())
						{
							v.EnableSpecialLights(false);
							v.PlayAnimCloseDoor(DAT_SPECIAL, 3.0f);
						}

					if (v.HasCommand("DUMMYHasTriblitz"))
					{
						int UnitID = v.GetID();
						GameObjectList liste = Game::GetGameObjects("Triblitz");
						for(int i = 0; i < liste.GetNumObjects(); i++)
						{
							GameObject *obj = liste.GetObject(i);
							if (obj->GetUserData() == UnitID)
							{
								obj->PushActionDeleteOwner(ACTION_NEWLIST);
							}
						}
						GameObjectList liste2 = Game::GetGameObjects("DummyTriblitz");
						for(int i = 0; i < liste2.GetNumObjects(); i++)
						{
							GameObject *obj = liste2.GetObject(i);
							if (obj->GetUserData() == UnitID)
							{
								obj->PushActionDeleteOwner(ACTION_NEWLIST);
							}
						}
						v.EnableTrafficLight(TLT_NONE);
						v.RemoveCommand("DUMMYHasTriblitz");
					}

					// 1. KLF
					if(Obj->HasCommand("f12_klf"))
			     		{
						Obj->PushActionExecuteCommand(ACTION_NEWLIST,"RufePersonal", Obj, 2, true);
			     			Obj->PushActionWait(ACTION_APPEND,0);
			     		}
			     		// 2. HLF1
			     		if(Obj->HasCommand("f12_hlf1"))
			     		{
						Obj->PushActionExecuteCommand(ACTION_NEWLIST,"RufePersonal", Obj, 6, true);
			     			Obj->PushActionWait(ACTION_APPEND,10);
			     		}
			     		// 3. DLK
			     		if(Obj->HasCommand("f12_tmf"))
			     		{
						Obj->PushActionExecuteCommand(ACTION_NEWLIST,"RufePersonal", Obj, 2, true);
			     			Obj->PushActionWait(ACTION_APPEND,12);
			     		}
			     		// 4. HLF2
			     		if(Obj->HasCommand("f12_hlf2"))
			     		{
						Obj->PushActionExecuteCommand(ACTION_NEWLIST,"RufePersonal", Obj, 6, true);
			     			Obj->PushActionWait(ACTION_APPEND,14);
			     		}
					Obj->PushActionExecuteCommand(ACTION_APPEND,"OpenGate",Obj,0,true);
					Obj->PushActionWait(ACTION_APPEND, 3);
					Obj->PushActionLightOn(ACTION_APPEND, true);
					Obj->PushActionWait(ACTION_APPEND, 3);
					Game::FindFreePosition(Obj, Einsatzort, 100);
					Obj->PushActionExecuteCommand(ACTION_APPEND,"VCmdSiren",Obj,0,false);
					Obj->PushActionMove(ACTION_APPEND, Einsatzort);
					Obj->PushActionExecuteCommand(ACTION_APPEND,"CloseGate",Obj,0,true);
					Obj->PushActionExecuteCommand(ACTION_APPEND, "DUMMYDisableSiren", Caller, 2, false);
				}
			}
			if (loeschzug < 1)
				Caller->PushActionExecuteCommand(ACTION_INSERT,"rufe_fahrzeug",Target,133,false);
		break;


		case 122:
			GameObjectList l0 = Game::GetGameObjects(TYPE_VEHICLE);
			int loeschzug = 0;

			Mission::PlayHint("+++ Löschzug 22 wird alarmiert +++");
			char * sndfile = "mod:Audio/FX/alarmierung/alarm_loeschzug.wav";
			GameObjectList WachListe = Game::GetGameObjects("gate_f22_hlf1");
			for(int i=0; i < WachListe.GetNumObjects(); i++)
			{
				GameObject *WachObjekt = WachListe.GetObject(i);
				Vector AlarmPosition = WachObjekt->GetPosition();
				Audio::PlaySample3D(sndfile, AlarmPosition, false);
			}
			for(int i=0; i<l0.GetNumObjects(); i++)
			{
				GameObject *Obj = l0.GetObject(i);
				bool kriterien_erfuellt = false;
				if (Obj->HasCommand("loeschzug_f22_teilnehmer") && !Obj->HasCommand("ich_bin_nicht_frei"))
				{
					Vehicle v(Obj);
					PersonList fw = v.GetPassengers();
					if (fw.GetNumPersons() > 0)
					kriterien_erfuellt = true;
			        }
			        if (kriterien_erfuellt == true)
			        {
					Vehicle v(Obj);
			         	loeschzug++;
					Obj->AssignCommand("ich_bin_nicht_frei");

						if (v.GetBlinkerStatus() == BLT_BOTH)
						{
							v.EnableBlinker(BLT_NONE);
						}
						if (v.IsSpecialLightEnabled())
						{
							v.EnableSpecialLights(false);
							v.PlayAnimCloseDoor(DAT_SPECIAL, 3.0f);
						}

					if (v.HasCommand("DUMMYHasTriblitz"))
					{
						int UnitID = v.GetID();
						GameObjectList liste = Game::GetGameObjects("Triblitz");
						for(int i = 0; i < liste.GetNumObjects(); i++)
						{
							GameObject *obj = liste.GetObject(i);
							if (obj->GetUserData() == UnitID)
							{
								obj->PushActionDeleteOwner(ACTION_NEWLIST);
							}
						}
						GameObjectList liste2 = Game::GetGameObjects("DummyTriblitz");
						for(int i = 0; i < liste2.GetNumObjects(); i++)
						{
							GameObject *obj = liste2.GetObject(i);
							if (obj->GetUserData() == UnitID)
							{
								obj->PushActionDeleteOwner(ACTION_NEWLIST);
							}
						}
						v.EnableTrafficLight(TLT_NONE);
						v.RemoveCommand("DUMMYHasTriblitz");
					}

					// 1. KLF
					if(Obj->HasCommand("f22_klf"))
			     		{
						Obj->PushActionExecuteCommand(ACTION_NEWLIST,"RufePersonal", Obj, 2, true);
			     			Obj->PushActionWait(ACTION_APPEND,0);
			     		}
					// 2. HLF1
			     		if(Obj->HasCommand("f22_hlf1"))
			     		{
						Obj->PushActionExecuteCommand(ACTION_NEWLIST,"RufePersonal", Obj, 6, true);
			     			Obj->PushActionWait(ACTION_APPEND,5);
			     		}
			     		// 3. DLK
			     		if(Obj->HasCommand("f22_tmf"))
		     			{
						Obj->PushActionExecuteCommand(ACTION_NEWLIST,"RufePersonal", Obj, 2, true);
			     			Obj->PushActionWait(ACTION_APPEND,8);
			     		}
					Obj->PushActionExecuteCommand(ACTION_APPEND,"OpenGate",Obj,0,true);
					Obj->PushActionWait(ACTION_APPEND, 3);
					Obj->PushActionLightOn(ACTION_APPEND, true);
					Obj->PushActionWait(ACTION_APPEND, 3);
					Game::FindFreePosition(Obj, Einsatzort, 100);
					Obj->PushActionExecuteCommand(ACTION_APPEND,"VCmdSiren",Obj,0,false);
					Obj->PushActionMove(ACTION_APPEND, Einsatzort);
					Obj->PushActionExecuteCommand(ACTION_APPEND,"CloseGate",Obj,0,true);
					Obj->PushActionExecuteCommand(ACTION_APPEND, "DUMMYDisableSiren", Caller, 2, false);
				}
			}
			if (loeschzug < 1)
				Caller->PushActionExecuteCommand(ACTION_INSERT,"rufe_fahrzeug",Target,123,false);
		break;


		case 123:
			GameObjectList l0 = Game::GetGameObjects(TYPE_VEHICLE);
		 	int loeschzug = 0;

			Mission::PlayHint("+++ Löschzug 23 wird alarmiert +++");
			char * sndfile = "mod:Audio/FX/alarmierung/alarm_loeschzug.wav";
			GameObjectList WachListe = Game::GetGameObjects("gate_f23_rtwb");
			for(int i=0; i < WachListe.GetNumObjects(); i++)
			{
				GameObject *WachObjekt = WachListe.GetObject(i);
				Vector AlarmPosition = WachObjekt->GetPosition();
				Audio::PlaySample3D(sndfile, AlarmPosition, false);
			}
			for(int i=0; i<l0.GetNumObjects(); i++)
			{
				GameObject *Obj = l0.GetObject(i);
				bool kriterien_erfuellt = false;
				if (Obj->HasCommand("loeschzug_f23_teilnehmer") && !Obj->HasCommand("ich_bin_nicht_frei"))
				{
					Vehicle v(Obj);
					PersonList fw = v.GetPassengers();
					if (fw.GetNumPersons() > 0)
						kriterien_erfuellt = true;
				}
				if (kriterien_erfuellt == true)
				{
					Vehicle v(Obj);
			         	loeschzug++;
					Obj->AssignCommand("ich_bin_nicht_frei");

						if (v.GetBlinkerStatus() == BLT_BOTH)
						{
							v.EnableBlinker(BLT_NONE);
						}
						if (v.IsSpecialLightEnabled())
						{
							v.EnableSpecialLights(false);
							v.PlayAnimCloseDoor(DAT_SPECIAL, 3.0f);
						}

					if (v.HasCommand("DUMMYHasTriblitz"))
					{
						int UnitID = v.GetID();
						GameObjectList liste = Game::GetGameObjects("Triblitz");
						for(int i = 0; i < liste.GetNumObjects(); i++)
						{
							GameObject *obj = liste.GetObject(i);
							if (obj->GetUserData() == UnitID)
							{
								obj->PushActionDeleteOwner(ACTION_NEWLIST);
							}
						}
						GameObjectList liste2 = Game::GetGameObjects("DummyTriblitz");
						for(int i = 0; i < liste2.GetNumObjects(); i++)
						{
							GameObject *obj = liste2.GetObject(i);
							if (obj->GetUserData() == UnitID)
							{
								obj->PushActionDeleteOwner(ACTION_NEWLIST);
							}
						}
						v.EnableTrafficLight(TLT_NONE);
						v.RemoveCommand("DUMMYHasTriblitz");
					}
					// 1. KLF
					if(Obj->HasCommand("f23_klf"))
			     		{
						Obj->PushActionExecuteCommand(ACTION_NEWLIST,"RufePersonal", Obj, 2, true);
			     			Obj->PushActionWait(ACTION_APPEND,0);
			     		}
			     		// 2. HLF1
			     		if(Obj->HasCommand("f23_hlf1"))
			     		{
						Obj->PushActionExecuteCommand(ACTION_NEWLIST,"RufePersonal", Obj, 6, true);
			     			Obj->PushActionWait(ACTION_APPEND,7);
			     		}
			     		// 3. DLK
			     		if(Obj->HasCommand("f23_dlk"))
			     		{
						Obj->PushActionExecuteCommand(ACTION_NEWLIST,"RufePersonal", Obj, 2, true);
			     			Obj->PushActionWait(ACTION_APPEND,13);
			     		}
			     		// 4. HLF2
			     		if(Obj->HasCommand("f23_hlf2"))
			     		{
						Obj->PushActionExecuteCommand(ACTION_NEWLIST,"RufePersonal", Obj, 6, true);
			     			Obj->PushActionWait(ACTION_APPEND,16);
			     		}
					Obj->PushActionExecuteCommand(ACTION_APPEND,"OpenGate",Obj,0,true);
					Obj->PushActionWait(ACTION_APPEND, 3);
					Obj->PushActionLightOn(ACTION_APPEND, true);
					Obj->PushActionWait(ACTION_APPEND, 3);
					Game::FindFreePosition(Obj, Einsatzort, 100);
					Obj->PushActionExecuteCommand(ACTION_APPEND,"VCmdSiren",Obj,0,false);
					Obj->PushActionMove(ACTION_APPEND, Einsatzort);
					Obj->PushActionExecuteCommand(ACTION_APPEND,"CloseGate",Obj,0,true);
					Obj->PushActionExecuteCommand(ACTION_APPEND, "DUMMYDisableSiren", Caller, 2, false);
				}
			}
			if (loeschzug < 1) Caller->PushActionExecuteCommand(ACTION_INSERT,"rufe_fahrzeug",Target,122,false);
		break;


		case 133:
			GameObjectList l0 = Game::GetGameObjects(TYPE_VEHICLE);
			int loeschzug = 0;

			Mission::PlayHint("+++ Löschzug 33 wird alarmiert +++");
			char * sndfile = "mod:Audio/FX/alarmierung/alarm_loeschzug.wav";
			GameObjectList WachListe = Game::GetGameObjects("gate_f33_rtwa");
			for(int i=0; i < WachListe.GetNumObjects(); i++)
			{
				GameObject *WachObjekt = WachListe.GetObject(i);
				Vector AlarmPosition = WachObjekt->GetPosition();
				Audio::PlaySample3D(sndfile, AlarmPosition, false);
			}
			for(int i=0; i<l0.GetNumObjects(); i++)
			{
				GameObject *Obj = l0.GetObject(i);
				bool kriterien_erfuellt = false;
				if (Obj->HasCommand("loeschzug_f33_teilnehmer") && !Obj->HasCommand("ich_bin_nicht_frei"))
				{
					Vehicle v(Obj);
					PersonList fw = v.GetPassengers();
					if (fw.GetNumPersons() > 0)
						kriterien_erfuellt = true;
				}
				if (kriterien_erfuellt == true)
				{
					Vehicle v(Obj);
			         	loeschzug++;
					Obj->AssignCommand("ich_bin_nicht_frei");

						if (v.GetBlinkerStatus() == BLT_BOTH)
						{
							v.EnableBlinker(BLT_NONE);
						}
						if (v.IsSpecialLightEnabled())
						{
							v.EnableSpecialLights(false);
							v.PlayAnimCloseDoor(DAT_SPECIAL, 3.0f);
						}

					if (v.HasCommand("DUMMYHasTriblitz"))
					{
						int UnitID = v.GetID();
						GameObjectList liste = Game::GetGameObjects("Triblitz");
						for(int i = 0; i < liste.GetNumObjects(); i++)
						{
							GameObject *obj = liste.GetObject(i);
							if (obj->GetUserData() == UnitID)
							{
								obj->PushActionDeleteOwner(ACTION_NEWLIST);
							}
						}
						GameObjectList liste2 = Game::GetGameObjects("DummyTriblitz");
						for(int i = 0; i < liste2.GetNumObjects(); i++)
						{
							GameObject *obj = liste2.GetObject(i);
							if (obj->GetUserData() == UnitID)
							{
								obj->PushActionDeleteOwner(ACTION_NEWLIST);
							}
						}
						v.EnableTrafficLight(TLT_NONE);
						v.RemoveCommand("DUMMYHasTriblitz");
					}

					// 1. KLF
					if(Obj->HasCommand("f33_klf"))
			     		{
						Obj->PushActionExecuteCommand(ACTION_NEWLIST,"RufePersonal", Obj, 2, true);
			     			Obj->PushActionWait(ACTION_APPEND,0);
			     		}
			     		// 2. HLF1
			     		if(Obj->HasCommand("f33_hlf1"))
			     		{
						Obj->PushActionExecuteCommand(ACTION_NEWLIST,"RufePersonal", Obj, 6, true);
			     			Obj->PushActionWait(ACTION_APPEND,5);
			     		}
			     		// 3. DLK
			     		if(Obj->HasCommand("f33_tmf"))
			     		{
						Obj->PushActionExecuteCommand(ACTION_NEWLIST,"RufePersonal", Obj, 2, true);
			     			Obj->PushActionWait(ACTION_APPEND,8);
			     		}
					Obj->PushActionExecuteCommand(ACTION_APPEND,"OpenGate",Obj,0,true);
					Obj->PushActionWait(ACTION_APPEND, 3);
					Obj->PushActionLightOn(ACTION_APPEND, true);
					Obj->PushActionWait(ACTION_APPEND, 3);
					Game::FindFreePosition(Obj, Einsatzort, 100);
					Obj->PushActionExecuteCommand(ACTION_APPEND,"VCmdSiren",Obj,0,false);
					Obj->PushActionMove(ACTION_APPEND, Einsatzort);
					Obj->PushActionExecuteCommand(ACTION_APPEND,"CloseGate",Obj,0,true);
					Obj->PushActionExecuteCommand(ACTION_APPEND, "DUMMYDisableSiren", Caller, 2, false);
				}
			}
			if (loeschzug < 1)
				Caller->PushActionExecuteCommand(ACTION_INSERT,"rufe_fahrzeug",Target,122,false);
		break;

		case 134:
			int Fahrzeug;
			bool FahrzeugFrei;
			GameObjectList l0 = Game::GetGameObjects(TYPE_VEHICLE);
		        Fahrzeug = -1;
		        for(int i=0; i<l0.GetNumObjects(); i++)
		        {
				GameObject *Obj = l0.GetObject(i);
				if (Obj->HasCommand("vattenfall") && !Obj->HasCommand("ich_bin_nicht_frei"))
				{
					FahrzeugFrei = false;
					Vehicle v(Obj);
					FahrzeugFrei = true;
					if (FahrzeugFrei == true)
					{
						Fahrzeug = i;
						v.Show();
					}
				}
			}
			if (Fahrzeug < 0)
			{
				Mission::PlayHint("Der Vattenfall Entstörungsdienst ist momentan nicht verfügbar!");
			  	return;
			}
			Mission::PlayHint("+++ Vattenfall Entstördienst wird gerufen +++");
			GameObject *Obj = l0.GetObject(Fahrzeug);
			Obj->AssignCommand("ich_bin_nicht_frei");
			Obj->PushActionExecuteCommand(ACTION_NEWLIST,"OpenGate",Obj,0,true);
			Obj->PushActionWait(ACTION_APPEND, 3);
			Obj->PushActionLightOn(ACTION_APPEND, true);
			Obj->PushActionWait(ACTION_APPEND, 3);
			Game::FindFreePosition(Obj, Einsatzort, 100);
			Obj->PushActionExecuteCommand(ACTION_APPEND,"VCmdSiren",Obj,0,false);
			Obj->PushActionMove(ACTION_APPEND, Einsatzort);
			Obj->PushActionExecuteCommand(ACTION_APPEND,"CloseGate",Obj,0,true);
			Obj->PushActionExecuteCommand(ACTION_APPEND, "DUMMYDisableSiren", Caller, 2, false);
		break;


		}
		Caller->PushActionWait(ACTION_INSERT, 5);

		if (Caller->HasName("EinsatzortDummy"))
			Caller->PushActionDeleteOwner(ACTION_APPEND);
	}
};

object AlarmFF : CommandScript
{
	AlarmFF()
	{
	}

	bool CheckTarget(GameObject *Caller, Actor *Target, int ChildID)
	{
		if (!Caller->IsValid())
		return false;

		return true;
	}

	void PushActions(GameObject *Caller, Actor *Target, int ChildID)
	{
		switch(ChildID)
		{
			case 0:
				const int MAX_PATHES = 6;
				const char * pathnames[MAX_PATHES];
				const char PATHNAME1[] = "f3917_firefighter1";
				const char PATHNAME2[] = "f3917_firefighter2";
				const char PATHNAME3[] = "f3917_firefighter3";
				const char PATHNAME4[] = "f3917_firefighter4";
				const char PATHNAME5[] = "f3917_firefighter5";
				const char PATHNAME6[] = "f3917_firefighter6";
				const int MAX_PROTOTYPES = 6;
				const char * prototypes[MAX_PROTOTYPES];
				const char PROTOTYPE1[] = "mod:Prototypes/Persons/Civil/civildeliveryman.e4p";
				const char PROTOTYPE2[] = "mod:Prototypes/Persons/Civil/civilman01.e4p";
				const char PROTOTYPE3[] = "mod:Prototypes/Persons/Civil/civilman02_blue.e4p";
				const char PROTOTYPE4[] = "mod:Prototypes/Persons/Civil/civilman03_green.e4p";
				const char PROTOTYPE5[] = "mod:Prototypes/Persons/Civil/civilrocker02.e4p";
				const char PROTOTYPE6[] = "mod:Prototypes/Persons/Civil/firewatchguy01.e4p";
				pathnames[0] = PATHNAME1;
				pathnames[1] = PATHNAME2;
				pathnames[2] = PATHNAME3;
				pathnames[3] = PATHNAME4;
				pathnames[4] = PATHNAME5;
				pathnames[5] = PATHNAME6;
				prototypes[0] = PROTOTYPE1;
				prototypes[1] = PROTOTYPE2;
				prototypes[2] = PROTOTYPE3;
				prototypes[3] = PROTOTYPE4;
				prototypes[4] = PROTOTYPE5;
				prototypes[5] = PROTOTYPE6;
				Caller->PushActionWait(ACTION_NEWLIST, 1.0f);
				for(int i = 0; i < MAX_PATHES; i++)
				{
					int index = Math::rand() % MAX_PROTOTYPES;
					Person p = Game::CreatePerson(prototypes[index], "spawned_ff_firefighter");
					if (Game::IsMultiplayer())
					{
						int PlayerIDTemp = Caller->GetPlayerMP();
						p.SetPlayerMP(PlayerIDTemp);
					}
					ActorList actor_path = Game::GetActors(pathnames[i]);
					if(actor_path.GetActor(0))
					{
						Path path(actor_path.GetActor(0));
						path.SetOnFinishDeleteObject(true);
						p.SetPosition(path.GetStartPosition());
						p.SetCommandable(false);
						p.PushActionSwitchAnim(ACTION_NEWLIST, "run");
					}
					p.SetObjectPath(pathnames[i], 7.0f, true);
				}		
			break;

			case 1:
				Caller->SetCommandable(false);
			break;

			case 2:
				GameObjectList FFWacheListe = Game::GetGameObjects("f3917_entry");
				GameObject *FFWache = FFWacheListe.GetObject(0);
				if (FFWache->HasCommand("ich_bin_kein_fz"))
					FFWache->RemoveCommand("ich_bin_kein_fz");
			break;
		}
	}
};